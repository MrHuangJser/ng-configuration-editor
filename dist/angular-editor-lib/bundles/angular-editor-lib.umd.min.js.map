{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../projects/angular-editor-lib/src/lib/services/utils.service.ts","../../projects/angular-editor-lib/src/lib/store.ts","../projects/angular-editor-lib/src/lib/services/store.service.ts","../esm2015/projects/angular-editor-lib/src/lib/components/bordered-area/bordered-area.component.html","../esm2015/projects/angular-editor-lib/src/lib/components/bordered-area/bordered-area.component.ts","../esm2015/projects/angular-editor-lib/src/lib/components/box-item/box-item.component.html","../esm2015/projects/angular-editor-lib/src/lib/components/box-item/box-item.component.ts","../esm2015/projects/angular-editor-lib/src/lib/components/canvas-background/canvas-background.component.html","../esm2015/projects/angular-editor-lib/src/lib/components/canvas-background/canvas-background.component.ts","../esm2015/projects/angular-editor-lib/src/lib/components/canvas-grid/canvas-grid.component.ts","../projects/angular-editor-lib/src/lib/actions/border-and-selected.actions.ts","../projects/angular-editor-lib/src/lib/actions/canvas.actions.ts","../projects/angular-editor-lib/src/lib/actions/nodes.actions.ts","../projects/angular-editor-lib/src/lib/actions/refline.actions.ts","../esm2015/projects/angular-editor-lib/src/lib/components/canvas-grid/canvas-grid.component.html","../projects/angular-editor-lib/src/lib/directives/draggable.directive.ts","../esm2015/projects/angular-editor-lib/src/lib/components/canvas/canvas.component.html","../esm2015/projects/angular-editor-lib/src/lib/components/canvas/canvas.component.ts","../esm2015/projects/angular-editor-lib/src/lib/components/layer-tree/layer-tree.component.html","../esm2015/projects/angular-editor-lib/src/lib/components/layer-tree/layer-tree.component.ts","../esm2015/projects/angular-editor-lib/src/lib/components/panel/panel.component.html","../esm2015/projects/angular-editor-lib/src/lib/components/panel/panel.component.ts","../esm2015/lib/components/projects/angular-editor-lib/src/lib/components/property-form/forms/canvas-forms/canvas-forms.component.html","../esm2015/lib/components/projects/angular-editor-lib/src/lib/components/property-form/forms/canvas-forms/canvas-forms.component.ts","../esm2015/lib/components/projects/angular-editor-lib/src/lib/components/property-form/forms/widget-form/widget-form.component.html","../esm2015/lib/components/projects/angular-editor-lib/src/lib/components/property-form/forms/widget-form/widget-form.component.ts","../esm2015/projects/angular-editor-lib/src/lib/components/property-form/property-form.component.html","../esm2015/projects/angular-editor-lib/src/lib/components/property-form/property-form.component.ts","../esm2015/projects/angular-editor-lib/src/lib/components/resize-handle/resize-handle.component.html","../esm2015/projects/angular-editor-lib/src/lib/components/resize-handle/resize-handle.component.ts","../esm2015/projects/angular-editor-lib/src/lib/components/rotate-handle/rotate-handle.component.ts","../esm2015/projects/angular-editor-lib/src/lib/components/rotate-handle/rotate-handle.component.html","../projects/angular-editor-lib/src/lib/directives/no-zoom-area.directive.ts","../projects/angular-editor-lib/src/lib/directives/selector.directive.ts","../projects/angular-editor-lib/src/lib/directives/zoom-area.directive.ts","../projects/angular-editor-lib/src/lib/directives/ce-toolbar.directive.ts","../esm2015/projects/angular-editor-lib/src/lib/components/toolbar/toolbar.component.html","../esm2015/projects/angular-editor-lib/src/lib/components/toolbar/toolbar.component.ts","../esm2015/projects/angular-editor-lib/src/lib/components/widget-list/widget-list.component.ts","../esm2015/projects/angular-editor-lib/src/lib/components/widget-list/widget-list.component.html","../../projects/angular-editor-lib/src/lib/angular-editor-lib.component.html","../../projects/angular-editor-lib/src/lib/angular-editor-lib.component.ts","../../projects/angular-editor-lib/src/lib/angular-editor-lib.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","create","__values","o","s","Symbol","iterator","m","next","value","done","TypeError","__read","n","e","ar","push","error","__spread","concat","SPECIAL_ROTATE","Set","genNodeId","Date","now","Math","round","random","CeUtilsService","shared","this","isTemplateType","content","TemplateRef","isDeepEqual","v1","v2","_this","isArray","flag_1","forEach","v","flag_2","keys","v1k","transferNodesListToNodesTree","nodes","tree","childrenOf","nodes_1","nodes_1_1","node","id","pid","parentId","children","undefined","getNodeChildren","filter","getNodeById","find","getNodeAndParentListById","arr","_a","_b","getSameLayerParentByChildren","childrenIds","parentIds","map","size","getPointInLine","direction","line","_c","_d","x1","y1","_e","x2","y2","getAbsolutePosition","cx","cy","width","height","rotate","has","getAbsolutePositionSpecial","sqrt","pow","patchRad1","atan","patchRad2","currentRad","PI","tl","cos","sin","tr","bl","br","getVerticalAndHorizontalPointByAbsolutePosition","position","t","max","min","l","getBoundingBox","left","top","apply","getAxisListByPosition","bottom","right","axis","positions","reduce","getOuterBoundingBox","sortNodeListByIndex","list","_.chain","sortBy","item","zIndex","assign","getVerticalLineCrossPoint","PA","PB","PD","PAx","PAy","PBx","PBy","PDx","PDy","L1k","L2k","a","x","getRelativePosition","a1","b1","c1","a2","b2","c2","getItemPercentPositionInGroup","group","getRotate","sx","sy","ex","ey","acos","getPointByVectorSum","ab","ac","getDistanceBeforeToPoint","point1","point2","getChildPositionBaseOnParentCoordinateSystem","parentRect","parentRotate","childRect","parentCenter","originalCenter","newCenterX","newCenterY","getChildPositionBaseOnMultipleParentCoordinataSystem","child","parents","rect","parent","shift","getChildrenBoundingBoxBaseOnParentCoordinateSystem","outerBox","domRect","getResizeBoundingBox","selected","slice","sum","factory","ɵfac","providedIn","DEFAULT_STORE","fill","_v","name","locked","borderWidth","borderColor","borderStyle","bordered","canvasBackground","backgroundColor","canvasPosition","scale","canvasSize","refLineState","tx","state","bx","ly","ry","EditorStore","utils","_super","_defaultPanels","title","LayerTreeComponent","show","y","WidgetListComponent","PropertyFormComponent","window","innerWidth","panels","panels$","BehaviorSubject","__","constructor","__extends","initialize","setState","_get","get","dispatch","action","selectDifferent","cb","select","pipe","startWith","pairwise","prev","present","toJSON","JSON","stringify","addPanels","getPanel","panel","updatePanelPosition","togglePanelVisible","togglePanelCollapsed","collapsed","ComponentStore","i0.ɵɵelement","i0.ɵɵstyleProp","node_r1","ctx_r0","i0","ɵɵinject","BorderedAreaComponent","store","borderedNodeMap","Map","ngOnInit","borderedNodeList$","refreshBorderedList","trackByFn","args","_i","i0.ɵɵproperty","i0.ɵɵelementContainerStart","i0.ɵɵtemplate","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","ɵɵdirectiveInject","selectors","decls","vars","consts","template","rf","ctx","BoxItemComponent","renderer","eleRef","_node","val","generatorStyles","ngAfterViewInit","nativeElement","setAttribute","setStyle","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","Renderer2","ElementRef","inputs","styles","encapsulation","changeDetection","backgroundColor$","backgroundImage$","CanvasBackgroundComponent","i0.ɵɵelementStart","i0.ɵɵelementEnd","CanvasGridComponent","scale$","childDPath$","getPath","parentDPath$","childWidth$","parentWidth$","clearSelected","setSelectedNodes","ids","clearBordered","addBorderedNodes","removeBorderedNodes","includes","setBorderedNodes","updateCanvasPosition","updateNodes","groupNodes","nodeMap","set","groupRect","groupNode","breakNode","_.cloneDeep","newNodes","parent_2","nextParent","resetRefLineState","i0.ɵɵnamespaceSVG","i0.ɵɵattribute","ɵɵpipeBind1","DraggableDirective","cdr","ceDragDisabled","ceUseSpace","ceOnStart","EventEmitter","ceOnMove","ceOnStop","ceOnSpaceKeyDown","spaceKeyDown","subscription","Subscription","mouseMove$","fromEvent","mouseUp$","keyDown$","document","keyUp$","mouseDown$","button","mouseEnter$","mouseLeave$","listenSpaceKeyEvent","switchMap","startEv","emit","takeUntil","stopEv","subscribe","moveEv","ngOnDestroy","unsubscribe","add","detectChanges","preventDefault","stopPropagation","finalize","i0.ɵɵlistener","$event","ɵɵrestoreView","_r3_1","ɵɵnextContext","moving","moveEnd","$implicit","showBorder","removeBorder","ChangeDetectorRef","outputs","exportAs","InputBoolean","REF_LINE_DIRECTION_COMPARE_MAP","baseKey","referKey","baseValue","baseRect","referRect","CanvasComponent","pointerSnapshot","nodesSnapshot","gap","nodes$","nodeListTrackByFn","moveStart","ev","clear","clientX","clientY","outerBoxSnapshot","unselectedNodes","cxPercent","cyPercent","scale_1","mx","my","baseRect_1","refLinesState_1","nodeRect","result","abs","base","getRefLineStateByDirection","newNodes_1","properties","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","i0.ɵɵtext","_r25_1","node_r9","origin","showBordered","i0.ɵɵclassProp","i0.ɵɵtextInterpolate","contextMenuSrv","treeNodes$","transferNodesToNzNodes","selectedKeys$","groupStatus$","layerTree","getSelectedNodeList","parentNode","layerTrackByFn","index","isLeaf","contextMenu","event","menu","getParentKey","multipleSelected","parentKey","selectedKeys","clickNode","test","navigator","platform","ctrlKey","metaKey","deleteNodes","prevParent_1","prevParentId_1","originalParentId","parent_1","parentChildren","removeNodes","toggleNodesLockState","lockNodes","unlockNodes","i0.ɵɵelementContainer","i3$1","NzContextMenuService","viewQuery","NzTreeComponent","_r3","_r1","PanelComponent","_panel","updatePosition","distance","toggleCollapsed","close","_r4","CanvasFormsComponent","fb","canvasSizeFormGroup","Validators","required","canvasPositionFormGroup","canvasBackgroundFormGroup","patchValue","emitEvent","toFixed","valueChanges","console","log","i1","FormBuilder","WidgetFormComponent","cfr","boundingFormGroup","borderRadius","values","ComponentFactoryResolver","ɵɵpureFunction1","_c2","ɵɵpureFunction0","_c1","_c3","_c4","_c5","formComponent$","_r10_1","resizing","resizeEnd","_r14_1","_r18_1","_r22_1","ResizeHandleComponent","display","nodePositionSnapshotList","hasSelected$","refreshResizeHandle","resizeStart","canvasRect","querySelector","getBoundingClientRect","groupRectSnapshot","groupAbsolutePositionSnapshot","resizePointSnapshot","absolute","relative","nodeAbsolutePosition","resizeMode","percentPosition","resizingNodeList","resizingNode","newPoint","endPointer","getPointByEndPointer","absolutePosition","verticalAndHorizontalPosition","getGroupDiagonalByDirection","newGroupRect","absolutePoint","point","getGroupRectByDirectionPoint","nodesSizeMap","getDOMRectByDirectionAndPosition","newTLPoint","newTRPoint","newBLPoint","newBRPoint","hostVars","hostBindings","RotateHandleComponent","rotateSnapshot","rotateStart","rotating","rotateStop","NoZoomAreaDirective","SelectorDirective","move$","up$","startPointSnapshot","ceSelectorDisabled","ceOnSelectorStart","ceOnSelectorMoving","ceOnSelectorStop","boxRect","transformOrigin","ZoomAreaDirective","i0.ɵɵprojection","CeToolbarDirective","ToolbarComponent","selected$","breakStatus$","contentQueries","dirIndex","ctx_r2","selectorRect","AngularEditorLibComponent","startPoints","nodesRectSnapshot","nodeIdList","matrix","refLineState$","oldState","listenScaleEvent","panelsTrackByFn","toString","dragStart","dragging","dragEnd","scaleEle","containerEleRef","containerBox","wheelDelta","deltaY","selectorStart","clearSelectAndBorder","selectorMoving","bound","isInBound","selectorEnd","ngContentSelectors","antDesignIcons","AllIcons","ICONS","ANTD_MODULES","NzCardModule","NzIconModule","forRoot","NzButtonModule","NzInputNumberModule","NzTabsModule","NzTreeModule","NzDropDownModule","NzPipesModule","NzToolTipModule","NzFormModule","NzInputModule","NzTagModule","NzDividerModule","NzCollapseModule","NzSwitchModule","NzSelectModule","CDK_MODULES","DragDropModule","injector","NzIconService","fetchFromIconfont","scriptUrl","AngularEditorLibModule","Injector","imports","CommonModule","BrowserAnimationsModule","HttpClientModule","FormsModule","ReactiveFormsModule","declarations","i6","exports","i2","NgIf","AsyncPipe"],"mappings":"wiFAgBIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,MAC3EN,EAAGC;;;;;;;;;;;;;;6FAgCZS,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2Hd,EAAvHe,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOZ,OAAOiB,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,iBAAZM,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIQ,EAAIX,EAAWM,OAAS,EAAGK,GAAK,EAAGA,KAAStB,EAAIW,EAAWW,MAAIJ,GAAKH,EAAI,EAAIf,EAAEkB,GAAKH,EAAI,EAAIf,EAAEY,EAAQC,EAAKK,GAAKlB,EAAEY,EAAQC,KAASK,GAChJ,OAAOH,EAAI,GAAKG,GAAKhB,OAAOqB,eAAeX,EAAQC,EAAKK,GAAIA,EAiDnChB,OAAOsB,gBAYpBC,EAASC,GACrB,IAAIC,EAAsB,mBAAXC,QAAyBA,OAAOC,SAAUC,EAAIH,GAAKD,EAAEC,GAAIL,EAAI,EAC5E,GAAIQ,EAAG,OAAOA,EAAErB,KAAKiB,GACrB,GAAIA,GAAyB,iBAAbA,EAAET,OAAqB,MAAO,CAC1Cc,KAAM,WAEF,OADIL,GAAKJ,GAAKI,EAAET,SAAQS,OAAI,GACrB,CAAEM,MAAON,GAAKA,EAAEJ,KAAMW,MAAOP,KAG5C,MAAM,IAAIQ,UAAUP,EAAI,0BAA4B,4CAGxCQ,EAAOT,EAAGU,GACtB,IAAIN,EAAsB,mBAAXF,QAAyBF,EAAEE,OAAOC,UACjD,IAAKC,EAAG,OAAOJ,EACf,IAAmBR,EAAYmB,EAA3Bf,EAAIQ,EAAErB,KAAKiB,GAAOY,EAAK,GAC3B,IACI,WAAc,IAANF,GAAgBA,KAAM,MAAQlB,EAAII,EAAES,QAAQE,MAAMK,EAAGC,KAAKrB,EAAEc,OAExE,MAAOQ,GAASH,EAAI,CAAEG,MAAOA,WAEzB,IACQtB,IAAMA,EAAEe,OAASH,EAAIR,EAAU,SAAIQ,EAAErB,KAAKa,WAExC,GAAIe,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,WAGKG,IACZ,IAAK,IAAIH,EAAK,GAAIhB,EAAI,EAAGA,EAAIN,UAAUC,OAAQK,IAC3CgB,EAAKA,EAAGI,OAAOP,EAAOnB,UAAUM,KACpC,OAAOgB,EA8CcpC,OAAOsB,OCjKhC,IAAMmB,EAAiB,IAAIC,IAAI,CAAC,EAAG,GAAI,IAAK,IAAK,eAEjCC,IACd,MAAO,GAAGC,KAAKC,MAAQC,KAAKC,MAAsB,KAAhBD,KAAKE,2BAOvC,SAAAC,IACEA,EAAeC,OAASC,YAGnBF,EAAA5C,UAAA+C,eAAA,SAAeC,GACpB,OAAOA,aAAmBC,EAAAA,aAGrBL,EAAA5C,UAAAkD,YAAA,SAAYC,EAASC,GAArB,IAAAC,EAAAP,KACL,UAAWK,UAAcC,EACvB,OAAO,EAEP,cAAeD,GACb,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,UACL,IAAK,SACL,IAAK,YACL,IAAK,WACH,OAAOA,IAAOC,EAChB,IAAK,SACH,GAAW,OAAPD,GAAsB,OAAPC,EACjB,OAAOD,IAAOC,EACT,GAAItD,MAAMwD,QAAQH,GAAK,CAC5B,GAAIA,EAAGzC,SAAW0C,EAAG1C,OACnB,OAAO,EAET,IAAI6C,GAAO,EAMX,OALAJ,EAAGK,SAAQ,SAACC,EAAG1C,GACTwC,IACFA,EAAOF,EAAKH,YAAYO,EAAGL,EAAGrC,QAG3BwC,EACF,GAAIJ,aAAcd,KAAOe,aAAcf,IAC5C,OAAOS,KAAKI,YAAWhB,EAAKiB,GAAEjB,EAAOkB,IAErC,IAAIM,GAAO,EAUX,OATA/D,OAAOgE,KAAKR,GAAIK,SAAQ,SAACI,GACnBF,IAEAA,IADEN,EAAGnD,eAAe2D,IACbP,EAAKH,YAAYC,EAAGS,GAAMR,EAAGQ,QAMnCF,IAUVd,EAAA5C,UAAA6D,6BAAA,SAA6BC,WAC5BC,EAAmB,GACnBC,EAAa,OACnB,IAAmB,IAAAC,EAAA/C,EAAA4C,GAAKI,EAAAD,EAAAzC,QAAA0C,EAAAxC,KAAAwC,EAAAD,EAAAzC,OAAE,CAArB,IAAM2C,EAAID,EAAAzC,MACP2C,EAAKD,EAAKC,GACVC,EAAMF,EAAKG,SACjBN,EAAWI,GAAMJ,EAAWI,IAAO,GACnCD,EAAKI,SAAWP,EAAWI,QACfI,IAARH,GAA6B,KAARA,GACvBL,EAAWK,GAAOL,EAAWK,IAAQ,GACrCL,EAAWK,GAAKrC,KAAKmC,IAErBJ,EAAK/B,KAAKmC,qGAGd,OAAOJ,GAGFnB,EAAA5C,UAAAyE,gBAAA,SAAgBL,EAAYN,GACjC,OAAOA,EAAMY,QAAO,SAACP,GAAS,OAAAA,EAAKG,WAAaF,MAQ3CxB,EAAA5C,UAAA2E,YAAA,SAAqBP,EAAYN,GACtC,OAAOA,EAAMc,MAAK,SAACT,GAAS,OAAAA,EAAKC,KAAOA,MAQnCxB,EAAA5C,UAAA6E,yBAAA,SAAkCT,EAAwBN,WAC/D,IAAKM,EACH,MAAO,GAKT,IAHA,IAAMU,EAAkB,CAAChB,EAAMc,MAAK,SAAC/C,GAAM,OAAAA,EAAEuC,KAAOA,MAEhDE,EAAiB,QAATS,EAAGD,EAAI,UAAE,IAAAC,OAAA,EAAAA,EAAET,SAChBA,GACLQ,EAAI9C,KAAK8B,EAAMc,MAAK,SAAC/C,GAAM,OAAAA,EAAEuC,KAAOE,MACpCA,EAA8B,QAAtBU,EAAGF,EAAIA,EAAIpE,OAAS,UAAE,IAAAsE,OAAA,EAAAA,EAAEV,SAElC,OAAOQ,GAQFlC,EAAA5C,UAAAiF,6BAAA,SAA6BC,EAAuBpB,GACzD,IAAMqB,EAAYD,EAAYE,KAAI,SAAChB,GAAE,IAAAW,EAAAC,EAAA,OAAmD,QAAnDA,EAAyC,QAAzCD,EAAKjB,EAAMc,MAAK,SAACT,GAAS,OAAAA,EAAKC,KAAOA,YAAG,IAAAW,OAAA,EAAAA,EAAET,gBAAQ,IAAAU,EAAAA,EAAI,MAC5F,OAAgC,IAA5B,IAAI3C,IAAI8C,GAAWE,MACdvB,EAAMc,MAAK,SAACT,GAAS,OAAAA,EAAKC,KAAOe,EAAU,OAa/CvC,EAAA5C,UAAAsF,eAAA,SAAeC,EAAsB1D,EAAW2D,GAC/C,IAAAC,EAAA7D,EAAuB4D,EAAI,GAA1BE,EAAA9D,EAAA6D,EAAA,GAAA,GAACE,EAAED,EAAA,GAAEE,EAAEF,EAAA,GAAGG,EAAAjE,EAAA6D,EAAA,GAAA,GAACK,EAAED,EAAA,GAAEE,EAAEF,EAAA,GACxB,OAAQN,GACN,IAAK,IACH,OAAS1D,EAAI+D,IAAOE,EAAKH,IAAQI,EAAKH,GAAMD,EAC9C,IAAK,IACH,OAAS9D,EAAI8D,IAAOI,EAAKH,IAAQE,EAAKH,GAAMC,IAY3ChD,EAAA5C,UAAAgG,oBAAA,SAAoBC,EAAYC,EAAYC,EAAeC,EAAgBC,GAChF,QADgF,IAAAA,IAAAA,EAAA,GAC5EjE,EAAekE,IAAID,GACrB,OAAOvD,KAAKyD,2BAA2BN,EAAIC,EAAIC,EAAOC,EAAQC,GAE9D,IAAM1F,EAAI8B,KAAK+D,KAAK/D,KAAAgE,IAACN,EAAQ,EAAM,GAAI1D,KAAAgE,IAACL,EAAS,EAAM,IACjDM,EAAYjE,KAAKkE,KAAKP,EAAS,GAAKD,EAAQ,IAC5CS,EAAYnE,KAAKkE,KAAKR,EAAQ,GAAKC,EAAS,IAC5CS,EAAcR,EAAS5D,KAAKqE,GAAM,IAExC,MAAO,CACLC,GAAI,CAACd,EAAKxD,KAAKuE,IAAIH,EAAaH,GAAa/F,EAAGuF,EAAKzD,KAAKwE,IAAIJ,EAAaH,GAAa/F,GACxFuG,GAAI,CAACjB,EAAKxD,KAAKuE,IAAIH,EAAaH,EAAwB,EAAZE,GAAiBjG,EAAGuF,EAAKzD,KAAKwE,IAAIJ,EAAaH,EAAwB,EAAZE,GAAiBjG,GACxHwG,GAAI,CAAClB,EAAKxD,KAAKuE,IAAIH,EAAaH,GAAa/F,EAAGuF,EAAKzD,KAAKwE,IAAIJ,EAAaH,GAAa/F,GACxFyG,GAAI,CAACnB,EAAKxD,KAAKuE,IAAIH,EAAaH,EAAwB,EAAZE,GAAiBjG,EAAGuF,EAAKzD,KAAKwE,IAAIJ,EAAaH,EAAwB,EAAZE,GAAiBjG,KAavHiC,EAAA5C,UAAAuG,2BAAA,SAA2BN,EAAYC,EAAYC,EAAeC,EAAgBC,GACvF,GAAIjE,EAAekE,IAAID,GACrB,OAAQA,GACN,KAAK,EACL,KAAK,IACH,MAAO,CACLU,GAAI,CAACd,EAAKE,EAAQ,EAAGD,EAAKE,EAAS,GACnCc,GAAI,CAACjB,EAAKE,EAAQ,EAAGD,EAAKE,EAAS,GACnCe,GAAI,CAAClB,EAAKE,EAAQ,EAAGD,EAAKE,EAAS,GACnCgB,GAAI,CAACnB,EAAKE,EAAQ,EAAGD,EAAKE,EAAS,IAEvC,KAAK,GACH,MAAO,CACLW,GAAI,CAACd,EAAKG,EAAS,EAAGF,EAAKC,EAAQ,GACnCe,GAAI,CAACjB,EAAKG,EAAS,EAAGF,EAAKC,EAAQ,GACnCgB,GAAI,CAAClB,EAAKG,EAAS,EAAGF,EAAKC,EAAQ,GACnCiB,GAAI,CAACnB,EAAKG,EAAS,EAAGF,EAAKC,EAAQ,IAEvC,KAAK,IACH,MAAO,CACLY,GAAI,CAACd,EAAKE,EAAQ,EAAGD,EAAKE,EAAS,GACnCc,GAAI,CAACjB,EAAKE,EAAQ,EAAGD,EAAKE,EAAS,GACnCe,GAAI,CAAClB,EAAKE,EAAQ,EAAGD,EAAKE,EAAS,GACnCgB,GAAI,CAACnB,EAAKE,EAAQ,EAAGD,EAAKE,EAAS,IAEvC,KAAK,IACH,MAAO,CACLW,GAAI,CAACd,EAAKG,EAAS,EAAGF,EAAKC,EAAQ,GACnCe,GAAI,CAACjB,EAAKG,EAAS,EAAGF,EAAKC,EAAQ,GACnCgB,GAAI,CAAClB,EAAKG,EAAS,EAAGF,EAAKC,EAAQ,GACnCiB,GAAI,CAACnB,EAAKG,EAAS,EAAGF,EAAKC,EAAQ,MAUtCvD,EAAA5C,UAAAqH,gDAAA,SAAgDC,GAC7C,IAAAP,EAAmBO,EAAQP,GAAvBI,EAAeG,EAAQH,GAAnBC,EAAWE,EAAQF,GAAfF,EAAOI,EAAQJ,GACnC,MAAO,CACLK,EAAG,EAAE9E,KAAK+E,IAAIT,EAAG,GAAIG,EAAG,IAAMzE,KAAKgF,IAAIV,EAAG,GAAIG,EAAG,KAAO,GAAIzE,KAAK+E,IAAIT,EAAG,GAAIG,EAAG,IAAMzE,KAAKgF,IAAIV,EAAG,GAAIG,EAAG,KAAO,GAC/GvG,EAAG,EAAE8B,KAAK+E,IAAIJ,EAAG,GAAIF,EAAG,IAAMzE,KAAKgF,IAAIL,EAAG,GAAIF,EAAG,KAAO,GAAIzE,KAAK+E,IAAIJ,EAAG,GAAIF,EAAG,IAAMzE,KAAKgF,IAAIL,EAAG,GAAIF,EAAG,KAAO,GAC/GxH,EAAG,EAAE+C,KAAK+E,IAAIL,EAAG,GAAIC,EAAG,IAAM3E,KAAKgF,IAAIN,EAAG,GAAIC,EAAG,KAAO,GAAI3E,KAAK+E,IAAIL,EAAG,GAAIC,EAAG,IAAM3E,KAAKgF,IAAIN,EAAG,GAAIC,EAAG,KAAO,GAC/GM,EAAG,EAAEjF,KAAK+E,IAAIT,EAAG,GAAII,EAAG,IAAM1E,KAAKgF,IAAIV,EAAG,GAAII,EAAG,KAAO,GAAI1E,KAAK+E,IAAIT,EAAG,GAAII,EAAG,IAAM1E,KAAKgF,IAAIV,EAAG,GAAII,EAAG,KAAO,KAY5GvE,EAAA5C,UAAA2H,eAAA,SAAexB,EAAeC,EAAgBwB,EAAcC,EAAaxB,QAAA,IAAAA,IAAAA,EAAA,GAC9E,IAAMiB,EAAWxE,KAAKkD,oBAAoB4B,EAAOzB,EAAQ,EAAG0B,EAAMzB,EAAS,EAAGD,EAAOC,EAAQC,GACvFqB,EAAIjF,KAAKgF,IAAGK,MAARrF,KAAIP,EAAQY,KAAKiF,sBAAsB,IAAK,CAACT,MACjD3G,EAAI8B,KAAK+E,IAAGM,MAARrF,KAAIP,EAAQY,KAAKiF,sBAAsB,IAAK,CAACT,MACjDC,EAAI9E,KAAKgF,IAAGK,MAARrF,KAAIP,EAAQY,KAAKiF,sBAAsB,IAAK,CAACT,MACjD5H,EAAI+C,KAAK+E,IAAGM,MAARrF,KAAIP,EAAQY,KAAKiF,sBAAsB,IAAK,CAACT,MACvD,MAAO,CAAEM,KAAMF,EAAGG,IAAKN,EAAGpB,MAAOxF,EAAI+G,EAAGtB,OAAQ1G,EAAI6H,EAAGS,OAAQtI,EAAGuI,MAAOtH,EAAGsF,GAAIyB,GAAK/G,EAAI+G,GAAK,EAAGxB,GAAIqB,GAAK7H,EAAI6H,GAAK,IAQ9G3E,EAAA5C,UAAA+H,sBAAA,SAAsBG,EAAiBC,GAC5C,OAAQD,GACN,IAAK,IACH,OAAOC,EAAUC,QAAO,SAACtD,EAAKwC,GAAa,OAAApF,EAAI4C,EAAG,CAAEwC,EAASH,GAAG,GAAIG,EAASF,GAAG,GAAIE,EAASP,GAAG,GAAIO,EAASJ,GAAG,OAAK,IACvH,IAAK,IACH,OAAOiB,EAAUC,QAAO,SAACtD,EAAKwC,GAAa,OAAApF,EAAI4C,EAAG,CAAEwC,EAASH,GAAG,GAAIG,EAASF,GAAG,GAAIE,EAASP,GAAG,GAAIO,EAASJ,GAAG,OAAK,MAQpHtE,EAAA5C,UAAAqI,oBAAA,SAAoBF,GACzB,IAAMT,EAAIjF,KAAKgF,IAAGK,MAARrF,KAAIP,EAAQY,KAAKiF,sBAAsB,IAAKI,KAChDxH,EAAI8B,KAAK+E,IAAGM,MAARrF,KAAIP,EAAQY,KAAKiF,sBAAsB,IAAKI,KAChDZ,EAAI9E,KAAKgF,IAAGK,MAARrF,KAAIP,EAAQY,KAAKiF,sBAAsB,IAAKI,KAChDzI,EAAI+C,KAAK+E,IAAGM,MAARrF,KAAIP,EAAQY,KAAKiF,sBAAsB,IAAKI,KACtD,MAAO,CAAEP,KAAMF,EAAGG,IAAKN,EAAGpB,MAAOxF,EAAI+G,EAAGtB,OAAQ1G,EAAI6H,EAAGS,OAAQtI,EAAGuI,MAAOtH,EAAGsF,GAAIyB,GAAK/G,EAAI+G,GAAK,EAAGxB,GAAIqB,GAAK7H,EAAI6H,GAAK,IAO9G3E,EAAA5C,UAAAsI,oBAAA,SAAoBC,GAApB,IAAAlF,EAAAP,KACL,OACEyF,GACAC,EAAAA,MAAQD,GACLE,QAAO,SAACC,GAAS,OAAAA,EAAKC,UACtBvD,KAAI,SAACsD,GAAS,OAAA/I,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAMF,GAAI,CAAEnE,SAAUlB,EAAKiF,oBAAoBI,EAAKnE,eAClE9C,SAUAmB,EAAA5C,UAAA6I,0BAAA,SAA0BC,EAAsBC,EAAsBC,GACrE,IAAAvD,EAAA7D,EAAakH,EAAE,GAAdG,EAAGxD,EAAA,GAAEyD,EAAGzD,EAAA,GACTC,EAAA9D,EAAamH,EAAE,GAAdI,EAAGzD,EAAA,GAAE0D,EAAG1D,EAAA,GACTG,EAAAjE,EAAaoH,EAAE,GAAdK,EAAGxD,EAAA,GAAEyD,EAAGzD,EAAA,GACf,GAAIoD,IAAQE,EACV,MAAO,CAACF,EAAKK,GACR,GAAIJ,IAAQE,EACjB,MAAO,CAACC,EAAKH,GAEb,IAAMK,GAAOL,EAAME,IAAQH,EAAME,GAC3BK,GAAO,EAAID,EACXE,EAAIP,EAAMK,EAAMN,EAEhBS,GADIJ,EAAME,EAAMH,EACPI,IAAMF,EAAMC,GAE3B,MAAO,CAACE,EADEH,EAAMG,EAAID,IAiBjB7G,EAAA5C,UAAA2J,oBAAA,SAAoBrC,GACjB,IAAAP,EAAmBO,EAAQP,GAAvBI,EAAeG,EAAQH,GAAnBC,EAAWE,EAAQF,GAAfF,EAAOI,EAAQJ,GAC7Bf,EAAgB1D,KAAK+D,KAAK/D,KAAAgE,IAACS,EAAG,GAAKH,EAAG,GAAO,GAAItE,KAAAgE,IAACS,EAAG,GAAKH,EAAG,GAAO,IAEpEX,EAAiB3D,KAAK+D,KAAK/D,KAAAgE,IAACU,EAAG,GAAKJ,EAAG,GAAO,GAAItE,KAAAgE,IAACU,EAAG,GAAKJ,EAAG,GAAO,IAErE6C,EAAKxC,EAAG,GAAKL,EAAG,GAChB8C,EAAK9C,EAAG,GAAKK,EAAG,GAChB0C,EAAK1C,EAAG,GAAKL,EAAG,GAAKA,EAAG,GAAKK,EAAG,GAChC2C,EAAK5C,EAAG,GAAKD,EAAG,GAChB8C,EAAK9C,EAAG,GAAKC,EAAG,GAChB8C,EAAK9C,EAAG,GAAKD,EAAG,GAAKA,EAAG,GAAKC,EAAG,GAChClB,GAAM4D,EAAKI,EAAKD,EAAKF,IAAOF,EAAKI,EAAKD,EAAKF,GAC3C3D,GAAM6D,EAAKD,EAAKF,EAAKK,IAAOL,EAAKI,EAAKD,EAAKF,GAEjD,MAAO,CACL5D,GAAEA,EACFC,GAAEA,EACFC,MAAKA,EACLC,OAAMA,EACNwB,KAAM3B,EAAKE,EAAQ,EACnB0B,IAAK3B,EAAKE,EAAS,EACnB4B,OAAQ/B,EAAKE,EAAQ,EACrB8B,MAAO/B,EAAKE,EAAS,IASlBxD,EAAA5C,UAAAkK,8BAAA,SAA8BC,EAAiBzB,GACpD,MAAO,CACL3B,GAAI,EAAE2B,EAAK3B,GAAG,GAAKoD,EAAMvC,MAAQuC,EAAMhE,OAAQuC,EAAK3B,GAAG,GAAKoD,EAAMtC,KAAOsC,EAAM/D,QAC/Ec,GAAI,EAAEwB,EAAKxB,GAAG,GAAKiD,EAAMvC,MAAQuC,EAAMhE,OAAQuC,EAAKxB,GAAG,GAAKiD,EAAMtC,KAAOsC,EAAM/D,QAC/Ee,GAAI,EAAEuB,EAAKvB,GAAG,GAAKgD,EAAMvC,MAAQuC,EAAMhE,OAAQuC,EAAKvB,GAAG,GAAKgD,EAAMtC,KAAOsC,EAAM/D,QAC/EgB,GAAI,EAAEsB,EAAKtB,GAAG,GAAK+C,EAAMvC,MAAQuC,EAAMhE,OAAQuC,EAAKtB,GAAG,GAAK+C,EAAMtC,KAAOsC,EAAM/D,UAc5ExD,EAAA5C,UAAAoK,UAAA,SAAUnE,EAAYC,EAAYmE,EAAYC,EAAYC,EAAYC,GAC3E,IAAMnE,EAKF,IAJD5D,KAAKgI,MACHhI,KAAAgE,IAACP,EAAKoE,EAAO,GAAI7H,KAAAgE,IAACR,EAAKoE,EAAO,GAAI5H,KAAAgE,IAACR,EAAKsE,EAAO,GAAI9H,KAAAgE,IAACP,EAAKsE,EAAO,IAAK/H,KAAAgE,IAAC8D,EAAKF,EAAO,GAAI5H,KAAAgE,IAAC+D,EAAKF,EAAO,MACjG,EAAI7H,KAAK+D,KAAK/D,KAAAgE,IAACP,EAAKoE,EAAO,GAAI7H,KAAAgE,IAACR,EAAKoE,EAAO,IAAK5H,KAAK+D,KAAK/D,KAAAgE,IAACR,EAAKsE,EAAO,GAAI9H,KAAAgE,IAACP,EAAKsE,EAAO,MAG9F/H,KAAKqE,GACP,OAAIyD,IAAOF,EACF,IAELE,EAAKF,EACAhE,EAELkE,EAAKF,EACA,IAAMhE,OADf,GAWKzD,EAAA5C,UAAA0K,oBAAA,SAAoBC,EAAsBC,EAAsBnB,GACrE,MAAO,CAACkB,EAAG,GAAKC,EAAG,GAAKnB,EAAE,GAAIkB,EAAG,GAAKC,EAAG,GAAKnB,EAAE,KAQ3C7G,EAAA5C,UAAA6K,yBAAA,SAAyBC,EAA0BC,GACxD,OAAOtI,KAAK+D,KAAK/D,KAAAgE,IAACqE,EAAO,GAAKC,EAAO,GAAO,GAAItI,KAAAgE,IAACqE,EAAO,GAAKC,EAAO,GAAO,KAatEnI,EAAA5C,UAAAgL,6CAAA,SAA6CC,EAAsBC,EAAsBC,GAC9F,IAAMC,EAAe,CAACH,EAAWrD,KAAOqD,EAAW9E,MAAQ,EAAG8E,EAAWpD,IAAMoD,EAAW7E,OAAS,GAC7FiF,EAAiB,CAACF,EAAUvD,KAAOuD,EAAUhF,MAAQ,EAAI8E,EAAWrD,KAAMuD,EAAUtD,IAAMsD,EAAU/E,OAAS,EAAI6E,EAAWpD,KAC5HpC,EAAA7D,EAA2B,EAC9ByJ,EAAe,GAAKD,EAAa,IAAM3I,KAAKuE,IAAKkE,EAAezI,KAAKqE,GAAM,MACzEuE,EAAe,GAAKD,EAAa,IAAM3I,KAAKwE,IAAKiE,EAAezI,KAAKqE,GAAM,KAC5EsE,EAAa,IACdC,EAAe,GAAKD,EAAa,IAAM3I,KAAKuE,IAAKkE,EAAezI,KAAKqE,GAAM,MACzEuE,EAAe,GAAKD,EAAa,IAAM3I,KAAKwE,IAAKiE,EAAezI,KAAKqE,GAAM,KAC5EsE,EAAa,IAChB,GAPME,EAAU7F,EAAA,GAAE8F,EAAU9F,EAAA,GAQ7B,MAAO,CACLmC,KAAM0D,EAAaH,EAAUhF,MAAQ,EACrC0B,IAAK0D,EAAaJ,EAAU/E,OAAS,EACrC4B,OAAQsD,EAAaH,EAAUhF,MAAQ,EACvC8B,MAAOsD,EAAaJ,EAAU/E,OAAS,EACvCD,MAAOgF,EAAUhF,MACjBC,OAAQ+E,EAAU/E,OAClBH,GAAIqF,EACJpF,GAAIqF,IASD3I,EAAA5C,UAAAwL,qDAAA,SAAqDC,EAAiBC,GAE3E,IADA,IAAIC,EAAIhM,OAAAiJ,OAAA,GAAkB6C,GACnBC,EAAQhL,QAAQ,CACrB,IAAMkL,EAASF,EAAQG,QACvBF,EAAO7I,KAAKkI,6CAA6CY,EAAQA,EAAOvF,OAAQoF,GAElF,OAAOE,GAQF/I,EAAA5C,UAAA8L,mDAAA,SAAmDvH,EAAmBmH,GAO3E,IAPK,IAAArI,EAAAP,KACCiJ,EAAWjJ,KAAKuF,oBACpB9D,EAASa,KAAI,SAACqG,GACZ,OAAApI,EAAK2C,oBAAoByF,EAAM7D,KAAO6D,EAAMtF,MAAQ,EAAGsF,EAAM5D,IAAM4D,EAAMrF,OAAS,EAAGqF,EAAMtF,MAAOsF,EAAMrF,OAAQqF,EAAMpF,YAGtH2F,EAAOrM,OAAAiJ,OAAA,GAAQmD,GACZL,EAAQhL,QAAQ,CACrB,IAAMkL,EAASF,EAAQG,QACvBG,EAAUlJ,KAAKkI,6CAA6CY,EAAQA,EAAOvF,OAAQ2F,GAErF,OAAOA,GAQFpJ,EAAA5C,UAAAiM,qBAAA,SAAqBC,EAAoBpI,GAAzC,MACD6H,EACAtF,EAFChD,EAAAP,KAGL,GAAwB,IAApBoJ,EAASxL,OAAc,CACnB,IAAA+E,EAAA7D,EAAqBkB,KAAK+B,yBAAyBqH,EAAS,GAAIpI,IAA/DK,EAAIsB,EAAA,GAAKiG,EAAOjG,EAAA0G,MAAA,GACvBR,EAAIhM,OAAAiJ,OAAA,GAAQ9F,KAAK0I,qDAAqDrH,EAAIjC,EAAMwJ,KAChFrF,EAASqF,EAAQtD,QAAO,SAACgE,EAAKrM,GAAC,IAAAgF,EAAK,OAAAqH,GAAe,QAAZrH,EAAIhF,EAAEsG,cAAM,IAAAtB,EAAAA,EAAI,KAAe,QAAbA,EAAEZ,EAAKkC,cAAM,IAAAtB,EAAAA,EAAI,OACrE,CACL,IAAM6G,EAAS9I,KAAKmC,6BAA6BiH,EAAUpI,GAC3D,IAAe,IAAX8H,EAAkB,CACdF,EAAU5I,KAAK+B,yBAAyB+G,MAAAA,OAAM,EAANA,EAAQxH,GAAIN,GAC1D6H,EAAO7I,KAAKgJ,mDACVI,EAAS9G,KAAI,SAAChB,GAAO,OAAAf,EAAKsB,YAAYP,EAAIN,MAAO5B,EAC7CwJ,IAENrF,EAASqF,EAAQtD,QAAO,SAACgE,EAAKrM,GAAC,IAAAgF,EAAK,OAAAqH,GAAe,QAAZrH,EAAIhF,EAAEsG,cAAM,IAAAtB,EAAAA,EAAI,KAAI,IAG/D,OAAApF,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAY+C,GAAI,CAAEtF,OAAMA,2CAlffzD,wCAAAA,EAAcyJ,QAAdzJ,EAAc0J,KAAAC,WADD,aCqBbC,EAA6B,CACxC1I,MAAO,IAAIhE,MAAM,KAAK2M,KAAK,GAAGrH,KAAgB,SAACsH,EAAI3L,GAAM,MAAA,CACvDqD,GAAI,GAAG3B,KAAKC,MAAMD,KAAKE,SAAWF,KAAKgE,IAAI,GAAI,IAC/CL,OAAQ,IACRD,MAAO,IACPyB,KAAMnF,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBkF,IAAKpF,KAAKC,MAAsB,IAAhBD,KAAKE,UACrBgK,KAAM,OACNtG,OAAQ,EACRuG,QAAQ,EACRjE,OAAQ5H,EAAI,EACZ8L,YAAa,EACbC,YAAa,OACbC,YAAa,aAEfb,SAAU,IAAI7J,IACd2K,SAAU,IAAI3K,IACd4K,iBAAkB,CAAEC,gBAAiB,WACrCC,eAAgB,CACdvF,KAAM,IACNC,IAAK,IACLuF,MAAO,GAETC,WAAY,CACVlH,MAAO,KACPC,OAAQ,KAEVkH,aAAc,CACZC,GAAI,CAAEC,OAAO,GACbC,GAAI,CAAED,OAAO,GACbE,GAAI,CAAEF,OAAO,GACbG,GAAI,CAAEH,OAAO,GACbvH,GAAI,CAAEuH,OAAO,GACbtH,GAAI,CAAEsH,OAAO,mBC5Ef,SAAAI,EAAoBC,GAApB,IAAAxK,EACEyK,EAAA5N,KAAA4C,KAAM0J,IAAc1J,YADFO,EAAAwK,MAAAA,EARZxK,EAAA0K,eAAgC,CACtC,CAAEzN,IAAK,SAAU0N,MAAO,KAAMhL,QAASiL,GAAoBC,MAAM,EAAMxE,EAAG,GAAIyE,EAAG,IACjF,CAAE7N,IAAK,cAAe0N,MAAO,KAAMhL,QAASoL,GAAqBF,MAAM,EAAOxE,EAAG,GAAIyE,EAAG,IACxF,CAAE7N,IAAK,aAAc0N,MAAO,KAAMhL,QAASqL,GAAuBH,MAAM,EAAMxE,EAAG4E,OAAOC,WAAa,IAAKJ,EAAG,KAEvG9K,EAAAmL,OAAmB,GAC3BnL,EAAAoL,QAAU,IAAIC,EAAAA,gBAAexM,EAAemB,EAAK0K,eAAmB1K,EAAKmL,2BHOjD/O,EAAGC,GAEzB,SAASiP,IAAO7L,KAAK8L,YAAcnP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOsB,OAAOvB,IAAMiP,EAAG3O,UAAYN,EAAEM,UAAW,IAAI2O,GGjBzCE,CAAAjB,EAAAE,GAaxCF,EAAA5N,UAAA8O,WAAA,SAAWtB,GACT1K,KAAKiM,SAASvB,IAGhBI,EAAA5N,UAAAgP,KAAA,WACE,OAAOlM,KAAKmM,OAGdrB,EAAA5N,UAAAkP,SAAA,SAASC,GACPrM,KAAKiM,SAASI,IAGhBvB,EAAA5N,UAAAoP,gBAAA,SAAmBC,GAAnB,IAAAhM,EAAAP,KACE,OAAOA,KAAKwM,OAAOD,GAAIE,KACrBC,EAAAA,UAAU,KAAMH,EAAGvM,KAAKmM,QACxBQ,EAAAA,WACA/K,EAAAA,QAAO,SAACK,OAAAC,EAAApD,EAAAmD,EAAA,GAAC2K,EAAI1K,EAAA,GAAE2K,EAAO3K,EAAA,GAAM,OAAC3B,EAAKwK,MAAM3K,YAAYwM,EAAMC,MAC1DvK,EAAAA,KAAI,SAACL,GAAgB,OAAhBnD,EAAAmD,EAAA,GAAU,QAInB6I,EAAA5N,UAAA4P,OAAA,WACE,IAAMpC,EAAQ1K,KAAKmM,MACnB,OAAOY,KAAKC,UAAU,CACpB3C,eAAgBK,EAAML,eACtBE,WAAYG,EAAMH,WAClBJ,iBAAkBO,EAAMP,iBACxBnJ,MAAO0J,EAAM1J,MACboI,SAAUsB,EAAMtB,SAChBc,SAAUQ,EAAMR,YAIpBY,EAAA5N,UAAA+P,UAAA,SAAUvB,GACR1L,KAAK0L,OAAMtM,EAAOY,KAAK0L,OAAWA,GAClC1L,KAAK2L,QAAQjN,KAAIU,EAAKY,KAAKiL,eAAmBjL,KAAK0L,UAGrDZ,EAAA5N,UAAAgQ,SAAA,SAAS1P,GACP,OAAO4B,EAAIY,KAAKiL,eAAmBjL,KAAK0L,QAAQ5J,MAAK,SAACqL,GAAU,OAAAA,EAAM3P,MAAQA,MAGhFsN,EAAA5N,UAAAkQ,oBAAA,SAAoB5P,EAAayE,OAAAC,EAAApD,EAAAmD,EAAA,GAAC2E,EAAC1E,EAAA,GAAEmJ,EAACnJ,EAAA,GACpC9C,EAAIY,KAAKiL,eAAmBjL,KAAK0L,QAAQhL,SAAQ,SAACyM,GAC5CA,EAAM3P,MAAQA,IAChB2P,EAAMvG,EAAIA,EACVuG,EAAM9B,EAAIA,MAGdrL,KAAK2L,QAAQjN,KAAIU,EAAKY,KAAKiL,eAAmBjL,KAAK0L,UAGrDZ,EAAA5N,UAAAmQ,mBAAA,SAAmB7P,GACjB4B,EAAIY,KAAKiL,eAAmBjL,KAAK0L,QAAQhL,SAAQ,SAACyM,GAC5CA,EAAM3P,MAAQA,IAChB2P,EAAM/B,MAAQ+B,EAAM/B,SAGxBpL,KAAK2L,QAAQjN,KAAIU,EAAKY,KAAKiL,eAAmBjL,KAAK0L,UAGrDZ,EAAA5N,UAAAoQ,qBAAA,SAAqB9P,GACnB4B,EAAIY,KAAKiL,eAAmBjL,KAAK0L,QAAQhL,SAAQ,SAACyM,GAC5CA,EAAM3P,MAAQA,IAChB2P,EAAMI,WAAaJ,EAAMI,cAG7BvN,KAAK2L,QAAQjN,KAAIU,EAAKY,KAAKiL,eAAmBjL,KAAK0L,aAhFb8B,EAAAA,wCCT1CC,EAAAA,UAAAA,EAAAA,MAAAA,8CAGEC,EAAAA,YAAAA,OAAAA,EAAAA,KAAAA,IAAAA,CAA0B,MAAAC,EAAA5I,IAAA,IAA1B2I,CAA0B,QAAAC,EAAAtK,MAAA,IAA1BqK,CAA0B,SAAAC,EAAArK,OAAA,IAA1BoK,CAA0B,YAAAE,EAAAtG,UAAAqG,EAAApK,2CDMfuH,GAAW+C,EAAAC,SAAAhO,yCAAXgL,EAAWvB,QAAXuB,EAAWtB,wBEStB,SAAAuE,EAAoBC,EAA4BjD,GAA5B/K,KAAAgO,MAAAA,EAA4BhO,KAAA+K,MAAAA,EAHzC/K,KAAAiO,gBAAkB,IAAIC,WAK7BH,EAAA7Q,UAAAiR,SAAA,WAAA,IAAA5N,EAAAP,KACEA,KAAKoO,kBAAoBpO,KAAKgO,MAC3B1B,iBAAgB,SAAC5B,GAAU,MAAA,CAAGR,SAAUQ,EAAMR,SAAUlJ,MAAO0J,EAAM1J,MAAOuJ,WAAYG,EAAMH,eAC9FkC,KACCnK,EAAAA,KAAI,SAACJ,OAAEgI,EAAQhI,EAAAgI,SAAElJ,EAAKkB,EAAAlB,MAAEuJ,EAAUrI,EAAAqI,WAChC,OAAKL,EAAS3H,KAGLhC,EAAK8N,oBAAoBrN,EAAOkJ,EAAUK,GAF1C,QAQjBwD,EAAA7Q,UAAAoK,UAAA,SAAU/D,GACR,MAAO,UAAUA,EAAM,QAGzBwK,EAAA7Q,UAAAoR,UAAA,eAAU,IAAAC,EAAA,GAAAC,EAAA,EAAAA,EAAA7Q,UAAAC,OAAA4Q,IAAAD,EAAAC,GAAA7Q,UAAA6Q,GACR,OAAUD,EAAK,GAAGjN,GAAE,IAAIiN,EAAK,GAAGlL,MAAK,IAAIkL,EAAK,GAAGjL,OAAM,IAAIiL,EAAK,GAAGzJ,KAAI,IAAIyJ,EAAK,GAAGxJ,IAAG,IAAIwJ,EAAK,GAAGhL,QAGpGwK,EAAA7Q,UAAAmR,oBAAA,SAAoBrN,EAAgBkJ,EAAuBK,GAA3D,IAAAhK,EAAAP,KACE,OAAOZ,EAAI8K,GACR5H,KAAI,SAAChB,GAAO,OAAAf,EAAKwK,MAAMlJ,YAAYP,EAAIN,MACvCY,QAAO,SAACP,GAAS,QAAEA,KACnBiB,KAAI,SAACjB,GAIF,UAFYuH,EAAN9J,EAAiByB,EAAKwK,MAAMhJ,yBAAyBV,EAAKC,GAAIN,IAAjDqI,MAAA,GACfV,EAAK9L,OAAAiJ,OAAA,GAAQzE,GACVuH,EAAQhL,QAAQ,CACrB,IAAMkL,EAASF,EAAQG,QACvBJ,EAAK9L,OAAAiJ,OAAAjJ,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GACA6C,GACApI,EAAKwK,MAAM7C,6CAA6CY,EAAqB,QAAf7G,EAAE6G,EAAOvF,cAAM,IAAAtB,EAAAA,EAAI,EAAG0G,IAAM,CAC7FpF,OAAQoF,EAAMpF,OAASuF,EAAOvF,SAGlC,MAAO,CACLjC,GAAID,EAAKC,GACT+B,MAAQsF,EAAMtF,MAAQkH,EAAWlH,MAAS,IAC1CC,OAASqF,EAAMrF,OAASiH,EAAWjH,OAAU,IAC7CwB,KAAO6D,EAAM7D,KAAOyF,EAAWlH,MAAS,IACxC0B,IAAM4D,EAAM5D,IAAMwF,EAAWjH,OAAU,IACvCC,OAAQoF,EAAMpF,yCC/DxBkK,EAAAA,UAAAA,EAAAA,cAAAA,0BAAgDgB,EAAAA,WAAAA,OAAAA,6BADlDC,EAAAA,wBAAAA,GACEC,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,cAAAA,GACFC,EAAAA,sDADgCC,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,UAAAA,EAAAA,KAAAA,4CDanBV,GAAqBF,EAAAiB,kBAAAhE,GAAA+C,EAAAiB,kBAAAhP,sCAArBiO,EAAqBgB,UAAA,CAAA,CAAA,oBAAA,CAAA,GAAA,iBAAA,KAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,QAAA,aAAA,EAAA,OAAA,MAAA,QAAA,SAAA,YAAA,EAAA,QAAA,UAAA,gBAAA,CAAA,EAAA,eAAAC,SAAA,SAAAC,EAAAC,SDdlCV,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,GAAAA,MAAAA,6BAEmBF,EAAAA,WAAAA,UAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,mBAAAA,CAA8B,eAAAY,EAAAf,mVGmB/C,SAAAgB,EAAoBC,EAA6BC,GAA7BxP,KAAAuP,SAAAA,EAA6BvP,KAAAwP,OAAAA,SATjD3S,OAAAqB,eACIoR,EAAApS,UAAA,OAAI,KADR,WAEE,OAAO8C,KAAKyP,WAEd,SAASC,GACP1P,KAAKyP,MAAQC,EACb1P,KAAK2P,mDAKPL,EAAApS,UAAA0S,gBAAA,WACE5P,KAAK2P,mBAGCL,EAAApS,UAAAyS,gBAAA,iBACF3P,KAAKwP,OAAOK,gBACd7P,KAAKuP,SAASO,aAAa9P,KAAKwP,OAAOK,cAAe,KAAM,YAAY7P,KAAKqB,KAAKC,IAClFtB,KAAKuP,SAASQ,SAAS/P,KAAKwP,OAAOK,cAAe,QAAY7P,KAAKqB,KAAKgC,MAAK,MAC7ErD,KAAKuP,SAASQ,SAAS/P,KAAKwP,OAAOK,cAAe,SAAa7P,KAAKqB,KAAKiC,OAAM,MAC/EtD,KAAKuP,SAASQ,SAAS/P,KAAKwP,OAAOK,cAAe,OAAW7P,KAAKqB,KAAKyD,KAAI,MAC3E9E,KAAKuP,SAASQ,SAAS/P,KAAKwP,OAAOK,cAAe,MAAU7P,KAAKqB,KAAK0D,IAAG,MACzE/E,KAAKuP,SAASQ,SAAS/P,KAAKwP,OAAOK,cAAe,YAAa,8BAA6C,QAAhB5N,EAAAjC,KAAKqB,KAAKkC,cAAM,IAAAtB,EAAAA,EAAI,GAAC,QACjHjC,KAAKuP,SAASQ,SAAS/P,KAAKwP,OAAOK,cAAe,eAAgB7P,KAAKqB,KAAK4I,aAC5EjK,KAAKuP,SAASQ,SAAS/P,KAAKwP,OAAOK,cAAe,eAAgB7P,KAAKqB,KAAK2I,aAC5EhK,KAAKuP,SAASQ,SAAS/P,KAAKwP,OAAOK,cAAe,eAAmB7P,KAAKqB,KAAK0I,YAAW,MAC1F/J,KAAKuP,SAASQ,SAAS/P,KAAKwP,OAAOK,cAAe,UAAW7P,KAAKqB,KAAKwE,QACvE7F,KAAKuP,SAASQ,SAAS/P,KAAKwP,OAAOK,cAAe,mBAAoB7P,KAAKqB,KAAK2O,iBAChFhQ,KAAKuP,SAASQ,SAAS/P,KAAKwP,OAAOK,cAAe,sBAAuB7P,KAAKqB,KAAK4O,oBACnFjQ,KAAKuP,SAASQ,SAAS/P,KAAKwP,OAAOK,cAAe,oBAAqB7P,KAAKqB,KAAK6O,kBACjFlQ,KAAKuP,SAASQ,SAAS/P,KAAKwP,OAAOK,cAAe,kBAAmB7P,KAAKqB,KAAK8O,gBAC/EnQ,KAAKuP,SAASQ,SAAS/P,KAAKwP,OAAOK,cAAe,mBAAoB7P,KAAKqB,KAAK+I,iDCzClFqD,EAAAA,UAAAA,EAAAA,MAAAA,+EAAKgB,EAAAA,WAAAA,MAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,kBAAAA,OAAAA,EAAAA,iDDQIa,GAAgBzB,EAAAiB,kBAAAjB,EAAAuC,WAAAvC,EAAAiB,kBAAAjB,EAAAwC,+CAAhBf,EAAgBP,UAAA,CAAA,CAAA,gBAAAuB,OAAA,CAAAjP,KAAA,QAAA2N,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,QAAA,WAAA,CAAA,EAAA,SAAAC,SAAA,SAAAC,EAAAC,QDV7BV,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,eAAAA,QAAeF,EAAAA,WAAAA,QAAAA,MAAAA,EAAAA,KAAAA,KAAAA,EAAAA,KAAAA,YAAAA,MAAAA,EAAAA,KAAAA,KAAAA,EAAAA,KAAAA,SAAAA,uCCUFa,GAAgBiB,OAAA,CAAA,sEAAAC,cAAA,EAAAC,gBAAA,UEK3B,SAAoBzC,GAAAhO,KAAAgO,MAAAA,EAClBhO,KAAK0Q,iBAAmB1Q,KAAKgO,MAAM1B,iBAAgB,SAAC5B,GAAU,OAAAA,EAAMP,iBAAiBC,mBACrFpK,KAAK2Q,iBAAmB3Q,KAAKgO,MAAM1B,iBAAgB,SAAC5B,GAAU,OAAAA,EAAMP,iBAAiB6F,qDAL5EY,GAAyB/C,EAAAiB,kBAAAhE,sCAAzB8F,EAAyB7B,UAAA,CAAA,CAAA,wBAAA,CAAA,GAAA,qBAAA,KAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,QAAA,CAAA,MAAA,GAAA,EAAA,QAAAC,SAAA,SAAAC,EAAAC,SDZtCwB,EAAAA,eAAAA,EAAAA,2BACElC,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,cAAAA,uBAGFmC,EAAAA,sBAJKpD,EAAAA,YAAAA,mBAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,mBACUmB,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,6ZEiBb,SAAAsC,EAAoB/C,GAApB,IAAAzN,EAAAP,KAAoBA,KAAAgO,MAAAA,EAClB,IAAMgD,EAAShR,KAAKgO,MAAM1B,iBAAgB,SAAC5B,GAAU,OAAAA,EAAML,eAAeC,SAC1EtK,KAAKiR,YAAcD,EAAOvE,KAAKnK,EAAAA,KAAI,SAACgI,GAAU,OAAA/J,EAAK2Q,QAAQ,GAAI5G,OAC/DtK,KAAKmR,aAAeH,EAAOvE,KAAKnK,EAAAA,KAAI,SAACgI,GAAU,OAAA/J,EAAK2Q,QAAQ,GAAI5G,OAChEtK,KAAKoR,YAAcJ,EAAOvE,KAAKnK,EAAAA,KAAI,SAACgI,GAAU,OAAA,GAAKA,MACnDtK,KAAKqR,aAAeL,EAAOvE,KAAKnK,EAAAA,KAAI,SAACgI,GAAU,OAAA,GAAKA,aAEtDyG,EAAA7T,UAAAgU,QAAA,SAAQ3O,EAAc+H,GACpB,MAAO,MAAK/H,EAAO+H,GAAS,GAAC,eAAc/H,EAAO+H,GAAS,kBCxB/CgH,IACd,OAAO,SAAC5G,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAEtB,SAAU,IAAI7J,IAAI,gBAWnCgS,EAA0BC,GACxC,OAAO,SAAC9G,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAEtB,SAAU,IAAI7J,IAAGH,EAAKoS,gBAGvCC,KACd,OAAO,SAAC/G,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAER,SAAU,IAAI3K,IAAI,gBAGnCmS,GAA0BF,GACxC,OAAO,SAAC9G,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAER,SAAU,IAAI3K,IAAGH,EAAKsL,EAAMR,SAAasH,gBAG1DG,GAA6BH,GAC3C,OAAO,SAAC9G,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAER,SAAU,IAAI3K,IAAIH,EAAIsL,EAAMR,UAAUtI,QAAO,SAACN,GAAO,OAACkQ,EAAII,SAAStQ,mBAGpFuQ,GAA0BL,GACxC,OAAO,SAAC9G,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAER,SAAU,IAAI3K,IAAGH,EAAKoS,gBCzBvCM,GAA8BzH,GAC5C,OAAO,SAACK,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAEL,eAAcxN,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAO4E,EAAML,gBAAmBA,eC8D/D0H,GAAqB/Q,GACnC,OAAO,SAAC0J,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAE1J,MAAO0J,EAAM1J,MAAMsB,KAAI,SAACsD,GAAS,OAAA/I,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAMF,GAAS5E,EAAMc,MAAK,SAAC7D,GAAM,OAAAA,EAAEqD,KAAOsE,EAAKtE,sBAOjG0Q,GAAoBR,GAClC,OAAO,SAAC9G,GAEN,IAAe,IADA5K,EAAeC,OAAOoC,6BAA6BqP,EAAK9G,EAAM1J,OAE3E,OAAO0J,EAET,IAAMuH,EAAU,IAAI/D,IACpBsD,EAAI9Q,SAAQ,SAACY,GACX,IAAMD,EAAOqJ,EAAM1J,MAAMc,MAAK,SAAC7D,GAAM,OAAAA,EAAEqD,KAAOA,KAC1CD,GACF4Q,EAAQC,IAAI5Q,EAAID,MAGpB,IAAM8Q,EAAYrS,EAAeC,OAAOwF,oBACtCiM,EACG5P,QAAO,SAACN,GAAO,OAAA2Q,EAAQzO,IAAIlC,MAC3BgB,KAAI,SAAChB,GACJ,IAAMD,EAAO4Q,EAAQ9F,IAAI7K,GACzB,OAAOxB,EAAeC,OAAOmD,oBAC3B7B,EAAKyD,KAAOzD,EAAKgC,MAAQ,EACzBhC,EAAK0D,IAAM1D,EAAKiC,OAAS,EACzBjC,EAAKgC,MACLhC,EAAKiC,OACLjC,EAAKkC,YAIP6O,EAASvV,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,CACbxE,GAAI9B,IACJqK,KAAM,SACHsI,GAAS,CACZ5O,OAAQ,EACRsC,OAAQlG,KAAK+E,IAAGM,MAARrF,KAAIP,EAAQsL,EAAM1J,MAAMY,QAAO,SAACP,GAAS,OAAC4Q,EAAQzO,IAAInC,EAAKC,OAAKgB,KAAI,SAACjB,GAAS,OAAAA,EAAKwE,YAAW,EACtGpE,SAAU+P,EACP5P,QAAO,SAACN,GAAO,OAAA2Q,EAAQzO,IAAIlC,MAC3BgB,KAAI,SAAChB,GACJ,IAAMD,EAAO4Q,EAAQ9F,IAAI7K,GACnBqB,EAAqB7C,EAAeC,OAAOmD,oBAC/C7B,EAAKyD,KAAOzD,EAAKgC,MAAQ,EACzBhC,EAAK0D,IAAM1D,EAAKiC,OAAS,EACzBjC,EAAKgC,MACLhC,EAAKiC,OACLjC,EAAKkC,QALCc,EAAE1B,EAAA0B,GAAEC,EAAE3B,EAAA2B,GAAEL,EAAEtB,EAAAsB,GAAEG,EAAEzB,EAAAyB,GAOtB,OAAAvH,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GACKzE,GACAvB,EAAeC,OAAO8G,oBAAoB,CAC3CxC,GAAI,CAACA,EAAG,GAAK8N,EAAUrN,KAAMT,EAAG,GAAK8N,EAAUpN,KAC/CT,GAAI,CAACA,EAAG,GAAK6N,EAAUrN,KAAMR,EAAG,GAAK6N,EAAUpN,KAC/Cd,GAAI,CAACA,EAAG,GAAKkO,EAAUrN,KAAMb,EAAG,GAAKkO,EAAUpN,KAC/CX,GAAI,CAACA,EAAG,GAAK+N,EAAUrN,KAAMV,EAAG,GAAK+N,EAAUpN,aAKzD,OAAAlI,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAY4E,GAAK,CAAE1J,MAAK5B,EAAMsL,EAAM1J,MAAMY,QAAO,SAACP,GAAS,OAAC4Q,EAAQzO,IAAInC,EAAKC,OAAI,CAAE8Q,gBAIvEC,GAAmB/Q,GACjC,OAAO,SAACoJ,GACA,IAAA/H,EAAA7D,EAAqBgB,EAAeC,OAAOgC,yBAAyBT,EAAIgR,EAAAA,UAAY5H,EAAM1J,SAAzFK,EAAIsB,EAAA,GAAKiG,EAAOjG,EAAA0G,MAAA,GACjBkJ,EAAWlR,EAAKI,SAASa,KAAI,SAACqG,WAClC,OAAA9L,OAAAiJ,OAAAjJ,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GACK6C,GACA7I,EAAeC,OAAOmI,6CAA6C7G,EAAMA,EAAKkC,OAAQoF,IAAM,CAC/FpF,QAAqB,QAAbtB,EAAC0G,EAAMpF,cAAM,IAAAtB,EAAAA,EAAI,IAAiB,QAAhBC,EAAKb,EAAKkC,cAAM,IAAArB,EAAAA,EAAI,QAGlD,GAAK0G,EAAQhL,OAEN,CACL,IAAI4U,EAAS5J,EAAQG,QAErB,IADAyJ,EAAO/Q,SAAQrC,EAAOoT,EAAO/Q,SAASG,QAAO,SAAC+G,GAAoB,OAAAA,EAAMrH,KAAOD,EAAKC,MAAQiR,GACrF3J,EAAQhL,QAAQ,CACrB,IAAM6U,EAAa7J,EAAQG,QAC3B0J,EAAWhR,SAAWgR,EAAWhR,SAASa,KAAI,SAACqG,GAAoB,OAACA,EAAMrH,KAAOkR,EAAOlR,GAAKkR,EAAS7J,KACtG6J,EAASC,EAEX,OAAA5V,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAY4E,GAAK,CAAE1J,MAAK5B,EAAMsL,EAAM1J,MAAMY,QAAO,SAAC3D,GAAM,OAAAA,EAAEqD,KAAOkR,EAAOlR,MAAG,CAAEkR,MAT7E,OAAA3V,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAY4E,GAAK,CAAE1J,MAAK5B,EAAMsL,EAAM1J,MAAMY,QAAO,SAAC3D,GAAM,OAAAA,EAAEqD,KAAOD,EAAKC,MAAQiR,eC7IpEG,KACd,OAAO,SAAChI,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAEF,aAAcd,EAAcc,iDJMhDuG,GAAmBlD,EAAAiB,kBAAAhE,sCAAnBiG,EAAmBhC,UAAA,CAAA,CAAA,mBAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,0BAAA,GAAA,QAAA,OAAA,SAAA,OAAA,EAAA,QAAA,CAAA,KAAA,YAAA,eAAA,kBAAA,CAAA,OAAA,OAAA,SAAA,2BAAA,eAAA,KAAA,CAAA,KAAA,OAAA,eAAA,kBAAA,CAAA,OAAA,mBAAA,CAAA,OAAA,OAAA,SAAA,yBAAA,eAAA,KAAA,CAAA,QAAA,OAAA,SAAA,OAAA,OAAA,eAAAC,SAAA,SAAAC,EAAAC,SKbhCsD,EAAAA,iBAAA9B,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,QACEA,EAAAA,eAAAA,EAAAA,UAAAA,2CACEpD,EAAAA,UAAAA,EAAAA,OAAAA,uBACFqD,EAAAA,eACAD,EAAAA,eAAAA,EAAAA,UAAAA,2CACEpD,EAAAA,UAAAA,GAAAA,OAAAA,6CACAA,EAAAA,UAAAA,GAAAA,OAAAA,wBACFqD,EAAAA,eACFA,EAAAA,eACArD,EAAAA,UAAAA,GAAAA,OAAAA,GACFqD,EAAAA,sBAT4BjC,EAAAA,UAAAA,GAAA+D,EAAAA,YAAAA,QAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,aAAAA,CAAkC,SAAA/E,EAAAgF,YAAA,EAAA,GAAAxD,EAAA+B,cAClDvC,EAAAA,UAAAA,GAAA+D,EAAAA,YAAAA,IAAAA,EAAAA,YAAAA,EAAAA,GAAAA,EAAAA,cAEW/D,EAAAA,UAAAA,GAAA+D,EAAAA,YAAAA,QAAAA,EAAAA,YAAAA,EAAAA,GAAAA,EAAAA,cAAAA,CAAmC,SAAA/E,EAAAgF,YAAA,EAAA,GAAAxD,EAAAgC,eAC9CxC,EAAAA,UAAAA,GAAA+D,EAAAA,YAAAA,QAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,cAAAA,CAAmC,SAAA/E,EAAAgF,YAAA,GAAA,GAAAxD,EAAAgC,eACnCxC,EAAAA,UAAAA,GAAA+D,EAAAA,YAAAA,IAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,uTC0BV,SAAAE,EAAoBtD,EAAyCuD,GAAzC/S,KAAAwP,OAAAA,EAAyCxP,KAAA+S,IAAAA,EArBtD/S,KAAAgT,gBAAiB,EAGjBhT,KAAAiT,YAAa,EAEbjT,KAAAkT,UAAY,IAAIC,EAAAA,aAEhBnT,KAAAoT,SAAW,IAAID,EAAAA,aAEfnT,KAAAqT,SAAW,IAAIF,EAAAA,aAEfnT,KAAAsT,iBAAmB,IAAIH,EAAAA,aACvBnT,KAAAuT,cAAe,EACdvT,KAAAwT,aAAe,IAAIC,EAAAA,aACnBzT,KAAA0T,WAAaC,EAAAA,UAAwBnI,OAAQ,eAC7CxL,KAAA4T,SAAWD,EAAAA,UAAwBnI,OAAQ,aAI3CxL,KAAA6T,SAAWF,EAAAA,UAAyBG,SAAU,WAC9C9T,KAAA+T,OAASJ,EAAAA,UAAyBG,SAAU,SAElD9T,KAAKgU,WAAaL,EAAAA,UAAwB3T,KAAKwP,OAAOK,cAAe,eAAepD,KAAK7K,EAAAA,QAAO,SAAC5C,GAAM,OAAa,IAAbA,EAAEiV,WACzGjU,KAAKkU,YAAcP,EAAAA,UAAwB3T,KAAKwP,OAAOK,cAAe,gBACtE7P,KAAKmU,YAAcR,EAAAA,UAAwB3T,KAAKwP,OAAOK,cAAe,uBAGxEiD,EAAA5V,UAAAiR,SAAA,WAAA,IAAA5N,EAAAP,KACEA,KAAKoU,sBACLpU,KAAKgU,WACFvH,KACC7K,EAAAA,QAAO,WAAM,OAACrB,EAAKyS,kBACnBpR,EAAAA,QAAO,WAAM,OAACrB,EAAK0S,YAAa1S,EAAKgT,gBACrCc,EAAAA,WAAU,SAACC,GAET,OADA/T,EAAK2S,UAAUqB,KAAKD,GACb/T,EAAKmT,WAAWjH,KAAK+H,EAAAA,UAAUjU,EAAKqT,SAASnH,KAAKnK,EAAAA,KAAI,SAACmS,GAAW,OAAAlU,EAAK8S,SAASkB,KAAKE,aAG/FC,WAAU,SAACC,GAAW,OAAApU,EAAK6S,SAASmB,KAAKI,OAG9C7B,EAAA5V,UAAA0X,YAAA,WACE5U,KAAKwT,aAAaqB,eAGpB/B,EAAA5V,UAAAkX,oBAAA,WAAA,IAAA7T,EAAAP,KACEA,KAAKwT,aAAasB,IAChB9U,KAAKkU,YACFzH,KACC7K,EAAAA,QAAO,WAAM,OAACrB,EAAKyS,kBACnBpR,EAAAA,QAAO,WAAM,OAAArB,EAAK0S,cAClBoB,EAAAA,WAAU,WACR,OAAA9T,EAAKsT,SAASpH,KACZ4H,EAAAA,WAAU,SAACrV,GAOT,OANAuB,EAAKgT,aAAyB,MAAVvU,EAAExB,IACtB+C,EAAKwS,IAAIgC,gBACLxU,EAAKgT,eACPvU,EAAEgW,iBACFhW,EAAEiW,mBAEG1U,EAAKwT,UAEdzR,EAAAA,KAAI,WACF/B,EAAKgT,cAAe,EACpBhT,EAAK8S,SAASkB,UAEhBC,EAAAA,UAAUjU,EAAK4T,aACfe,EAAAA,UAAS,WACP3U,EAAKgT,cAAe,EACpBhT,EAAK8S,SAASkB,eAKrBG,uECtFT7D,EAAAA,eAAAA,EAAAA,cAAAA,GAIEsE,EAAAA,WAAAA,aAAAA,SAAAA,GAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,UAAAA,OAAAA,EAAAA,gBAAAA,UAAAA,EAAAA,KAAAA,CAAqC,YAAA,SAAAC,GAAA,OAAAvH,EAAAwH,cAAAC,GAAAzH,EAAA0H,gBAAAC,OAAAJ,KAArCD,CAAqC,YAAA,WAAA,OAAAtH,EAAAwH,cAAAC,GAAAzH,EAAA0H,gBAAAE,YAArCN,CAAqC,gBAAA,WAAAtH,EAAAwH,cAAAC,GAAA,IAAA3H,EAAA0B,EAAAqG,UAAA,OAAA7H,EAAA0H,gBAAAI,WAAAhI,EAAArM,MAArC6T,CAAqC,gBAAA,WAAAtH,EAAAwH,cAAAC,GAAA,IAAA3H,EAAA0B,EAAAqG,UAAA,OAAA7H,EAAA0H,gBAAAK,aAAAjI,EAAArM,OAMtCwP,EAAAA,yCAPCrC,EAAAA,WAAAA,iBAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAA+B,OAAAd,sCDMpBmF,IAAkBjF,EAAAiB,kBAAAjB,EAAAwC,YAAAxC,EAAAiB,kBAAAjB,EAAAgI,uDAAlB/C,GAAkB/D,UAAA,CAAA,CAAA,GAAA,cAAA,KAAAuB,OAAA,CAAA0C,eAAA,iBAAAC,WAAA,cAAA6C,QAAA,CAAA5C,UAAA,YAAAE,SAAA,WAAAC,SAAA,WAAAC,iBAAA,oBAAAyC,SAAA,CAAA,iBAG7B1Y,EAAA,CADC2Y,EAAAA,sDAID3Y,EAAA,CADC2Y,EAAAA,kDEEH,IAAMC,GAMF,CACFxL,GAAI,CACF,CACEyL,QAAS,MACTC,SAAU,MACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,MAAOmB,MAAO2X,EAAUvR,OAEtE,CACEmR,QAAS,MACTC,SAAU,KACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,MAAOmB,MAAO2X,EAAUlT,MAEtE,CACE8S,QAAS,MACTC,SAAU,SACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,MAAOmB,MAAO2X,EAAUpR,WAGxEyF,GAAI,CACF,CACEuL,QAAS,SACTC,SAAU,MACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,MAAOmB,MAAO2X,EAAUvR,IAAMsR,EAAS/S,UAErF,CACE4S,QAAS,SACTC,SAAU,KACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,MAAOmB,MAAO2X,EAAUlT,GAAKiT,EAAS/S,UAEpF,CACE4S,QAAS,SACTC,SAAU,SACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,MAAOmB,MAAO2X,EAAUpR,OAASmR,EAAS/S,WAG1FsH,GAAI,CACF,CACEsL,QAAS,OACTC,SAAU,OACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,OAAQmB,MAAO2X,EAAUxR,QAEvE,CACEoR,QAAS,OACTC,SAAU,KACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,OAAQmB,MAAO2X,EAAUnT,MAEvE,CACE+S,QAAS,OACTC,SAAU,QACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,OAAQmB,MAAO2X,EAAUnR,UAGzE0F,GAAI,CACF,CACEqL,QAAS,QACTC,SAAU,OACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,OAAQmB,MAAO2X,EAAUxR,KAAOuR,EAAShT,SAEvF,CACE6S,QAAS,QACTC,SAAU,KACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,OAAQmB,MAAO2X,EAAUnT,GAAKkT,EAAShT,SAErF,CACE6S,QAAS,QACTC,SAAU,QACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,OAAQmB,MAAO2X,EAAUnR,MAAQkR,EAAShT,UAG1FF,GAAI,CACF,CACE+S,QAAS,KACTC,SAAU,MACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,MAAOmB,MAAO2X,EAAUvR,IAAMsR,EAAS/S,OAAS,KAE9F,CACE4S,QAAS,KACTC,SAAU,KACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,MAAOmB,MAAO2X,EAAUlT,GAAKiT,EAAS/S,OAAS,KAE7F,CACE4S,QAAS,KACTC,SAAU,SACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,MAAOmB,MAAO2X,EAAUpR,OAASmR,EAAS/S,OAAS,MAGnGF,GAAI,CACF,CACE8S,QAAS,KACTC,SAAU,OACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,OAAQmB,MAAO2X,EAAUxR,KAAOuR,EAAShT,MAAQ,KAE/F,CACE6S,QAAS,KACTC,SAAU,KACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,OAAQmB,MAAO2X,EAAUnT,GAAKkT,EAAShT,MAAQ,KAE7F,CACE6S,QAAS,KACTC,SAAU,QACVC,UAAW,SAACC,EAAUC,GAAc,MAAA,CAAG9Y,IAAK,OAAQmB,MAAO2X,EAAUnR,MAAQkR,EAAShT,MAAQ,qBAsBlG,SAAAkT,EAAoBvI,EAAoCjD,GAAxD,IAAAxK,EAAAP,KAAoBA,KAAAgO,MAAAA,EAAoChO,KAAA+K,MAAAA,EANhD/K,KAAAwW,gBAAoC,KACpCxW,KAAAyW,cAAoC,IAAIvI,IAGxClO,KAAA0W,IAAM,EAGZ1W,KAAK2W,OAAS3W,KAAKgO,MAAM1B,iBAAgB,SAAC5B,GAAU,OAAAA,EAAM1J,SAC1DhB,KAAKgO,MAAMxB,QAAO,SAAC9B,GAAU,OAAAA,EAAM1J,SAAO0T,WAAU,SAAC1T,GAAU,OAACT,EAAKS,MAAQA,KAC7EhB,KAAKgO,MAAMxB,QAAO,SAAC9B,GAAU,OAAAA,EAAMtB,YAAUsL,WAAU,SAAChK,GAAU,OAACnK,EAAK6I,SAAWsB,KACnF1K,KAAKgO,MAAMxB,QAAO,SAAC9B,GAAU,OAAAA,EAAML,kBAAgBqK,WAAU,SAAChK,GAAU,OAACnK,EAAK8J,eAAiBK,YAGjG6L,EAAArZ,UAAA0Z,kBAAA,SAAkB3Y,EAAWoD,GAC3B,OAAOA,EAAKC,IAGdiV,EAAArZ,UAAA2Z,UAAA,SAAUC,EAAkBzV,GAA5B,IAAAd,EAAAP,KACE8W,EAAG9B,iBACH8B,EAAG7B,kBACHjV,KAAKyW,cAAcM,QACnB/W,KAAKwW,gBAAkB,CAACM,EAAGE,QAASF,EAAGG,SACvC,IP1JsCzF,EO0JlCpI,EAAQhK,EAAiBY,KAAKoJ,UAC7BpJ,KAAKoJ,SAAS5F,IAAInC,EAAKC,MAC1BtB,KAAKgO,MAAM5B,SAASqF,MACpBzR,KAAKgO,MAAM5B,SAASkF,KACpBtR,KAAKgO,MAAM5B,UP9JyBoF,EO8JC,CAACnQ,EAAKC,IP7JxC,SAACoJ,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAEtB,SAAU,IAAI7J,IAAGH,EAAKsL,EAAMtB,SAAaoI,SO8JpEpI,EAAW,CAAC/H,EAAKC,KAGnBtB,KAAKkX,iBAAmBlX,KAAK+K,MAAMxF,oBACjC6D,EACG9G,KAAI,SAAChB,GAAO,OAAAf,EAAKwK,MAAMlJ,YAAYP,EAAIf,EAAKS,UAC5CsB,KAAI,SAACsD,GAAS,OAAArF,EAAKwK,MAAM7H,oBAAoB0C,EAAKd,KAAOc,EAAKvC,MAAQ,EAAGuC,EAAKb,IAAMa,EAAKtC,OAAS,EAAGsC,EAAKvC,MAAOuC,EAAKtC,OAAQsC,EAAKrC,YAExIvD,KAAKmX,gBAAkBnX,KAAKgB,MAAMY,QAAO,SAACgE,GAAS,OAACwD,EAASwI,SAAShM,EAAKtE,OAE3E8H,EAAS1I,SAAQ,SAACY,GAChB,IAAMsE,EAAOrF,EAAKS,MAAMc,MAAK,SAAC/C,GAAM,OAAAA,EAAEuC,KAAOA,KAC7Cf,EAAKkW,cAAcvE,IAAItM,EAAKtE,GAAEzE,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GACzBF,GAAI,CACPwR,WAAYxR,EAAKd,KAAOc,EAAKvC,MAAQ,EAAI9C,EAAK2W,iBAAiBpS,MAAQvE,EAAK2W,iBAAiB7T,MAC7FgU,WAAYzR,EAAKb,IAAMa,EAAKtC,OAAS,EAAI/C,EAAK2W,iBAAiBnS,KAAOxE,EAAK2W,iBAAiB5T,cAKlGiT,EAAArZ,UAAAsY,OAAA,SAAOsB,GAAP,IJ/K2CtM,EI+K3CjK,EAAAP,KACE,GAAIA,KAAKwW,gBAAiB,CACxBxW,KAAKgO,MAAM5B,SAASsG,MACZ,IAAA4E,EAAUtX,KAAKqK,eAAcC,MAC/BrI,EAAAnD,EAASkB,KAAKwW,gBAAe,GAA5B5P,EAAC3E,EAAA,GAAEoJ,EAACpJ,EAAA,GACLC,EAAApD,EAAW,EAAEgY,EAAGE,QAAUpQ,GAAK0Q,GAAQR,EAAGG,QAAU5L,GAAKiM,GAAM,GAA9DC,EAAErV,EAAA,GAAEsV,EAAEtV,EAAA,GACPuV,EAAQ5a,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GACT9F,KAAKkX,kBAAgB,CACxBpS,KAAM9E,KAAKkX,iBAAiBpS,KAAOyS,EACnCxS,IAAK/E,KAAKkX,iBAAiBnS,IAAMyS,EACjCrS,MAAOnF,KAAKkX,iBAAiB/R,MAAQoS,EACrCrS,OAAQlF,KAAKkX,iBAAiBhS,OAASsS,EACvCrU,GAAInD,KAAKkX,iBAAiB/T,GAAKoU,EAC/BnU,GAAIpD,KAAKkX,iBAAiB9T,GAAKoU,IAE3BE,EAA6D,CACjE/M,GAAI,KACJF,GAAI,KACJG,GAAI,KACJC,GAAI,KACJ1H,GAAI,KACJC,GAAI,MAENpD,KAAKmX,gBAAgBzW,SAAQ,SAACW,GAC5B,IAAMsW,EAAWpX,EAAKwK,MAAMlG,eAAexD,EAAKgC,MAAOhC,EAAKiC,OAAQjC,EAAKyD,KAAMzD,EAAK0D,IAAK1D,EAAKkC,QAC9F,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAM7C,SAAQ,SAAC+B,GAC5C,IAAMmV,EA4ChB,SACEnV,EACA4T,EACAC,EACAI,GAEA,OAAOT,GAA+BxT,GACnCH,KAAI,SAACL,OAAEiU,EAAOjU,EAAAiU,QAAEC,EAAQlU,EAAAkU,SAAEC,EAASnU,EAAAmU,UAAO,MAAA,CACzC1L,MAAO/K,KAAKkY,IAAIxB,EAASH,GAAWI,EAAUH,IAAaO,EAC3DlS,SAAU8R,EAAUH,GACpB2B,KAAM1B,EAAUC,EAAUC,OAE3BxU,MAAK,SAAC8D,GAAS,OAAAA,EAAK8E,SAxDAqN,CAA2BtV,EAAWgV,EAAUE,EAAUpX,EAAKmW,IAAMY,GACpF,GAAIM,EAAQ,CACF,IAAAlN,EAA0BkN,EAAMlN,MAAzBlG,EAAmBoT,EAAMpT,SAAfsT,EAASF,EAAME,KACpCpN,IACFgN,EAAcjV,GAAa,CAAEiI,MAAKA,EAAElG,SAAQA,GAC5CiT,EAASK,EAAKta,KAAOsa,EAAKnZ,cAKlC,IAAMqZ,EAAoB,GAC1BhY,KAAKyW,cAAc/V,SAAQ,SAACW,GAClB,IAAA+V,EAAiE/V,EAAI+V,UAA1DC,EAAsDhW,EAAIgW,UAA/ChU,EAA2ChC,EAAIgC,MAAxCC,EAAoCjC,EAAIiC,OAAnB2U,GAAe5W,EAAIsW,kBlBvL9DrZ,EAAGU,GACtB,IAAIyF,EAAI,GACR,IAAK,IAAIxH,KAAKqB,EAAOzB,OAAOK,UAAUC,eAAeC,KAAKkB,EAAGrB,IAAM+B,EAAEkZ,QAAQjb,GAAK,IAC9EwH,EAAExH,GAAKqB,EAAErB,IACb,GAAS,MAALqB,GAAqD,mBAAjCzB,OAAOsb,sBACtB,CAAA,IAAIla,EAAI,EAAb,IAAgBhB,EAAIJ,OAAOsb,sBAAsB7Z,GAAIL,EAAIhB,EAAEW,OAAQK,IAC3De,EAAEkZ,QAAQjb,EAAEgB,IAAM,GAAKpB,OAAOK,UAAUkb,qBAAqBhb,KAAKkB,EAAGrB,EAAEgB,MACvEwG,EAAExH,EAAEgB,IAAMK,EAAErB,EAAEgB,KAE1B,OAAOwG,EkB8KiE4T,CAAKhX,EAAnE,CAAA,YAAA,YAAA,QAAA,SAAA,cACN2W,EAAS9Y,KAAIrC,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GACRmS,GAAU,CACb5U,MAAKA,EACLC,OAAMA,EACNwB,KAAMsS,EAAYK,EAASpU,MAAQoU,EAAS3S,KAAOzB,EAAQ,EAC3D0B,IAAKsS,EAAYI,EAASnU,OAASmU,EAAS1S,IAAMzB,EAAS,QAI/DtD,KAAKgO,MAAM5B,UJ/N4B5B,EI+NCkN,EJ9NrC,SAAChN,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAEF,aAAY3N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAO4E,EAAMF,cAAiBA,QI+NrExK,KAAKgO,MAAM5B,SAAS2F,GAAYiG,MAIpCzB,EAAArZ,UAAAuY,QAAA,WACEzV,KAAKwW,gBAAkB,KACvBxW,KAAKgO,MAAM5B,SAASsG,MACpB1S,KAAKyW,cAAcM,SAGrBR,EAAArZ,UAAAyY,WAAA,SAAWrU,GACTtB,KAAKgO,MAAM5B,SAASsF,GAAiB,CAACpQ,MAGxCiV,EAAArZ,UAAA0Y,aAAA,SAAatU,GACNtB,KAAKoJ,SAAS5F,IAAIlC,IACrBtB,KAAKgO,MAAM5B,SAASuF,GAAoB,CAACrQ,6CArHlCiV,IAAe1I,EAAAiB,kBAAAhE,GAAA+C,EAAAiB,kBAAAhP,uCAAfyW,GAAexH,UAAA,CAAA,CAAA,cAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,cAAA,GAAA,EAAA,iBAAA,OAAA,YAAA,WAAA,WAAA,eAAA,eAAA,EAAA,QAAA,UAAA,gBAAA,CAAA,cAAA,GAAA,EAAA,iBAAA,OAAA,YAAA,WAAA,WAAA,eAAA,iBAAAC,SAAA,SAAAC,EAAAC,SDrI5BV,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,6BACmBF,EAAAA,WAAAA,UAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,QAAAA,CAAmB,eAAAY,EAAAuH,4NEUlCnJ,EAAAA,UAAAA,EAAAA,IAAAA,0CAAgCgB,EAAAA,WAAAA,SAAAA,EAAAA,WAAAA,cAAAA,oCAAhCE,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,IAAAA,0BAAIF,EAAAA,WAAAA,QAAAA,EAAAA,6DAcAoC,EAAAA,eAAAA,EAAAA,KAAAA,IAA0DsE,EAAAA,WAAAA,SAAAA,WAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,cAAAA,GAAAA,EAAAA,EAAAA,YAAAA,GAAAA,OAAAA,EAAAA,qBAAAA,EAAAA,gBAAwD,MAChH1H,EAAAA,UAAAA,EAAAA,IAAAA,IACAoD,EAAAA,eAAAA,EAAAA,QAAMyH,EAAAA,OAAAA,EAAAA,MAAExH,EAAAA,eACVA,EAAAA,oEACAD,EAAAA,eAAAA,EAAAA,KAAAA,IAAyDsE,EAAAA,WAAAA,SAAAA,WAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,cAAAA,GAAAA,EAAAA,EAAAA,YAAAA,GAAAA,OAAAA,EAAAA,qBAAAA,EAAAA,gBAAwD,MAC/G1H,EAAAA,UAAAA,EAAAA,IAAAA,IACAoD,EAAAA,eAAAA,EAAAA,QAAMyH,EAAAA,OAAAA,EAAAA,MAAExH,EAAAA,eACVA,EAAAA,oEAKAD,EAAAA,eAAAA,EAAAA,KAAAA,IAAkEsE,EAAAA,WAAAA,SAAAA,WAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,cAAAA,GAAAA,EAAAA,EAAAA,YAAAA,GAAAA,OAAAA,EAAAA,MAAAA,EAAAA,mBAChE1H,EAAAA,UAAAA,EAAAA,IAAAA,IACAoD,EAAAA,eAAAA,EAAAA,QAAMyH,EAAAA,OAAAA,EAAAA,MAAExH,EAAAA,eACRD,EAAAA,eAAAA,EAAAA,OAAAA,IAAyByH,EAAAA,OAAAA,EAAAA,kBAAaxH,EAAAA,eACxCA,EAAAA,oEACAD,EAAAA,eAAAA,EAAAA,KAAAA,IAAsFsE,EAAAA,WAAAA,SAAAA,WAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,gBAAAA,OAAAA,OAAAA,EAAAA,gBAAAA,UAAAA,EAAAA,OACpF1H,EAAAA,UAAAA,EAAAA,IAAAA,IACAoD,EAAAA,eAAAA,EAAAA,QAAMyH,EAAAA,OAAAA,EAAAA,MAAExH,EAAAA,eACRD,EAAAA,eAAAA,EAAAA,OAAAA,IAAyByH,EAAAA,OAAAA,EAAAA,kBAAaxH,EAAAA,eACxCA,EAAAA,oEAhCJD,EAAAA,eAAAA,EAAAA,MAAAA,GAGEsE,EAAAA,WAAAA,eAAAA,SAAAA,GAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,OAAAA,EAAAA,EAAAA,YAAAA,GAAAA,OAAAA,EAAAA,gBAAAA,YAAAA,EAAAA,EAAAA,KAAAA,CAA+C,gBAAA,WAAAtH,EAAAwH,cAAAkD,GAAA,IAAAC,EAAAnJ,EAAAoJ,OAAA,OAAA5K,EAAA0H,gBAAAmD,aAAAF,EAAAlX,MAA/C6T,CAA+C,gBAAA,WAAAtH,EAAAwH,cAAAkD,GAAA,IAAAC,EAAAnJ,EAAAoJ,OAAA,OAAA5K,EAAA0H,gBAAA9D,cAAA+G,EAAAlX,OAI/CuP,EAAAA,eAAAA,EAAAA,QAAMyH,EAAAA,OAAAA,GAAgBxH,EAAAA,eACxBA,EAAAA,eACAD,EAAAA,eAAAA,EAAAA,mBAAAA,KAAAA,GACEA,EAAAA,eAAAA,EAAAA,KAAAA,GACElC,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAAAA,GAIAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAAAA,GAIAkC,EAAAA,eAAAA,EAAAA,KAAAA,IAAqCsE,EAAAA,WAAAA,SAAAA,WAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,gBAAAA,EAAAA,EAAAA,YAAAA,GAAAA,OAAAA,EAAAA,YAAAA,EAAAA,mBACnC1H,EAAAA,UAAAA,EAAAA,IAAAA,IACAoD,EAAAA,eAAAA,GAAAA,QAAMyH,EAAAA,OAAAA,GAAAA,MAAExH,EAAAA,eACVA,EAAAA,eACAnC,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,KAAAA,wBAKAA,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,KAAAA,GAKFmC,EAAAA,eACFA,EAAAA,0DAhCE6H,EAAAA,YAAAA,SAAAA,EAAAA,QAKM9J,EAAAA,UAAAA,GAAA+J,EAAAA,kBAAAA,EAAAA,OAIC/J,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,QAAAA,EAAAA,QAIAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,QAQAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,YAAAA,GAAAA,EAAAA,EAAAA,eAKAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,IAAAA,EAAAA,SAAAA,MAAAA,EAAAA,UAAAA,EAAAA,SAAAA,2BCHX,SAAAtD,EACSqE,EACCxB,EACAjD,EACA8N,GAJV,IAAAtY,EAAAP,KACSA,KAAAwP,OAAAA,EACCxP,KAAAgO,MAAAA,EACAhO,KAAA+K,MAAAA,EACA/K,KAAA6Y,eAAAA,EAER7Y,KAAK8Y,WAAa9Y,KAAKgO,MACpB1B,iBAAgB,SAAC5B,GAAU,OAAAA,EAAM1J,SACjCyL,KAAKnK,EAAAA,KAAI,SAACtB,GAAU,OAAAT,EAAKwY,uBAAuBxY,EAAKwK,MAAMvF,oBAAoBjF,EAAKwK,MAAMhK,6BAA6BC,SAC1HhB,KAAKgZ,cAAgBhZ,KAAKgO,MAAM1B,iBAAgB,SAAC5B,GAAU,OAAAA,EAAMtB,YAAUqD,KAAKnK,EAAAA,KAAI,SAAC8G,GAAa,OAAAhK,EAAIgK,OACtGpJ,KAAKiZ,aAAejZ,KAAKgO,MACtB1B,iBAAgB,SAAC5B,GAAU,OAAAA,EAAMtB,YACjCqD,KACC7K,EAAAA,QAAO,WAAM,QAAErB,EAAK2Y,aACpB5W,EAAAA,KAAI,SAAC8G,GACH,OAAAA,EAAS7G,KAAO,KACVnD,EAAIgK,GAAUtH,MAAK,SAACR,SACdD,EAAqB,QAAjBY,EAAG1B,EAAK2Y,iBAAS,IAAAjX,OAAA,EAAAA,EAAEkX,sBAAsBrX,MAAK,SAAC8D,GAAS,OAAAA,EAAKpI,MAAQ8D,KAC/E,OAAOD,GAAQA,EAAK+X,kBAKhCpZ,KAAKgO,MACF1B,iBAAgB,SAAC5B,GAAU,OAAAA,EAAMtB,YACjCsL,WAAU,SAACtL,GACV7I,EAAK6I,SAAWA,YAItB+B,EAAAjO,UAAAuU,cAAA,SAAcnQ,GACPtB,KAAKoJ,SAAS5F,IAAIlC,IACrBtB,KAAKgO,MAAM5B,SAASuF,GAAoB,CAACrQ,MAI7C6J,EAAAjO,UAAAwb,aAAA,SAAapX,GACXtB,KAAKgO,MAAM5B,SAASsF,GAAiB,CAACpQ,MAGxC6J,EAAAjO,UAAAmc,eAAA,SAAeC,EAAejY,GAC5B,MAAO,YAAYA,EAAKC,GAAE,IAAID,EAAKwE,QAGrCsF,EAAAjO,UAAA6b,uBAAA,SAAuB/X,GAAvB,IAAAT,EAAAP,KACE,OAAOgB,EAAMsB,KAAI,SAACjB,SAChB,OAAAxE,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GACKzE,GAAI,CACPI,SAAUJ,EAAKI,UAAYlB,EAAKwY,uBAAuB1X,EAAKI,UAC5DyJ,MAAO7J,EAAKwI,KACZrM,IAAK6D,EAAKC,GACViY,SAAsB,QAAdtX,EAACZ,EAAKI,gBAAQ,IAAAQ,OAAA,EAAAA,EAAErE,cAK9BuN,EAAAjO,UAAAsc,YAAA,SAAYC,EAAmBC,EAA+BrY,GACvDrB,KAAKoJ,SAAS5F,IAAInC,EAAK7D,MAC1BwC,KAAKgO,MAAM5B,SAASmF,EAAiB,CAAClQ,EAAK7D,OAE7CwC,KAAK6Y,eAAe1a,OAAOsb,EAAOC,IAGpCvO,EAAAjO,UAAAyc,aAAA,SAAaP,SACX,OAAsB,QAAtBnX,EAAOmX,MAAAA,OAAU,EAAVA,EAAY5b,WAAG,IAAAyE,EAAAA,EAAI,QAG5BkJ,EAAAjO,UAAA0c,iBAAA,SAAiBH,GAAjB,IAAAlZ,EAAAP,KACOA,KAAK6Z,YACR7Z,KAAK6Z,UAAY7Z,KAAK2Z,aAAaF,EAAMpY,KAAK+X,aAEhD,IAAM5H,EAAMiI,EAAMK,aAAalY,QAAO,SAACP,GAAS,OAAAd,EAAKoZ,aAAatY,EAAK+X,cAAgB7Y,EAAKsZ,aAAWvX,KAAI,SAACjB,GAAS,OAAAA,EAAK7D,OAC1HwC,KAAKgO,MAAM5B,SAASmF,EAAiBC,IACrCxR,KAAKgO,MAAM5B,SAASyF,GAAiBL,KAGvCrG,EAAAjO,UAAA6c,UAAA,SAAUN,GACJA,EAAMpY,OACJ,YAAY2Y,KAAKC,UAAUC,YACzBT,EAAMA,MAAMU,QACdna,KAAK4Z,iBAAiBH,IAEtBzZ,KAAK6Z,UAAY7Z,KAAK2Z,aAAaF,EAAMpY,KAAK+X,YAC9CpZ,KAAKgO,MAAM5B,SAASmF,EAAiB,CAACkI,EAAMpY,KAAK7D,OACjDwC,KAAKgO,MAAM5B,SAASyF,GAAiB,CAAC4H,EAAMpY,KAAK7D,SAGjD,MAAMwc,KAAKC,UAAUC,YACnBT,EAAMA,MAAMW,QACdpa,KAAK4Z,iBAAiBH,IAEtBzZ,KAAK6Z,UAAY7Z,KAAK2Z,aAAaF,EAAMpY,KAAK+X,YAC9CpZ,KAAKgO,MAAM5B,SAASmF,EAAiB,CAACkI,EAAMpY,KAAK7D,OACjDwC,KAAKgO,MAAM5B,SAASyF,GAAiB,CAAC4H,EAAMpY,KAAK7D,WAMzD2N,EAAAjO,UAAAmK,MAAA,SAAMmK,GACJxR,KAAKgO,MAAM5B,SAAS4F,GAAWR,KAGjCrG,EAAAjO,UAAAmV,UAAA,SAAU/Q,GACRtB,KAAKgO,MAAM5B,SAASkF,KACpBtR,KAAKgO,MAAM5B,SAASqF,MACpBzR,KAAKgO,MAAM5B,SAASiG,GAAU/Q,KAGhC6J,EAAAjO,UAAAmd,YAAA,SAAY7I,GACVxR,KAAKgO,MAAM5B,SAASkF,KACpBtR,KAAKgO,MAAM5B,SAASqF,MACpBzR,KAAKgO,MAAM5B,kBPvIsBoF,GACnC,OAAO,SAAC9G,GACN,IAAI5B,EAAShJ,EAAeC,OAAOoC,6BAA6BqP,EAAK9G,EAAM1J,OAC3E,IAAe,IAAX8H,EACF,OAAAjM,OAAAiJ,OAAA,GAAY4E,GACP,QAAehJ,IAAXoH,EACT,OAAAjM,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAY4E,GAAK,CAAE1J,MAAO0J,EAAM1J,MAAMY,QAAO,SAACP,GAAS,OAACmQ,EAAII,SAASvQ,EAAKC,SAO1E,IALA,IAEIgZ,EACAC,EAHAC,EAAmB1R,EAAOxH,GAC1BiR,EAAW7H,EAAM1J,MAAMY,QAAO,SAACP,GAAS,OAACmQ,EAAII,SAASvQ,EAAKC,OAGzDsH,EAAU9I,EAAeC,OAAOgC,yBAAyB+G,EAAOxH,GAAIgR,EAAAA,UAAY5H,EAAM1J,qBAE1F,IAAIyZ,EAAgB7R,EAAQG,QACxBtH,OAAoB,EAClBiZ,EAAiB5a,EAAeC,OAAO4B,gBAAgB8Y,EAAOnZ,GAAIoJ,EAAM1J,OAS9E,GAPES,EADEgZ,EAAOnZ,KAAOkZ,EACLE,EAAe9Y,QAAO,SAAC+G,GAAoB,OAAC6I,EAAII,SAASjJ,EAAMrH,OAE/DoZ,EACR9Y,QAAO,SAAC+G,GAAoB,OAACA,EAAMrH,KAAOiZ,EAAeD,EAAa3R,KACtE/G,QAAO,SAAC+G,GAAoB,QAAEA,KAEnC4R,EAAeE,EAAOnZ,GAClBG,EAAS7D,OAAS,EAAG,CACvB,IAAMiL,EAAO/I,EAAeC,OAAOwF,oBACjC9D,EACGa,KAAI,SAACqG,GAAU,OAAA9L,OAAAiJ,OAAA,CACdvC,OAAQoF,EAAMpF,QACXzD,EAAeC,OAAOmI,6CAA6CuS,EAAkBA,EAAiBlX,OAAQoF,OAElHrG,KAAI,SAACsD,GAAS,OAAA9F,EAAeC,OAAOmD,oBAAoB0C,EAAKzC,GAAIyC,EAAKxC,GAAIwC,EAAKvC,MAAOuC,EAAKtC,OAAQsC,EAAKrC,YAE7GkX,EAAOpX,MAAQwF,EAAKxF,MACpBoX,EAAOnX,OAASuF,EAAKvF,OACrBmX,EAAO3V,KAAO+D,EAAK/D,KACnB2V,EAAO1V,IAAM8D,EAAK9D,SACW,IAApBtD,EAAS7D,QACZiL,EAAO/I,EAAeC,OAAOmI,6CAA6CuS,EAAQA,EAAOlX,OAAQ9B,EAAS,IAChHgZ,EAAM5d,OAAAiJ,OAAAjJ,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAQrE,EAAS,IAAOoH,GAAI,CAAErH,SAAUiZ,EAAOjZ,WACrD+Q,EAAWA,EAASjQ,KAAI,SAACjB,GAAS,OAACA,EAAKC,KAAOmZ,EAAOnZ,GAAEzE,OAAAiJ,OAAA,GAAQ2U,GAAWpZ,MAC9C,IAApBI,EAAS7D,SAClB2U,EAAWA,EAAS3Q,QAAO,SAACP,GAAS,OAAAA,EAAKC,KAAOmZ,EAAOnZ,MACxDmZ,EAAS,MAEXH,EAAaG,GAjCR7R,EAAQhL,YAmCf,OAAAf,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAY4E,GAAK,CAAE1J,MAAOuR,KOuFRoI,CAAYnJ,KAGlCrG,EAAAjO,UAAA0d,qBAAA,SAAqBpJ,EAAe9G,GAC9BA,EACF1K,KAAKgO,MAAM5B,kBPxJkBoF,GACjC,OAAO,SAAC9G,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAE1J,MAAO0J,EAAM1J,MAAMsB,KAAI,SAACjB,GAAS,OAACmQ,EAAII,SAASvQ,EAAKC,IAAGzE,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAQzE,GAAI,CAAEyI,QAAQ,IAASzI,QOuJ7FwZ,CAAUrJ,IAE9BxR,KAAKgO,MAAM5B,kBPtJoBoF,GACnC,OAAO,SAAC9G,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAE1J,MAAO0J,EAAM1J,MAAMsB,KAAI,SAACjB,GAAS,OAACmQ,EAAII,SAASvQ,EAAKC,IAAGzE,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAQzE,GAAI,CAAEyI,QAAQ,IAAUzI,QOqJ9FyZ,CAAYtJ,oCCpJlCX,EAAAA,eAAAA,EAAAA,MAAAA,GAAqDyH,EAAAA,OAAAA,GAAkBxH,EAAAA,6CAAlBjC,EAAAA,UAAAA,GAAA+J,EAAAA,kBAAAA,MAAAA,EAAAA,MAAAA,KAAAA,EAAAA,MAAAA,8BAGrDmC,EAAAA,mBAAAA,6BADFrM,EAAAA,wBAAAA,GACEC,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,eAAAA,GACFC,EAAAA,sDADiBC,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,mBAAAA,EAAAA,MAAAA,gCAGfsM,EAAAA,mBAAAA,6BADFrM,EAAAA,wBAAAA,GACEC,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,eAAAA,GACFC,EAAAA,sDADiBC,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,oBAAAA,EAAAA,MAAAA,8DAKjBoC,EAAAA,eAAAA,EAAAA,SAAAA,GAA+CsE,EAAAA,WAAAA,SAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,qBAC7C1H,EAAAA,UAAAA,EAAAA,IAAAA,GACFqD,EAAAA,eACAD,EAAAA,eAAAA,EAAAA,SAAAA,GAA+CsE,EAAAA,WAAAA,SAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,WAC7C1H,EAAAA,UAAAA,EAAAA,IAAAA,IACFqD,EAAAA,kDDIW3F,IAAkB0C,EAAAiB,kBAAAjB,EAAAwC,YAAAxC,EAAAiB,kBAAAhE,GAAA+C,EAAAiB,kBAAAhP,GAAA+N,EAAAiB,kBAAAkM,EAAAC,0DAAlB9P,GAAkB4D,UAAA,CAAA,CAAA,kBAAAmM,UAAA,SAAA9L,EAAAC,+BAIG8L,EAAAA,42BDlClCtK,EAAAA,eAAAA,EAAAA,UAAAA,EAAAA,GAQEsE,EAAAA,WAAAA,WAAAA,SAAAA,GAAAA,OAAW9F,EAAA0K,UAAA3E,8CAEXzG,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,KAAAA,EAAAA,EAAAA,wBAGAA,EAAAA,WAAAA,EAAAA,GAAAA,GAAAA,EAAAA,cAAAA,KAAAA,EAAAA,EAAAA,wBAqCFmC,EAAAA,+DA9CErC,EAAAA,WAAAA,SAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,YAAAA,CAA6B,iBAAAZ,EAAAgF,YAAA,EAAA,EAAAxD,EAAA2J,eAA7BvK,CAA6B,iBAAA2M,EAA7B3M,CAA6B,iBAAA4M,woBGkB7B,SAAAC,EAAmBvQ,EAA8BiD,GAA9BhO,KAAA+K,MAAAA,EAA8B/K,KAAAgO,MAAAA,SAPjDnR,OAAAqB,eACIod,EAAApe,UAAA,QAAK,KAGT,WACE,OAAO8C,KAAKub,YALd,SACU7L,GACR1P,KAAKub,OAAS7L,mCAOhB4L,EAAApe,UAAAse,eAAA,SAAe/B,GACbzZ,KAAKgO,MAAMZ,oBAAoBpN,KAAKmN,MAAM3P,IAAK,CAACwC,KAAKmN,MAAMvG,EAAI6S,EAAMgC,SAAS7U,EAAG5G,KAAKmN,MAAM9B,EAAIoO,EAAMgC,SAASpQ,KAGjHiQ,EAAApe,UAAAwe,gBAAA,WACE1b,KAAKgO,MAAMV,qBAAqBtN,KAAKmN,MAAM3P,MAG7C8d,EAAApe,UAAAye,MAAA,WACE3b,KAAKgO,MAAMX,mBAAmBrN,KAAKmN,MAAM3P,qCC4D3CiQ,EAAAA,UAAAA,EAAAA,MAAAA,4DACEC,EAAAA,YAAAA,YAAAA,IAAAA,KAEAe,EAAAA,WAAAA,MAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,0BAAAA,SAAAA,gBAAAA,MAAAA,OAAAA,EAAAA,kDDpFS6M,IAAczN,EAAAiB,kBAAAhP,GAAA+N,EAAAiB,kBAAAhE,uCAAdwQ,GAAcvM,UAAA,CAAA,CAAA,YAAA,CAAA,GAAA,UAAA,KAAAuB,OAAA,CAAAnD,MAAA,SAAA6B,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,SAAA,QAAA,UAAA,GAAA,EAAA,UAAA,UAAA,0BAAA,gBAAA,CAAA,YAAA,IAAA,CAAA,EAAA,QAAA,CAAA,YAAA,IAAA,CAAA,gBAAA,GAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,oBAAA,CAAA,EAAA,qBAAA,CAAA,YAAA,GAAA,SAAA,QAAA,SAAA,OAAA,EAAA,gBAAA,EAAA,SAAA,CAAA,UAAA,GAAA,SAAA,cAAA,CAAA,YAAA,GAAA,SAAA,QAAA,SAAA,OAAA,EAAA,SAAA,CAAA,UAAA,GAAA,SAAA,UAAAC,SAAA,SAAAC,EAAAC,YDZ3BwB,EAAAA,eAAAA,EAAAA,UAAAA,GAMEsE,EAAAA,WAAAA,gBAAAA,SAAAA,GAAAA,OAAgB9F,EAAAmM,eAAApG,MAGhBzG,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,KAAAA,EAAAA,EAAAA,wBAGAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,eAAAA,GAGAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,eAAAA,GAGFmC,EAAAA,eAEAnC,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,KAAAA,EAAAA,EAAAA,wEAbEgK,EAAAA,YAAAA,YAAAA,MAAAA,EAAAA,MAAAA,KAAAA,EAAAA,MAAAA,WALAlK,EAAAA,WAAAA,UAAAA,EAAAA,CAAqB,UAAAmN,EAArBnN,CAAqB,0BAAAY,EAAAlC,OAUN0B,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,MAAAA,eAAAA,EAAAA,MAAAA,UAGAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,QAAAA,EAAAA,MAAAA,eAAAA,EAAAA,MAAAA,w7BGFjB,IAAAoN,GAAA,WAKE,SAAAA,EAAmBC,EAAwB9N,GAA3C,IAAAzN,EAAAP,KAAmBA,KAAA8b,GAAAA,EAAwB9b,KAAAgO,MAAAA,EADnChO,KAAAwT,aAAe,IAAIC,EAAAA,aAEzBzT,KAAK+b,oBAAsB/b,KAAK8b,GAAGzU,MAAM,CACvChE,MAAO,CAAC,EAAG,CAAC2Y,EAAAA,WAAWC,SAAUD,EAAAA,WAAWrX,IAAI,KAChDrB,OAAQ,CAAC,EAAG,CAAC0Y,EAAAA,WAAWC,SAAUD,EAAAA,WAAWrX,IAAI,OAEnD3E,KAAKkc,wBAA0Blc,KAAK8b,GAAGzU,MAAM,CAC3CvC,KAAM,CAAC,EAAG,CAACkX,EAAAA,WAAWC,WACtBlX,IAAK,CAAC,EAAG,CAACiX,EAAAA,WAAWC,WACrB3R,MAAO,CAAC,EAAG,CAAC0R,EAAAA,WAAWrX,IAAI,KAAOqX,EAAAA,WAAWC,aAE/Cjc,KAAKmc,0BAA4Bnc,KAAK8b,GAAGzU,MAAM,CAC7C+C,gBAAiB,CAAC,WAClB4F,gBAAiB,CAAC,QAEpBhQ,KAAKwT,aAAasB,IAChB9U,KAAKgO,MACF1B,iBAAgB,SAAC5B,GAAU,OAAAA,EAAMH,cACjCmK,WAAU,SAAChK,GACVnK,EAAKwb,oBAAoBK,WAAW1R,EAAO,CAAE2R,WAAW,QAG9Drc,KAAKwT,aAAasB,IAChB9U,KAAKgO,MACF1B,iBAAgB,SAAC5B,GAAU,OAAAA,EAAML,kBACjCqK,WAAU,SAAChK,SACVnK,EAAK2b,wBAAwBE,WAC3B,CAAEtX,KAAMnF,KAAKC,MAAM8K,EAAM5F,MAAOC,IAAKpF,KAAKC,MAAM8K,EAAM3F,KAAMuF,MAAkB,QAAbrI,EAAEyI,EAAMJ,aAAK,IAAArI,OAAA,EAAAA,EAAEqa,QAAQ,IACxF,CAAED,WAAW,QAIrBrc,KAAKwT,aAAasB,IAChB9U,KAAKgO,MACF1B,iBAAgB,SAAC5B,GAAU,OAAAA,EAAMP,oBACjCuK,WAAU,SAAChK,GACVnK,EAAK4b,0BAA0BC,WAAW1R,EAAO,CAAE2R,WAAW,eAKtER,EAAA3e,UAAAiR,SAAA,WAAA,IAAA5N,EAAAP,KACEA,KAAK+b,oBAAoBQ,aAAa7H,WAAU,SAAC/V,OZzDX4L,EY0DpChK,EAAKyN,MAAM5B,UZ1DyB7B,EY0DC5L,EZzDlC,SAAC+L,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAEH,WAAU1N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAO4E,EAAMH,YAAeA,WY2DnEvK,KAAKkc,wBAAwBK,aAAa7H,WAAU,SAAC/V,GACnD4B,EAAKyN,MAAM5B,SAAS0F,GAAqBnT,OAE3CqB,KAAKmc,0BAA0BI,aAAa7H,WAAU,SAAC/V,OZvDXwL,EYwD1CqS,QAAQC,IAAI9d,GACZ4B,EAAKyN,MAAM5B,UZzD+BjC,EYyDCxL,EZxDxC,SAAC+L,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,GAAK,CAAEP,iBAAgBtN,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAO4E,EAAMP,kBAAqBA,YY4DjF0R,EAAA3e,UAAA0X,YAAA,WACE5U,KAAKwT,aAAaqB,iBA3DtB,qCAAagH,IAAoBhO,EAAAiB,kBAAA4N,EAAAC,aAAA9O,EAAAiB,kBAAAhE,uCAApB+Q,GAAoB9M,UAAA,CAAA,CAAA,mBAAA,CAAA,GAAA,gBAAA,KAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,UAAA,GAAA,WAAA,SAAA,EAAA,aAAA,CAAA,WAAA,KAAA,CAAA,SAAA,MAAA,CAAA,UAAA,GAAA,aAAA,eAAA,CAAA,SAAA,QAAA,kBAAA,SAAA,CAAA,UAAA,GAAA,aAAA,cAAA,CAAA,SAAA,QAAA,kBAAA,UAAA,CAAA,EAAA,QAAA,CAAA,UAAA,GAAA,aAAA,aAAA,CAAA,SAAA,QAAA,kBAAA,QAAA,CAAA,UAAA,GAAA,aAAA,YAAA,CAAA,SAAA,QAAA,kBAAA,OAAA,CAAA,UAAA,GAAA,aAAA,cAAA,CAAA,SAAA,QAAA,kBAAA,SAAA,CAAA,UAAA,GAAA,aAAA,cAAA,CAAA,OAAA,QAAA,WAAA,GAAA,SAAA,QAAA,kBAAA,mBAAA,CAAA,UAAA,GAAA,aAAA,cAAA,CAAA,OAAA,OAAA,WAAA,GAAA,SAAA,QAAA,kBAAA,mBAAA,CAAA,EAAA,QAAA,CAAA,EAAA,YAAA,MAAA,EAAA,QAAA,CAAA,EAAA,QAAAC,SAAA,SAAAC,EAAAC,SDbjCwB,EAAAA,eAAAA,EAAAA,OACEA,EAAAA,eAAAA,EAAAA,MAAIyH,EAAAA,OAAAA,EAAAA,QAAIxH,EAAAA,eACRD,EAAAA,eAAAA,EAAAA,OAAAA,GACEA,EAAAA,eAAAA,EAAAA,SAAAA,GACEA,EAAAA,eAAAA,EAAAA,SAAAA,GACEA,EAAAA,eAAAA,EAAAA,gBACEA,EAAAA,eAAAA,EAAAA,iBACEpD,EAAAA,UAAAA,EAAAA,IAAAA,GACFqD,EAAAA,eACAD,EAAAA,eAAAA,EAAAA,mBACEpD,EAAAA,UAAAA,GAAAA,kBAAAA,GACFqD,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,gBACEA,EAAAA,eAAAA,GAAAA,iBACEpD,EAAAA,UAAAA,GAAAA,IAAAA,GACFqD,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,mBACEpD,EAAAA,UAAAA,GAAAA,kBAAAA,GACFqD,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,MAAAA,GACEA,EAAAA,eAAAA,GAAAA,MAAIyH,EAAAA,OAAAA,GAAAA,QAAIxH,EAAAA,eACRD,EAAAA,eAAAA,GAAAA,OAAAA,GACEA,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,gBACEA,EAAAA,eAAAA,GAAAA,iBACEpD,EAAAA,UAAAA,GAAAA,IAAAA,GACFqD,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,mBACEpD,EAAAA,UAAAA,GAAAA,kBAAAA,GACFqD,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,gBACEA,EAAAA,eAAAA,GAAAA,iBACEpD,EAAAA,UAAAA,GAAAA,IAAAA,IACFqD,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,mBACEpD,EAAAA,UAAAA,GAAAA,kBAAAA,IACFqD,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,gBACEA,EAAAA,eAAAA,GAAAA,iBACEpD,EAAAA,UAAAA,GAAAA,IAAAA,IACFqD,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,mBACEpD,EAAAA,UAAAA,GAAAA,kBAAAA,IACFqD,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,MAAAA,GACEA,EAAAA,eAAAA,GAAAA,MAAIyH,EAAAA,OAAAA,GAAAA,QAAIxH,EAAAA,eACRD,EAAAA,eAAAA,GAAAA,OAAAA,GACEA,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,gBACEA,EAAAA,eAAAA,GAAAA,iBACEpD,EAAAA,UAAAA,GAAAA,IAAAA,IACFqD,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,mBACEpD,EAAAA,UAAAA,GAAAA,QAAAA,IACFqD,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,gBACEA,EAAAA,eAAAA,GAAAA,iBACEpD,EAAAA,UAAAA,GAAAA,IAAAA,IACFqD,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,mBACEpD,EAAAA,UAAAA,GAAAA,QAAAA,IACFqD,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,KAAAA,IAAiByH,EAAAA,OAAAA,GAAAA,QAAIxH,EAAAA,eACrBD,EAAAA,eAAAA,GAAAA,OACElC,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,MAAAA,IAKFmC,EAAAA,sBAhGkCjC,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,YAAAA,EAAAA,qBA2BAI,EAAAA,UAAAA,IAAAJ,EAAAA,WAAAA,YAAAA,EAAAA,yBAqCAI,EAAAA,UAAAA,IAAAJ,EAAAA,WAAAA,YAAAA,EAAAA,2BA6B7BI,EAAAA,UAAAA,IAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,0BAAAA,SAAAA,gBAAAA,6iBEViBC,EAAAA,wBAAAA,GACEmC,EAAAA,eAAAA,EAAAA,QAAMyH,EAAAA,OAAAA,EAAAA,QAAIxH,EAAAA,eACZlC,EAAAA,gDACAF,EAAAA,wBAAAA,GACEiE,EAAAA,iBAAA9B,EAAAA,eAAAA,EAAAA,MAAAA,IACEpD,EAAAA,UAAAA,EAAAA,OAAAA,IAGFqD,EAAAA,eACFlC,EAAAA,gDACAF,EAAAA,wBAAAA,GACEiE,EAAAA,iBAAA9B,EAAAA,eAAAA,EAAAA,MAAAA,IACEpD,EAAAA,UAAAA,EAAAA,OAAAA,IACFqD,EAAAA,eACFlC,EAAAA,gDACAF,EAAAA,wBAAAA,GACEiE,EAAAA,iBAAA9B,EAAAA,eAAAA,EAAAA,MAAAA,IACEpD,EAAAA,UAAAA,EAAAA,OAAAA,IAGFqD,EAAAA,eACFlC,EAAAA,mDAvBJiC,EAAAA,eAAAA,EAAAA,MAAAA,IACEnC,EAAAA,wBAAAA,EAAAA,IACEC,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,eAAAA,IAGAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,eAAAA,IAOAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,eAAAA,IAKAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,eAAAA,IAOFC,EAAAA,wBACFkC,EAAAA,uCAzB6CpD,EAAAA,YAAAA,QAAAA,GAAAA,MAC7BmB,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,WAAAA,EAAAA,SACGI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,eAAAA,QAGAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,eAAAA,UAOAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,eAAAA,SAKAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,eAAAA,iCAYjBsM,EAAAA,mBAAAA,yBAGAA,EAAAA,mBAAAA,yBAGAA,EAAAA,mBAAAA,yBAGAA,EAAAA,mBAAAA,0NC7GpB6B,GAAA,WAIE,SAAAA,EAAoBd,EAAyBe,EAAuC7O,GAAhEhO,KAAA8b,GAAAA,EAAyB9b,KAAA6c,IAAAA,EAAuC7c,KAAAgO,MAAAA,EAClFhO,KAAK8c,kBAAoB9c,KAAK8b,GAAGzU,MAAM,CACrC/F,GAAI,CAAA,CAAG,CAAC0a,EAAAA,WAAWC,WACnBpS,KAAM,GACNxG,MAAO,CAAA,CAAG,CAAC2Y,EAAAA,WAAWC,WACtB3Y,OAAQ,CAAA,CAAG,CAAC0Y,EAAAA,WAAWC,WACvBnX,KAAM,CAAA,CAAG,CAACkX,EAAAA,WAAWC,WACrBlX,IAAK,CAAA,CAAG,CAACiX,EAAAA,WAAWC,WACpBnS,OAAQ,GACRvG,OAAQ,CAAA,CAAG,CAACyY,EAAAA,WAAWC,WACvBpW,OAAQ,CAAA,CAAG,CAACmW,EAAAA,WAAWC,WACvBhS,YAAa,GACbF,YAAa,GACbC,YAAa,GACb+S,aAAc,GACd3S,gBAAiB,GACjB4F,gBAAiB,GACjBE,iBAAkB,GAClBD,mBAAoB,GACpBE,eAAgB,YAIpByM,EAAA1f,UAAAiR,SAAA,WAAA,IAAA5N,EAAAP,KACEA,KAAKgO,MACFxB,QAAO,SAAC9B,GAAU,OAAAA,EAAMtB,YACxBqD,KACC7K,EAAAA,QAAO,SAACwH,GAAa,OAAkB,IAAlBA,EAAS7G,QAC9BD,EAAAA,KAAI,SAAC8G,GAAa,OAAAhK,EAAIgK,GAAU,MAChCiL,EAAAA,WAAU,SAAC/S,GAAO,OAAAf,EAAKyN,MAAMxB,QAAO,SAAC9B,GAAU,OAAAA,EAAM1J,MAAMc,MAAK,SAAC8D,GAAS,OAAAA,EAAKtE,KAAOA,WACtFM,EAAAA,QAAO,SAACP,GAAS,QAAEA,MAEpBqT,WAAU,SAACrT,GACVd,EAAKuc,kBAAkBV,WAAUvf,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAE1BzE,GAAI,CACPgC,MAAO1D,KAAKC,MAAMyB,EAAKgC,OACvBC,OAAQ3D,KAAKC,MAAMyB,EAAKiC,QACxBwB,KAAMnF,KAAKC,MAAMyB,EAAKyD,MACtBC,IAAKpF,KAAKC,MAAMyB,EAAK0D,OAEvB,CAAEsX,WAAW,OAGnBrc,KAAK8c,kBAAkBP,aAAa7H,WAAU,SAACsI,GAC7Czc,EAAKyN,MAAM5B,SAAS2F,GAAY,CAACiL,WAjDvC,qCAAaJ,IAAmB/O,EAAAiB,kBAAA4N,EAAAC,aAAA9O,EAAAiB,kBAAAjB,EAAAoP,0BAAApP,EAAAiB,kBAAAhE,uCAAnB8R,GAAmB7N,UAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,eAAA,KAAAmM,UAAA,SAAA9L,EAAAC,m0DDZhCwB,EAAAA,eAAAA,EAAAA,cAAAA,GACEA,EAAAA,eAAAA,EAAAA,oBAAAA,GACEA,EAAAA,eAAAA,EAAAA,OACEA,EAAAA,eAAAA,EAAAA,MAAIyH,EAAAA,OAAAA,EAAAA,MAAExH,EAAAA,eACND,EAAAA,eAAAA,EAAAA,OAAAA,GACEA,EAAAA,eAAAA,EAAAA,SAAAA,GACEA,EAAAA,eAAAA,EAAAA,SAAAA,GACEA,EAAAA,eAAAA,EAAAA,gBACEA,EAAAA,eAAAA,EAAAA,iBACEpD,EAAAA,UAAAA,GAAAA,IAAAA,GACFqD,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,mBACEpD,EAAAA,UAAAA,GAAAA,kBAAAA,GACFqD,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,gBACEA,EAAAA,eAAAA,GAAAA,iBACEpD,EAAAA,UAAAA,GAAAA,IAAAA,GACFqD,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,mBACEpD,EAAAA,UAAAA,GAAAA,kBAAAA,GACFqD,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,MAAIyH,EAAAA,OAAAA,GAAAA,MAAExH,EAAAA,eACND,EAAAA,eAAAA,GAAAA,OAAAA,GACEA,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,gBACEA,EAAAA,eAAAA,GAAAA,iBACEpD,EAAAA,UAAAA,GAAAA,IAAAA,GACFqD,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,mBACEpD,EAAAA,UAAAA,GAAAA,kBAAAA,IACFqD,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,gBACEA,EAAAA,eAAAA,GAAAA,iBACEpD,EAAAA,UAAAA,GAAAA,IAAAA,IACFqD,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,mBACEpD,EAAAA,UAAAA,GAAAA,kBAAAA,IACFqD,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,gBACEA,EAAAA,eAAAA,GAAAA,iBACEpD,EAAAA,UAAAA,GAAAA,IAAAA,IACFqD,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,mBACEpD,EAAAA,UAAAA,GAAAA,kBAAAA,IACFqD,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,gBACEA,EAAAA,eAAAA,GAAAA,iBACEpD,EAAAA,UAAAA,GAAAA,IAAAA,IACFqD,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,mBACEpD,EAAAA,UAAAA,GAAAA,YAAAA,IACFqD,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,MAAIyH,EAAAA,OAAAA,GAAAA,MAAExH,EAAAA,eACND,EAAAA,eAAAA,GAAAA,OAAAA,GACEA,EAAAA,eAAAA,GAAAA,SAAAA,GACEA,EAAAA,eAAAA,GAAAA,SAAAA,IACEA,EAAAA,eAAAA,GAAAA,gBACEA,EAAAA,eAAAA,GAAAA,iBACEpD,EAAAA,UAAAA,GAAAA,IAAAA,IACFqD,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,mBACElC,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,cAAAA,KAAAA,GAAAA,EAAAA,wBA4BAkC,EAAAA,eAAAA,GAAAA,YAAAA,IACEA,EAAAA,eAAAA,GAAAA,YAAAA,IACElC,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,eAAAA,IACFmC,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,YAAAA,IACElC,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,eAAAA,IACFmC,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,YAAAA,IACElC,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,eAAAA,IACFmC,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,YAAAA,IACElC,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,eAAAA,IACFmC,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,oBAAAA,IACElC,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,cAAAA,KAAAA,GAAAA,EAAAA,wBACFmC,EAAAA,eACFA,EAAAA,6CAtIarC,EAAAA,WAAAA,cAAAA,GAIyBI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,YAAAA,EAAAA,mBAyBAI,EAAAA,UAAAA,IAAAJ,EAAAA,WAAAA,YAAAA,EAAAA,mBA6CAI,EAAAA,UAAAA,IAAAJ,EAAAA,WAAAA,YAAAA,EAAAA,mBAoCkCI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,mBAAAA,GAErCI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,mBAAAA,EAAAA,CAAkC,0BAAAZ,EAAAqP,gBAAA,GAAAC,GAAAtP,EAAAuP,gBAAA,GAAAC,MAGlCxO,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,mBAAAA,EAAAA,CAAkC,0BAAAZ,EAAAqP,gBAAA,GAAAC,GAAAtP,EAAAuP,gBAAA,GAAAE,MAGlCzO,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,mBAAAA,EAAAA,CAAkC,0BAAAZ,EAAAqP,gBAAA,GAAAC,GAAAtP,EAAAuP,gBAAA,GAAAG,MAGlC1O,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,mBAAAA,EAAAA,CAAkC,0BAAAZ,EAAAqP,gBAAA,GAAAC,GAAAtP,EAAAuP,gBAAA,GAAAI,m7CEzHrEzC,EAAAA,mBAAAA,qBCkBE,SAAAxP,EAAmByC,GAAAhO,KAAAgO,MAAAA,SAEnBzC,EAAArO,UAAAiR,SAAA,WACEnO,KAAKyd,eAAiBzd,KAAKgO,MACxBxB,QAAO,SAAC9B,GAAU,OAAAA,EAAMtB,SAAS7G,QACjCkK,KAAKnK,EAAAA,KAAI,SAACC,GAAS,OAAU,IAATA,EAAaqa,GAAsBf,mCCvB9DpO,EAAAA,UAAAA,EAAAA,wEACAoD,EAAAA,eAAAA,EAAAA,MAAAA,IAIEsE,EAAAA,WAAAA,aAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,YAAAA,KAAAA,CAAiC,YAAA,SAAAC,GAAA,OAAAvH,EAAAwH,cAAAqI,GAAA7P,EAAA0H,gBAAAoI,SAAAvI,EACJ,OAD7BD,CAAiC,YAAA,WAAA,OAAAtH,EAAAwH,cAAAqI,GAAA7P,EAAA0H,gBAAAqI,eAGlC9M,EAAAA,oEACDD,EAAAA,eAAAA,EAAAA,MAAAA,IAIEsE,EAAAA,WAAAA,aAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,YAAAA,KAAAA,CAAiC,YAAA,SAAAC,GAAA,OAAAvH,EAAAwH,cAAAwI,GAAAhQ,EAAA0H,gBAAAoI,SAAAvI,EACJ,OAD7BD,CAAiC,YAAA,WAAA,OAAAtH,EAAAwH,cAAAwI,GAAAhQ,EAAA0H,gBAAAqI,eAGlC9M,EAAAA,oEACDD,EAAAA,eAAAA,EAAAA,MAAAA,IAIEsE,EAAAA,WAAAA,aAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,YAAAA,KAAAA,CAAiC,YAAA,SAAAC,GAAA,OAAAvH,EAAAwH,cAAAyI,GAAAjQ,EAAA0H,gBAAAoI,SAAAvI,EACJ,OAD7BD,CAAiC,YAAA,WAAA,OAAAtH,EAAAwH,cAAAyI,GAAAjQ,EAAA0H,gBAAAqI,eAGlC9M,EAAAA,oEACDD,EAAAA,eAAAA,EAAAA,MAAAA,IAIEsE,EAAAA,WAAAA,aAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,YAAAA,KAAAA,CAAiC,YAAA,SAAAC,GAAA,OAAAvH,EAAAwH,cAAA0I,GAAAlQ,EAAA0H,gBAAAoI,SAAAvI,EACJ,OAD7BD,CAAiC,YAAA,WAAA,OAAAtH,EAAAwH,cAAA0I,GAAAlQ,EAAA0H,gBAAAqI,eAGlC9M,EAAAA,sCAKDrD,EAAAA,UAAAA,EAAAA,MAAAA,0BACAA,EAAAA,UAAAA,EAAAA,MAAAA,0BACAA,EAAAA,UAAAA,EAAAA,MAAAA,0BACAA,EAAAA,UAAAA,EAAAA,MAAAA,sCD1BalC,IAAqBsC,EAAAiB,kBAAAhE,uCAArBS,GAAqBwD,UAAA,CAAA,CAAA,oBAAA,CAAA,GAAA,iBAAA,KAAAmM,UAAA,SAAA9L,EAAAC,oLDdlCV,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,eAAAA,6BAAeF,EAAAA,WAAAA,oBAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,sMGwCb,SAAAuP,EAAoBhQ,EAAoCjD,EAA8ByE,GAAtF,IAAAjP,EAAAP,KAAoBA,KAAAgO,MAAAA,EAAoChO,KAAA+K,MAAAA,EAA8B/K,KAAAwP,OAAAA,EAxB/ExP,KAAAie,QAAU,OAsBTje,KAAAke,yBAA2B,IAAIhQ,IAGrClO,KAAKme,aAAene,KAAKgO,MAAM1B,iBAAgB,SAAC5B,GAAU,QAAEA,EAAMtB,SAAS7G,QAC3EvC,KAAKgO,MACF1B,iBAAgB,SAAC5B,GAAU,MAAA,CAAGtB,SAAUsB,EAAMtB,SAAUiB,eAAgBK,EAAML,eAAgBrJ,MAAO0J,EAAM1J,UAC3G0T,WAAU,SAACxS,OAAEkH,EAAQlH,EAAAkH,SAAEiB,EAAcnI,EAAAmI,eAAErJ,EAAKkB,EAAAlB,MAC3CT,EAAK0d,QAAU7U,EAAS7G,KAAO,QAAU,OACzChC,EAAK6I,SAAWA,EAChB7I,EAAK8J,eAAiBA,EACtB9J,EAAKS,MAAQA,EACTT,EAAK6I,SAAS7G,MAChBhC,EAAK6d,gCAzBbvhB,OAAAqB,eACW8f,EAAA9gB,UAAA,YAAS,KADpB,iBAEE,MAAO,WAAqB,QAAX+E,EAAAjC,KAAKuD,cAAM,IAAAtB,EAAAA,EAAI,GAAC,wCA4BnC+b,EAAA9gB,UAAAkhB,oBAAA,WACE,GAAKpe,KAAKoJ,UAAapJ,KAAKgB,MAA5B,CAIM,IAAAkB,EAAuClC,KAAK+K,MAAM5B,qBAAoB/J,EAAKY,KAAKoJ,UAAWpJ,KAAKgB,OAA9F8D,EAAI5C,EAAA4C,KAAEC,EAAG7C,EAAA6C,IAAE1B,EAAKnB,EAAAmB,MAAEC,EAAMpB,EAAAoB,OAAEC,EAAMrB,EAAAqB,OACxCvD,KAAK8E,KAAOA,EAAO9E,KAAKqK,eAAeC,MACvCtK,KAAK+E,IAAMA,EAAM/E,KAAKqK,eAAeC,MACrCtK,KAAKqD,MAAQA,EAAQrD,KAAKqK,eAAeC,MACzCtK,KAAKsD,OAASA,EAAStD,KAAKqK,eAAeC,MAC3CtK,KAAKuD,OAASA,IAGhBya,EAAA9gB,UAAAmhB,YAAA,SAAY5E,GAAZ,IAAAlZ,EAAAP,KACEyZ,EAAMzE,iBACNyE,EAAMxE,kBACE,IAAA3K,EAAUtK,KAAKqK,eAAcC,MAC/BgU,EAAaxK,SAASyK,cAAc,aAAaC,wBACvDxe,KAAKye,kBAAoB,CAAEpb,MAAOrD,KAAKqD,MAAQiH,EAAOhH,OAAQtD,KAAKsD,OAASgH,EAAOxF,KAAM9E,KAAK8E,KAAOwF,EAAOvF,IAAK/E,KAAK+E,IAAMuF,GAC5HtK,KAAK0e,8BAAgC1e,KAAK+K,MAAM7H,qBAC7ClD,KAAK8E,KAAO9E,KAAKqD,MAAQ,GAAKiH,GAC9BtK,KAAK+E,IAAM/E,KAAKsD,OAAS,GAAKgH,EAC/BtK,KAAKqD,MAAQiH,EACbtK,KAAKsD,OAASgH,GAEhBtK,KAAK2e,oBAAsB,CACzBC,SAAU,CAACnF,EAAMzC,QAASyC,EAAMxC,SAChC4H,SAAU,EAAEpF,EAAMzC,QAAUsH,EAAWxZ,MAAQwF,GAAQmP,EAAMxC,QAAUqH,EAAWvZ,KAAOuF,IAE3FtK,KAAKoJ,SAAS1I,SAAQ,SAACY,GACrB,IAAMD,EAAOd,EAAKwK,MAAMlJ,YAAYP,EAAIf,EAAKS,OACvC8d,EAAuBve,EAAKwK,MAAM7H,oBACtC7B,EAAKyD,KAAOzD,EAAKgC,MAAQ,EACzBhC,EAAK0D,IAAM1D,EAAKiC,OAAS,EACzBjC,EAAKgC,MACLhC,EAAKiC,OACLjC,EAAKkC,QAEP,GAAIhD,EAAK6I,SAAS7G,KAAO,EAAG,CAC1BhC,EAAKwe,WAAa,QAClB,IAAMC,EAAkBze,EAAKwK,MAAM3D,8BAA6BvK,OAAAiJ,OAAA,GAAMvF,EAAKke,mBAAqBK,GAChGve,EAAK2d,yBAAyBhM,IAAI5Q,EAAI0d,QAEtCze,EAAKwe,WAAa,SAClBxe,EAAK2d,yBAAyBhM,IAAI5Q,EAAIwd,OAK5Cd,EAAA9gB,UAAAygB,SAAA,SAASlE,EAAqBhX,GAC5B,GAAIzC,KAAK2e,qBAAuB3e,KAAKye,mBAAqBze,KAAK+e,WAAY,CACnE,IAAA7c,EAAApD,EAAW,CAAC2a,EAAMzC,QAAUhX,KAAK2e,oBAAoBC,SAAS,GAAInF,EAAMxC,QAAUjX,KAAK2e,oBAAoBC,SAAS,IAAG,GAAtHrH,EAAErV,EAAA,GAAEsV,EAAEtV,EAAA,GACb,OAAQlC,KAAK+e,YACX,IAAK,QACH/e,KAAKif,iBAAiBxc,EAAW8U,EAAIC,GACrC,MACF,IAAK,SACHxX,KAAKkf,aAAazc,EAAW8U,EAAIC,MAMzCwG,EAAA9gB,UAAA0gB,UAAA,WACE5d,KAAKye,kBAAoB,KACzBze,KAAK2e,oBAAsB,KAC3B3e,KAAKke,yBAAyBnH,SAGhCiH,EAAA9gB,UAAA+hB,iBAAA,SAAiBxc,EAA2B8U,EAAYC,GAAxD,IAAAjX,EAAAP,KACUsK,EAAUtK,KAAKqK,eAAcC,MAC7BuU,EAAa7e,KAAK2e,oBAAmBE,SAGvCM,EAiDV,SAA8B1c,EAA2B2c,EAA8B1c,GACrF,OAAQD,GACN,IAAK,KACL,IAAK,KACH,OAAI2c,EAAW,IAAMtf,EAAeC,OAAOyC,eAAe,IAAK4c,EAAW,GAAI1c,GACrE,CAAC0c,EAAW,GAAItf,EAAeC,OAAOyC,eAAe,IAAK4c,EAAW,GAAI1c,IAEzE,CAAC5C,EAAeC,OAAOyC,eAAe,IAAK4c,EAAW,GAAI1c,GAAO0c,EAAW,IAEvF,IAAK,KACL,IAAK,KACH,OAAIA,EAAW,IAAMtf,EAAeC,OAAOyC,eAAe,IAAK4c,EAAW,GAAI1c,GACrE,CAAC5C,EAAeC,OAAOyC,eAAe,IAAK4c,EAAW,GAAI1c,GAAO0c,EAAW,IAE5E,CAACA,EAAW,GAAItf,EAAeC,OAAOyC,eAAe,IAAK4c,EAAW,GAAI1c,KA/DnE2c,CAAqB5c,EAFD,CAACoc,EAAS,GAAKtH,EAAKjN,EAAOuU,EAAS,GAAKrH,EAAKlN,GAiCvF,SAAqC7H,EAA2B6c,GAC9D,IAAMC,EAAgCzf,EAAeC,OAAOwE,gDAAgD+a,GAC5G,OAAQ7c,GACN,IAAK,KACL,IAAK,KACH,MAAO,CAAC6c,EAAiBrb,GAAIqb,EAAiBhb,IAChD,IAAK,KACL,IAAK,KACH,MAAO,CAACgb,EAAiBlb,GAAIkb,EAAiBjb,IAChD,IAAK,IACL,IAAK,IACH,MAAO,CAACkb,EAA8B9a,EAAG8a,EAA8B3iB,GACzE,IAAK,IACL,IAAK,IACH,MAAO,CAAC2iB,EAA8B3a,EAAG2a,EAA8B1hB,IA9C5D2hB,CAA4B/c,EAAWzC,KAAK0e,gCAEnDe,EAmEV,SAAsChd,EAA2Bid,EAAkCC,GACjG,OAAQld,GACN,IAAK,KACH,MAAO,CAAEqC,KAAM6a,EAAM,GAAI5a,IAAK4a,EAAM,GAAItc,MAAOqc,EAActb,GAAG,GAAKub,EAAM,GAAIrc,OAAQoc,EAAcrb,GAAG,GAAKsb,EAAM,IACrH,IAAK,KACH,MAAO,CAAE7a,KAAM4a,EAAczb,GAAG,GAAIc,IAAK4a,EAAM,GAAItc,MAAOsc,EAAM,GAAKD,EAAczb,GAAG,GAAIX,OAAQoc,EAAcpb,GAAG,GAAKqb,EAAM,IAChI,IAAK,KACH,MAAO,CAAE7a,KAAM4a,EAAczb,GAAG,GAAIc,IAAK2a,EAAczb,GAAG,GAAIZ,MAAOsc,EAAM,GAAKD,EAAcrb,GAAG,GAAIf,OAAQqc,EAAM,GAAKD,EAActb,GAAG,IAC3I,IAAK,KACH,MAAO,CAAEU,KAAM6a,EAAM,GAAI5a,IAAK2a,EAAczb,GAAG,GAAIZ,MAAOqc,EAAcpb,GAAG,GAAKqb,EAAM,GAAIrc,OAAQqc,EAAM,GAAKD,EAAczb,GAAG,KA5EjG2b,CAA6Bnd,EAAWzC,KAAK0e,8BAA+BS,GACrGU,EAAe,IAAI3R,IACzBlO,KAAKke,yBAAyBxd,SAAQ,SAACwB,EAAoBZ,OAAlB2C,EAAE/B,EAAA+B,GAAEI,EAAEnC,EAAAmC,GAAEC,EAAEpC,EAAAoC,GAAEF,EAAElC,EAAAkC,GACrDyb,EAAa3N,IACX5Q,EACAf,EAAKwK,MAAMlE,oBAAoB,CAC7BxC,GAAI,CAACA,EAAG,GAAKob,EAAapc,MAAQoc,EAAa3a,KAAMT,EAAG,GAAKob,EAAanc,OAASmc,EAAa1a,KAChGT,GAAI,CAACA,EAAG,GAAKmb,EAAapc,MAAQoc,EAAa3a,KAAMR,EAAG,GAAKmb,EAAanc,OAASmc,EAAa1a,KAChGd,GAAI,CAACA,EAAG,GAAKwb,EAAapc,MAAQoc,EAAa3a,KAAMb,EAAG,GAAKwb,EAAanc,OAASmc,EAAa1a,KAChGX,GAAI,CAACA,EAAG,GAAKqb,EAAapc,MAAQoc,EAAa3a,KAAMV,EAAG,GAAKqb,EAAanc,OAASmc,EAAa1a,WAItG/E,KAAKgO,MAAM5B,UjBrEN,SAAC1B,GAAU,OAAAA,MiBwElBsT,EAAA9gB,UAAAgiB,aAAA,SAAazc,EAA2B8U,EAAYC,GAApD,IAAAjX,EAAAP,KACUsK,EAAUtK,KAAKqK,eAAcC,MAC7BuU,EAAa7e,KAAK2e,oBAAmBE,SACvCO,EAA+B,CAACP,EAAS,GAAKtH,EAAKjN,EAAOuU,EAAS,GAAKrH,EAAKlN,GACnFtK,KAAKke,yBAAyBxd,SAAQ,SAAC8D,EAAUlD,GAC/Cf,EAAKyN,MAAM5B,UAEP,IAAI8B,IAAsB,CAAC,CAAC5M,EAAIwe,GAAiCrd,EAAW+B,EAAU4a,MjB/EvF,SAAC1U,GAAU,OAAAA,ciBwIpB,SAASoV,GAAiCrd,EAA2B+B,EAA6B4a,GACxF,IACJW,EACAC,EACAC,EACAC,EAJI7b,EAAmBG,EAAQH,GAAvBC,EAAeE,EAAQF,GAAnBL,EAAWO,EAAQP,GAAfG,EAAOI,EAAQJ,GAKnC,OAAQ3B,GACN,IAAK,KAGH,OAFAud,EAAalgB,EAAeC,OAAOgG,0BAA0BzB,EAAIF,EAAIgb,GACrEa,EAAangB,EAAeC,OAAOgG,0BAA0BzB,EAAID,EAAI+a,GAC9Dtf,EAAeC,OAAO8G,oBAAoB,CAAE5C,GAAImb,EAAYhb,GAAI4b,EAAY3b,GAAI4b,EAAY3b,GAAEA,IACvG,IAAK,KAGH,OAFAyb,EAAajgB,EAAeC,OAAOgG,0BAA0B1B,EAAIJ,EAAImb,GACrEc,EAAapgB,EAAeC,OAAOgG,0BAA0B1B,EAAIC,EAAI8a,GAC9Dtf,EAAeC,OAAO8G,oBAAoB,CAAE5C,GAAI8b,EAAY3b,GAAIgb,EAAY/a,GAAEA,EAAEC,GAAI4b,IAC7F,IAAK,KAGH,OAFAH,EAAajgB,EAAeC,OAAOgG,0BAA0B3B,EAAIH,EAAImb,GACrEc,EAAapgB,EAAeC,OAAOgG,0BAA0B3B,EAAIE,EAAI8a,GAC9Dtf,EAAeC,OAAO8G,oBAAoB,CAAE5C,GAAI8b,EAAY3b,GAAEA,EAAEC,GAAI+a,EAAY9a,GAAI4b,IAC7F,IAAK,KAGH,OAFAF,EAAalgB,EAAeC,OAAOgG,0BAA0B9B,EAAIG,EAAIgb,GACrEa,EAAangB,EAAeC,OAAOgG,0BAA0B9B,EAAII,EAAI+a,GAC9Dtf,EAAeC,OAAO8G,oBAAoB,CAAE5C,GAAEA,EAAEG,GAAI4b,EAAY3b,GAAI4b,EAAY3b,GAAI8a,IAC7F,IAAK,IAGH,OAFAW,EAAajgB,EAAeC,OAAOgG,0BAA0B1B,EAAIJ,EAAImb,GACrEY,EAAalgB,EAAeC,OAAOgG,0BAA0BzB,EAAIF,EAAIgb,GAC9Dtf,EAAeC,OAAO8G,oBAAoB,CAAE5C,GAAI8b,EAAY3b,GAAI4b,EAAY3b,GAAEA,EAAEC,GAAEA,IAC3F,IAAK,IAGH,OAFA0b,EAAalgB,EAAeC,OAAOgG,0BAA0B9B,EAAIG,EAAIgb,GACrEc,EAAapgB,EAAeC,OAAOgG,0BAA0B1B,EAAIC,EAAI8a,GAC9Dtf,EAAeC,OAAO8G,oBAAoB,CAAE5C,GAAEA,EAAEG,GAAI4b,EAAY3b,GAAEA,EAAEC,GAAI4b,IACjF,IAAK,IAGH,OAFAD,EAAangB,EAAeC,OAAOgG,0BAA0B9B,EAAII,EAAI+a,GACrEc,EAAapgB,EAAeC,OAAOgG,0BAA0B3B,EAAIE,EAAI8a,GAC9Dtf,EAAeC,OAAO8G,oBAAoB,CAAE5C,GAAEA,EAAEG,GAAEA,EAAEC,GAAI4b,EAAY3b,GAAI4b,IACjF,IAAK,IAGH,OAFAH,EAAajgB,EAAeC,OAAOgG,0BAA0B3B,EAAIH,EAAImb,GACrEa,EAAangB,EAAeC,OAAOgG,0BAA0BzB,EAAID,EAAI+a,GAC9Dtf,EAAeC,OAAO8G,oBAAoB,CAAE5C,GAAI8b,EAAY3b,GAAEA,EAAEC,GAAI4b,EAAY3b,GAAEA,uCA1OlF0Z,IAAqBnQ,EAAAiB,kBAAAhE,GAAA+C,EAAAiB,kBAAAhP,GAAA+N,EAAAiB,kBAAAjB,EAAAwC,gDAArB2N,GAAqBjP,UAAA,CAAA,CAAA,oBAAA,CAAA,GAAA,iBAAA,KAAAoR,SAAA,GAAAC,aAAA,SAAAhR,EAAAC,u9CDdlCV,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,mBAAAA,uBACAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,MAAAA,uBAQAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,MAAAA,uBAQAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,MAAAA,uBAQAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,MAAAA,uBAQAkC,EAAAA,eAAAA,GAAAA,MAAAA,GAA6CsE,EAAAA,WAAAA,aAAAA,SAAAA,GAAAA,OAAa9F,EAAAgP,YAAAjJ,KAAbD,CAAiC,YAAA,SAAAC,GAAA,OAAa/F,EAAAsO,SAAAvI,EAAiB,QAA/DD,CAAiC,YAAA,WAAA,OAAiD9F,EAAAuO,eAAa9M,EAAAA,eAC5ID,EAAAA,eAAAA,GAAAA,MAAAA,GAA6CsE,EAAAA,WAAAA,aAAAA,SAAAA,GAAAA,OAAa9F,EAAAgP,YAAAjJ,KAAbD,CAAiC,YAAA,SAAAC,GAAA,OAAa/F,EAAAsO,SAAAvI,EAAiB,QAA/DD,CAAiC,YAAA,WAAA,OAAiD9F,EAAAuO,eAAa9M,EAAAA,eAC5ID,EAAAA,eAAAA,GAAAA,MAAAA,GAA6CsE,EAAAA,WAAAA,aAAAA,SAAAA,GAAAA,OAAa9F,EAAAgP,YAAAjJ,KAAbD,CAAiC,YAAA,SAAAC,GAAA,OAAa/F,EAAAsO,SAAAvI,EAAiB,QAA/DD,CAAiC,YAAA,WAAA,OAAiD9F,EAAAuO,eAAa9M,EAAAA,eAC5ID,EAAAA,eAAAA,GAAAA,MAAAA,GAA6CsE,EAAAA,WAAAA,aAAAA,SAAAA,GAAAA,OAAa9F,EAAAgP,YAAAjJ,KAAbD,CAAiC,YAAA,SAAAC,GAAA,OAAa/F,EAAAsO,SAAAvI,EAAiB,QAA/DD,CAAiC,YAAA,WAAA,OAAiD9F,EAAAuO,eAAa9M,EAAAA,eAC5InC,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,MAAAA,wBACAA,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,MAAAA,yBACAA,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,MAAAA,yBACAA,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,MAAAA,yBACAlB,EAAAA,UAAAA,GAAAA,MAAAA,IACAA,EAAAA,UAAAA,GAAAA,MAAAA,IACAA,EAAAA,UAAAA,GAAAA,MAAAA,IACAA,EAAAA,UAAAA,GAAAA,MAAAA,WA5CmBgB,EAAAA,WAAAA,OAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,eAEhBI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,YAAAA,EAAAA,GAAAA,EAAAA,eAQAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,YAAAA,EAAAA,GAAAA,EAAAA,eAQAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,YAAAA,EAAAA,GAAAA,EAAAA,eAQAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,YAAAA,EAAAA,GAAAA,EAAAA,eAWGI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,eACAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,eACAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,eACAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,y9EErBJ,SAAA4R,EAA4CvX,EAAuCkF,EAAoCjD,GAA3E/K,KAAA8I,OAAAA,EAAuC9I,KAAAgO,MAAAA,EAAoChO,KAAA+K,MAAAA,EAFhH/K,KAAAsgB,eAA0D,YAIjED,EAAAnjB,UAAAiR,SAAA,WAAA,IAAA5N,EAAAP,KACEA,KAAKgO,MAAMxB,QAAO,SAAC9B,GAAU,OAAAA,EAAMtB,YAAUsL,WAAU,SAACtL,GAAa,OAAC7I,EAAK6I,SAAWA,KACtFpJ,KAAKgO,MAAMxB,QAAO,SAAC9B,GAAU,OAAAA,EAAM1J,SAAO0T,WAAU,SAAC1T,GAAU,OAACT,EAAKS,MAAQA,MAG/Eqf,EAAAnjB,UAAAqjB,YAAA,SAAY9G,GACVA,EAAMxE,kBACNwE,EAAMzE,iBACN,IAAMnM,EAAO7I,KAAK8I,OAAO0G,OAAOK,cAAc2O,wBAAwB1R,SACtE9M,KAAKsgB,eAAiB,CACpBzX,EAAK/D,KAAO+D,EAAKxF,MAAQ,EACzBwF,EAAK9D,IAAM8D,EAAKvF,OAAS,EACzBuF,EAAK/D,KAAO+D,EAAKxF,MAAQ,EACzBwF,EAAK9D,IAAM8D,EAAKvF,OAAS,EAAI,IAC7BtD,KAAK+K,MAAMlJ,YAAYzC,EAAIY,KAAKoJ,UAAU,GAAIpJ,KAAKgB,SAIvDqf,EAAAnjB,UAAAsjB,SAAA,SAAS/G,GACP,GAAIzZ,KAAKsgB,eAAgB,CACjB,IAAAre,EAAAnD,EAAyBkB,KAAKsgB,eAAc,GAA3Cnd,EAAElB,EAAA,GAAEmB,EAAEnB,EAAA,GAAEsF,EAAEtF,EAAA,GAAEuF,EAAEvF,EAAA,GAAEZ,EAAIY,EAAA,GACrBwF,EAAKgS,EAAMzC,QACXtP,EAAK+R,EAAMxC,QACX1T,EAAS5D,KAAKC,MAAMI,KAAK+K,MAAMzD,UAAUnE,EAAIC,EAAImE,EAAIC,EAAIC,EAAIC,IACnE1H,KAAKgO,MAAM5B,SAAS2F,GAAY,CAAAlV,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAMzE,GAAI,CAAEkC,OAAmB,MAAXA,EAAiB,EAAIA,SAI7E8c,EAAAnjB,UAAAujB,WAAA,WACEzgB,KAAKsgB,eAAiB,6CApCbD,IAAqBxS,EAAAiB,kBAAAkP,GAAA,IAAAnQ,EAAAiB,kBAAAhE,GAAA+C,EAAAiB,kBAAAhP,uCAArBugB,GAAqBtR,UAAA,CAAA,CAAA,qBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,cAAA,GAAA,EAAA,SAAA,EAAA,YAAA,WAAA,YAAA,CAAA,QAAA,KAAA,SAAA,KAAA,QAAA,8BAAA,CAAA,IAAA,0JAAA,YAAA,YAAAC,SAAA,SAAAC,EAAAC,SCdlCwB,EAAAA,eAAAA,EAAAA,MAAAA,GAGEsE,EAAAA,WAAAA,aAAAA,SAAAA,GAAAA,OAAa9F,EAAAkR,YAAAnL,KAAbD,CAAiC,YAAA,SAAAC,GAAA,OACrB/F,EAAAmR,SAAApL,KADZD,CAAiC,YAAA,WAAA,OAErB9F,EAAAoR,gBAGZ9N,EAAAA,iBAAA9B,EAAAA,eAAAA,EAAAA,MAAAA,GACEpD,EAAAA,UAAAA,EAAAA,OAAAA,GAIFqD,EAAAA,eACFA,EAAAA,qBAREpD,EAAAA,YAAAA,SAAAA,EAAAA,gBAAAA,0RCOA,SAAoBM,GAApB,IAAAzN,EAAAP,KAAoBA,KAAAgO,MAAAA,EAClBhO,KAAKgO,MACFxB,QAAO,SAAC9B,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,EAAMH,YAAU,CAAED,MAAOI,EAAML,eAAeC,WACtEoK,WAAU,SAAChK,GACVnK,EAAK8C,MAAQqH,EAAMrH,MAAQqH,EAAMJ,MACjC/J,EAAK+C,OAASoH,EAAMpH,OAASoH,EAAMJ,4CAV9BoW,IAAmB7S,EAAAiB,kBAAAhE,uCAAnB4V,GAAmB3R,UAAA,CAAA,CAAA,GAAA,eAAA,KAAAoR,SAAA,EAAAC,aAAA,SAAAhR,EAAAC,mHCwB9B,SAAAsR,EAAoBnR,GAAAxP,KAAAwP,OAAAA,EAfZxP,KAAAwT,aAAe,IAAIC,EAAAA,aACnBzT,KAAA4gB,MAAQjN,EAAAA,UAAwBnI,OAAQ,eACxCxL,KAAA6gB,IAAMlN,EAAAA,UAAwBnI,OAAQ,aACtCxL,KAAA8gB,mBAA+B,KAKhC9gB,KAAA+gB,oBAAqB,EAErB/gB,KAAAghB,kBAAoB,IAAI7N,EAAAA,aAExBnT,KAAAihB,mBAAqB,IAAI9N,EAAAA,aAEzBnT,KAAAkhB,iBAAmB,IAAI/N,EAAAA,oBAG9BwN,EAAAzjB,UAAAiR,SAAA,WAAA,IAAA5N,EAAAP,KACEA,KAAKwT,aAAasB,IAChBnB,EAAAA,UAAwB3T,KAAKwP,OAAOK,cAAe,eAChDpD,KACC7K,EAAAA,QAAO,SAAC5C,GAAM,OAAa,IAAbA,EAAEiV,UAChBrS,EAAAA,QAAO,WAAM,OAACrB,EAAKwgB,sBACnB1M,EAAAA,WAAU,SAACyC,GAIT,OAHAvW,EAAK4gB,QAAU5gB,EAAKiP,OAAOK,cAAc2O,wBACzCje,EAAKugB,mBAAqB,CAAChK,EAAGE,QAASF,EAAGG,SAC1C1W,EAAKygB,kBAAkBzM,OAChBhU,EAAKqgB,MAAMnU,KAChByI,EAAAA,UAAS,WACP3U,EAAKugB,mBAAqB,KAC1BvgB,EAAK2gB,iBAAiB3M,UAExBC,EAAAA,UAAUjU,EAAKsgB,UAIpBnM,WAAU,SAAC1V,GACV,GAAIuB,EAAKugB,mBAAoB,CAC3B,IAAIla,OAAS,EACTyE,OAAS,EACPpJ,EAAAnD,EAAW,CAACE,EAAEgY,QAAUzW,EAAKugB,mBAAmB,GAAI9hB,EAAEiY,QAAU1W,EAAKugB,mBAAmB,IAAG,GAA1FvJ,EAAEtV,EAAA,GAAEuV,EAAEvV,EAAA,GAEX2E,EADE2Q,GAAM,EACJhX,EAAKugB,mBAAmB,GAAKvgB,EAAK4gB,QAAQrc,KAE1C9F,EAAEgY,QAAUzW,EAAK4gB,QAAQrc,KAG7BuG,EADEmM,GAAM,EACJjX,EAAKugB,mBAAmB,GAAKvgB,EAAK4gB,QAAQpc,IAE1C/F,EAAEiY,QAAU1W,EAAK4gB,QAAQpc,IAE/BxE,EAAK0gB,mBAAmB1M,KAAK,CAAE3N,EAACA,EAAEyE,EAACA,EAAEhI,MAAO1D,KAAKkY,IAAIN,GAAKjU,OAAQ3D,KAAKkY,IAAIL,WAMrFmJ,EAAAzjB,UAAA0X,YAAA,WACE5U,KAAKwT,aAAaqB,sDA3DT8L,IAAiB9S,EAAAiB,kBAAAjB,EAAAwC,gDAAjBsQ,GAAiB5R,UAAA,CAAA,CAAA,GAAA,aAAA,KAAAuB,OAAA,CAAAyQ,mBAAA,sBAAAjL,QAAA,CAAAkL,kBAAA,oBAAAC,mBAAA,qBAAAC,iBAAA,oBAAAnL,SAAA,CAAA,gBAS5B1Y,EAAA,CADC2Y,EAAAA,iECPD,SAAoBhI,GAApB,IAAAzN,EAAAP,KAAoBA,KAAAgO,MAAAA,EAPpBhO,KAAAohB,gBAAkB,MAQhBphB,KAAKgO,MACFxB,QAAO,SAAC9B,GAAU,OAAA7N,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAM4E,EAAMH,YAAU,CAAED,MAAOI,EAAML,eAAeC,WACtEoK,WAAU,SAAChK,GACVnK,EAAK+J,MAAQ,0BAA0BI,EAAMJ,MAAK,IAClD/J,EAAK8C,MAAQqH,EAAMrH,MACnB9C,EAAK+C,OAASoH,EAAMpH,6CAff+d,IAAiBxT,EAAAiB,kBAAAhE,uCAAjBuW,GAAiBtS,UAAA,CAAA,CAAA,GAAA,aAAA,KAAAoR,SAAA,EAAAC,aAAA,SAAAhR,EAAAC,iKCD5B,oCCPFX,EAAAA,wBAAAA,GACE4S,EAAAA,aAAAA,GACF1S,EAAAA,6EAGEiC,EAAAA,eAAAA,EAAAA,UAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,OAAAA,GAAmByH,EAAAA,OAAAA,EAAAA,gBAAYxH,EAAAA,eAC/BD,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,SAAAA,uBAAiEpD,EAAAA,UAAAA,EAAAA,IAAAA,GAAsCqD,EAAAA,eACvGD,EAAAA,eAAAA,EAAAA,SAAAA,GAAgCpD,EAAAA,UAAAA,EAAAA,IAAAA,GAAuCqD,EAAAA,eACzEA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,MAAAA,GACEA,EAAAA,eAAAA,GAAAA,SAAAA,IAA0CsE,EAAAA,WAAAA,SAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,qCAA+C1H,EAAAA,UAAAA,GAAAA,IAAAA,IAAuCqD,EAAAA,eAChID,EAAAA,eAAAA,GAAAA,SAAAA,IAA6CsE,EAAAA,WAAAA,SAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,oCAA8C1H,EAAAA,UAAAA,GAAAA,IAAAA,IAAuCqD,EAAAA,eACpIA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,MAAAA,GACEA,EAAAA,eAAAA,GAAAA,SAAAA,wBAAkEpD,EAAAA,UAAAA,GAAAA,IAAAA,IAAoDqD,EAAAA,eACtHD,EAAAA,eAAAA,GAAAA,SAAAA,wBAAkEpD,EAAAA,UAAAA,GAAAA,IAAAA,IAAkDqD,EAAAA,eACpHD,EAAAA,eAAAA,GAAAA,SAAAA,wBAAkEpD,EAAAA,UAAAA,GAAAA,IAAAA,IAAkDqD,EAAAA,eACpHD,EAAAA,eAAAA,GAAAA,SAAAA,wBAAkEpD,EAAAA,UAAAA,GAAAA,IAAAA,IAAgDqD,EAAAA,eAClHD,EAAAA,eAAAA,GAAAA,SAAAA,wBAAkEpD,EAAAA,UAAAA,GAAAA,IAAAA,IAA4CqD,EAAAA,eAC9GD,EAAAA,eAAAA,GAAAA,SAAAA,wBAAkEpD,EAAAA,UAAAA,GAAAA,IAAAA,IAA6CqD,EAAAA,eAC/GD,EAAAA,eAAAA,GAAAA,SAAAA,wBAAkEpD,EAAAA,UAAAA,GAAAA,IAAAA,IAA2CqD,EAAAA,eAC7GD,EAAAA,eAAAA,GAAAA,SAAAA,wBAAkEpD,EAAAA,UAAAA,GAAAA,IAAAA,IAA8CqD,EAAAA,eAClHA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,MAAAA,GACEA,EAAAA,eAAAA,GAAAA,SAAAA,IAAwEsE,EAAAA,WAAAA,mBAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAmBnH,MAAAX,mBAAyB,aAClHI,EAAAA,UAAAA,GAAAA,IAAAA,IACAoD,EAAAA,eAAAA,GAAAA,QAAMyH,EAAAA,OAAAA,GAAAA,MAAExH,EAAAA,eACVA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,SAAAA,IAA6EsE,EAAAA,WAAAA,mBAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAmBnH,MAAAX,mBAAyB,kBACvHI,EAAAA,UAAAA,GAAAA,IAAAA,IACAoD,EAAAA,eAAAA,GAAAA,QAAMyH,EAAAA,OAAAA,GAAAA,MAAExH,EAAAA,eACVA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,SAAAA,IAA4EsE,EAAAA,WAAAA,mBAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAmBnH,MAAAX,mBAAyB,iBACtHI,EAAAA,UAAAA,GAAAA,IAAAA,IACAoD,EAAAA,eAAAA,GAAAA,QAAMyH,EAAAA,OAAAA,GAAAA,MAAExH,EAAAA,eACVA,EAAAA,eACFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,MAAAA,GACEA,EAAAA,eAAAA,GAAAA,SAAAA,GAAgCpD,EAAAA,UAAAA,GAAAA,IAAAA,IAAqCqD,EAAAA,eACvEA,EAAAA,eACFA,EAAAA,eACFA,EAAAA,qDAnCcjC,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,WAAAA,EAAAA,YAAAA,EAAAA,GAAAA,EAAAA,cAIAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,WAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,eACAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,YAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,eAGAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,WAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,eACAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,WAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,eACAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,WAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,eACAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,WAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,eACAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,WAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,eACAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,WAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,eACAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,WAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,eACAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,WAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,eAGmBI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,YAAAA,OAAAA,EAAAA,EAAAA,MAAAA,SAAAA,WAAAA,KAAAA,EAAAA,MAIAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,YAAAA,OAAAA,EAAAA,EAAAA,MAAAA,SAAAA,gBAAAA,KAAAA,EAAAA,MAIAI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,YAAAA,OAAAA,EAAAA,EAAAA,MAAAA,SAAAA,eAAAA,KAAAA,EAAAA,yCD7BtB8S,uCAAAA,GAAkBxS,UAAA,CAAA,CAAA,GAAA,YAAA,KAAAgH,SAAA,CAAA,4DEwB7B,SAAAyL,EAAmBxT,EAAoCjD,GAAvD,IAAAxK,EAAAP,KAAmBA,KAAAgO,MAAAA,EAAoChO,KAAA+K,MAAAA,EACrD/K,KAAKgO,MACF1B,iBAAgB,SAAC5B,GAAU,MAAA,CAAGtB,SAAUsB,EAAMtB,SAAUpI,MAAO0J,EAAM1J,UACrE0T,WAAU,SAAC/R,OAAEyG,EAAQzG,EAAAyG,SAAEpI,EAAK2B,EAAA3B,MAC3BT,EAAK6I,SAAWA,EAChB7I,EAAKS,MAAQA,KAEjBhB,KAAKyhB,UAAYzhB,KAAKgO,MAAM1B,iBAAgB,SAAC5B,GAAU,OAAAA,EAAMtB,YAC7DpJ,KAAKiZ,aAAejZ,KAAKyhB,UAAUhV,KAAKnK,EAAAA,KAAI,SAACoI,GAAU,OAAAA,EAAMnI,MAAQ,MACrEvC,KAAK0hB,aAAe1hB,KAAKyhB,UAAUhV,KACjCnK,EAAAA,KAAI,SAACoI,GAAU,OAAgB,IAAfA,EAAMnI,MAAanD,EAAIsL,GAAO,MAC9CpI,EAAAA,KAAI,SAAChB,GAAE,IAAAW,EAAAC,EAAK,OAAAZ,MAAkE,QAA3DY,EAAiD,QAAjDD,EAAC1B,EAAKwK,MAAMlJ,YAAYP,EAAcf,EAAKS,cAAM,IAAAiB,OAAA,EAAAA,EAAER,gBAAQ,IAAAS,OAAA,EAAAA,EAAEtE,mBAnBpFf,OAAAqB,eAAWsjB,EAAAtkB,UAAA,cAAW,KAAtB,WACE,OAAO8C,KAAKyhB,UAAUhV,KAAKnK,EAAAA,KAAI,SAACoI,GAAU,OAAe,IAAfA,EAAMnI,0CAsBlDif,EAAAtkB,UAAA8U,WAAA,WACE,IAAMR,EAAGpS,EAAOY,KAAKoJ,UACrBpJ,KAAKgO,MAAM5B,SAASkF,KACpBtR,KAAKgO,MAAM5B,SAASqF,MACpBzR,KAAKgO,MAAM5B,SAAS4F,GAAWR,KAGjCgQ,EAAAtkB,UAAAmV,UAAA,WACE,IAAMhR,EAAOrB,KAAK+K,MAAMlJ,YAAYzC,EAAIY,KAAKoJ,UAAU,GAAIpJ,KAAKgB,OAChEhB,KAAKgO,MAAM5B,SAASkF,KACpBtR,KAAKgO,MAAM5B,SAASqF,MACpBzR,KAAKgO,MAAM5B,SAASiG,GAAUhR,EAAKC,6CAvC1BkgB,IAAgB3T,EAAAiB,kBAAAhE,GAAA+C,EAAAiB,kBAAAhP,uCAAhB0hB,GAAgBzS,UAAA,CAAA,CAAA,eAAA4S,eAAA,SAAAvS,EAAAC,EAAAuS,8BACbL,IAAkB,8wCDlBlC5S,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,eAAAA,GAIAA,EAAAA,WAAAA,EAAAA,GAAAA,GAAAA,GAAAA,cAAAA,KAAAA,EAAAA,EAAAA,qDAJeF,EAAAA,WAAAA,OAAAA,EAAAA,UAAAA,CAAiB,WAAA4M,uiBES9B,SAAA/P,YAEAA,EAAApO,UAAAiR,SAAA,oDAHW7C,uCAAAA,GAAmByD,UAAA,CAAA,CAAA,mBAAAC,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,SCRhCwB,EAAAA,eAAAA,EAAAA,KAAGyH,EAAAA,OAAAA,EAAAA,sBAAkBxH,EAAAA,6FCoEjBrD,EAAAA,UAAAA,EAAAA,MAAAA,iCAGEC,EAAAA,YAAAA,OAAAA,EAAAA,aAAAA,EAAAA,KAAAA,CAAgC,MAAAmU,EAAAC,aAAAzW,EAAA,KAAhCqC,CAAgC,QAAAmU,EAAAC,aAAAze,MAAA,KAAhCqK,CAAgC,SAAAmU,EAAAC,aAAAxe,OAAA,gCASpCmK,EAAAA,UAAAA,EAAAA,WAAAA,2CAA6BgB,EAAAA,WAAAA,QAAAA,8BAD/BC,EAAAA,wBAAAA,GACEC,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,WAAAA,IACFC,EAAAA,gDADaC,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,kDC/CX,SAAAsT,EAAmB/T,GAAnB,IAAAzN,EAAAP,KAAmBA,KAAAgO,MAAAA,EATXhO,KAAAwT,aAAe,IAAIC,EAAAA,aAEpBzT,KAAAgiB,YAAwB,GAExBhiB,KAAA8hB,aAA8B,KAG7B9hB,KAAAiiB,kBAAmD,KACnDjiB,KAAAkiB,WAAuB,KAE7BliB,KAAKgO,MACFxB,QAAO,SAAC9B,GAAU,OAAAA,EAAML,kBACxBqK,WAAU,SAACrK,GACV9J,EAAK8J,eAAiBA,EACtB9J,EAAK4hB,OAAS,eAAe5hB,EAAK8J,eAAevF,KAAI,MAAMvE,EAAK8J,eAAetF,IAAG,WAGtF/E,KAAKgO,MAAMxB,QAAO,SAAC9B,GAAU,OAAAA,EAAM1J,SAAO0T,WAAU,SAAC1T,GAAU,OAACT,EAAKS,MAAQA,KAC7EhB,KAAKoiB,cAAgBpiB,KAAKgO,MAAM1B,iBAAgB,SAAC5B,GAAU,OAAAA,EAAMF,uBAxBnE3N,OAAAqB,eACI6jB,EAAA7kB,UAAA,QAAK,KADT,SACUwN,SACE,QAAVzI,EAAAjC,KAAKgO,aAAK,IAAA/L,GAAAA,EAAEgK,UAAS,SAACoW,GAAa,OAAAxlB,OAAAiJ,OAAAjJ,OAAAiJ,OAAA,GAAMuc,GAAa3X,uCAyBxDqX,EAAA7kB,UAAA0S,gBAAA,WACE5P,KAAKsiB,oBAGPP,EAAA7kB,UAAA0X,YAAA,WACE5U,KAAKwT,aAAaqB,eAGpBkN,EAAA7kB,UAAAqlB,gBAAA,SAAgB/T,EAAYrB,GAC1B,OAAUA,EAAM3P,IAAG,IAAI2P,EAAM/B,KAAKoX,YAGpCT,EAAA7kB,UAAAulB,UAAA,SAAU3L,GACR9W,KAAKgiB,YAAc,CAAClL,EAAGE,QAASF,EAAGG,QAASjX,KAAKqK,eAAevF,KAAM9E,KAAKqK,eAAetF,MAG5Fgd,EAAA7kB,UAAAwlB,SAAA,SAAS5L,GACP,GAAI9W,KAAKgiB,YAAa,CACd,IAAA9f,EAAApD,EAAsBkB,KAAKgiB,YAAW,GAArCza,EAAErF,EAAA,GAAEsF,EAAEtF,EAAA,GAAE4C,EAAI5C,EAAA,GAAE6C,EAAG7C,EAAA,GAClBS,EAAA7D,EAAW,CAACgY,EAAGE,QAAUzP,EAAIuP,EAAGG,QAAUzP,GAAG,GAA5C+P,EAAE5U,EAAA,GAAE6U,EAAE7U,EAAA,GACb3C,KAAKgO,MAAM5B,SAAS0F,GAAqB,CAAEhN,KAAMA,EAAOyS,EAAIxS,IAAKA,EAAMyS,OAI3EuK,EAAA7kB,UAAAylB,QAAA,WACE3iB,KAAKgiB,YAAc,MAGrBD,EAAA7kB,UAAAolB,iBAAA,WAAA,IAAA/hB,EAAAP,KACQ4iB,EAAW5iB,KAAK6iB,gBAAgBhT,cACtC7P,KAAKwT,aAAasB,IAChBnB,EAAAA,UAA+CiP,EAAU,SACtDnW,KAAK7K,EAAAA,QAAO,SAAC5C,GAAM,OAAAA,EAAEmb,YACrBzF,WAAU,SAAC1V,GACVA,EAAEgW,iBACFhW,EAAEiW,kBACF,IAAM6N,EAAeF,EAASpE,wBACxBuE,EAAqD,KAAvC/jB,EAAE+jB,WAAa,MAAQ/jB,EAAEgkB,OAAS,GAChD9gB,EAAApD,EAAS,CAACE,EAAEgY,QAAU8L,EAAahe,KAAM9F,EAAEiY,QAAU6L,EAAa/d,KAAI,GAArE6B,EAAC1E,EAAA,GAAEmJ,EAACnJ,EAAA,GACP3B,EAAK8J,eAAeC,MAAQyY,GAAc,IAC5CxiB,EAAKyN,MAAM5B,SACT0F,GAAqB,CACnBxH,MAAO/J,EAAK8J,eAAeC,MAAQyY,EACnCje,MAAOvE,EAAK8J,eAAevF,KAAO8B,IAAMmc,EAAaxiB,EAAK8J,eAAeC,OAAS/J,EAAK8J,eAAevF,KACtGC,KAAMxE,EAAK8J,eAAetF,IAAMsG,IAAM0X,EAAaxiB,EAAK8J,eAAeC,OAAS/J,EAAK8J,eAAetF,YAQlHgd,EAAA7kB,UAAA+lB,cAAA,WAAA,IAAA1iB,EAAAP,KACEA,KAAKkjB,uBACL,IAAM/B,EAAUnhB,KAAK6iB,gBAAgBhT,cAAc2O,wBACnDxe,KAAKiiB,kBAAoB,IAAI/T,IAC7BlO,KAAKgB,MACFY,QAAO,SAACP,GAAS,OAACA,EAAKyI,UACvBpJ,SAAQ,SAACW,SACFwH,EAAqD,QAAjD5G,EAAG6R,SAASyK,cAAc,aAAald,EAAKC,WAAK,IAAAW,OAAA,EAAAA,EAAEuc,wBAC7D,GAAI3V,EAAM,CACA,IAAAxF,EAA6BwF,EAAIxF,MAA1BC,EAAsBuF,EAAIvF,OAAlBwB,EAAc+D,EAAI/D,KAAZC,EAAQ8D,EAAI9D,IACzCxE,EAAK0hB,kBAAkB/P,IAAI7Q,EAAKC,GAAI,CAAE+B,MAAKA,EAAEC,OAAMA,EAAEwB,KAAMA,EAAOqc,EAAQrc,KAAMC,IAAKA,EAAMoc,EAAQpc,WAK3Ggd,EAAA7kB,UAAAimB,eAAA,SAAeta,GAAf,IAAAtI,EAAAP,KACEA,KAAK8hB,aAAejZ,EACpB7I,KAAKkiB,WAAa,GAClBliB,KAAKiiB,kBAAkBvhB,SAAQ,SAACkF,EAAMtE,IAqB1C,SAAmBuH,EAAwBua,GACzC,OACEva,EAAK/D,MAAQse,EAAMxc,GAAKiC,EAAK9D,KAAOqe,EAAM/X,GAAKxC,EAAK/D,KAAO+D,EAAKxF,OAAS+f,EAAMxc,EAAIwc,EAAM/f,OAASwF,EAAK9D,IAAM8D,EAAKvF,QAAU8f,EAAM/X,EAAI+X,EAAM9f,QAtBtI+f,CAAUzd,EAAMrF,EAAKuhB,eACvBvhB,EAAK2hB,WAAWhjB,KAAKoC,MAGzBtB,KAAKgO,MAAM5B,SAASyF,GAAoB7R,KAAKkiB,aAC7CliB,KAAKgO,MAAM5B,SAASmF,EAAiBvR,KAAKkiB,cAG5CH,EAAA7kB,UAAAomB,YAAA,WACEtjB,KAAKkiB,WAAa,GAClBliB,KAAK8hB,aAAe,KACpB9hB,KAAKiiB,kBAAoB,MAGnBF,EAAA7kB,UAAAgmB,qBAAA,WACNljB,KAAKgO,MAAM5B,SAASqF,MACpBzR,KAAKgO,MAAM5B,SAASkF,6CAnHXyQ,IAAyBlU,EAAAiB,kBAAAhE,uCAAzBiX,GAAyBhT,UAAA,CAAA,CAAA,cAAAmM,UAAA,SAAA9L,EAAAC,qCAKJgB,EAAAA,sKATrB,CAACvF,KAAYyY,iCAAAvU,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,MAAA,MAAA,UAAA,CAAA,cAAA,GAAA,aAAA,GAAA,aAAA,GAAA,EAAA,mBAAA,EAAA,qBAAA,YAAA,WAAA,WAAA,oBAAA,qBAAA,oBAAA,CAAA,SAAA,cAAA,YAAA,IAAA,CAAA,EAAA,kBAAA,CAAA,eAAA,IAAA,CAAA,aAAA,IAAA,CAAA,KAAA,GAAA,EAAA,WAAA,KAAA,CAAA,KAAA,GAAA,EAAA,WAAA,KAAA,CAAA,KAAA,GAAA,EAAA,WAAA,KAAA,CAAA,KAAA,GAAA,EAAA,WAAA,KAAA,CAAA,KAAA,GAAA,EAAA,WAAA,KAAA,CAAA,KAAA,GAAA,EAAA,WAAA,KAAA,CAAA,QAAA,WAAA,EAAA,OAAA,MAAA,QAAA,SAAA,EAAA,QAAA,CAAA,EAAA,QAAA,UAAA,gBAAA,CAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,QAAA,CAAA,EAAA,UAAAC,SAAA,SAAAC,EAAAC,kCDb1BiS,EAAAA,aAAAA,GACAzQ,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAAA,EAAAA,GAQEsE,EAAAA,WAAAA,aAAAA,SAAAA,GAAAA,OAAa9F,EAAAoT,UAAArN,KAAbD,CAA+B,YAAA,SAAAC,GAAA,OACnB/F,EAAAqT,SAAAtN,KADZD,CAA+B,YAAA,WAAA,OAEnB9F,EAAAsT,YAFZxN,CAA+B,qBAAA,WAAA,OAKV9F,EAAA4T,kBALrB9N,CAA+B,sBAAA,SAAAC,GAAA,OAMT/F,EAAA8T,eAAA/N,KANtBD,CAA+B,oBAAA,WAAA,OAOX9F,EAAAiU,iBAEpBzS,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAAA,GACEpD,EAAAA,UAAAA,EAAAA,wBACAA,EAAAA,UAAAA,EAAAA,kBACFqD,EAAAA,eACArD,EAAAA,UAAAA,EAAAA,MAAAA,GAGAoD,EAAAA,eAAAA,GAAAA,MAAAA,GACEpD,EAAAA,UAAAA,GAAAA,oBACAA,EAAAA,UAAAA,GAAAA,oBACAA,EAAAA,UAAAA,GAAAA,MAAAA,6CAMAA,EAAAA,UAAAA,GAAAA,MAAAA,6CAMAA,EAAAA,UAAAA,GAAAA,MAAAA,6CAMAA,EAAAA,UAAAA,GAAAA,MAAAA,6CAMAA,EAAAA,UAAAA,GAAAA,MAAAA,8CAMAA,EAAAA,UAAAA,GAAAA,MAAAA,8CAMFqD,EAAAA,eACFA,EAAAA,eACAnC,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,MAAAA,IAQFmC,EAAAA,eACFA,EAAAA,eAEAnC,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,eAAAA,8EAvEIE,EAAAA,UAAAA,GAAA8J,EAAAA,YAAAA,aAAAA,EAAAA,aAAAA,CAAwC,WAAAtJ,EAAA2S,aAMxCvT,EAAAA,WAAAA,qBAAAA,EAAAA,cAK4BI,EAAAA,UAAAA,GAAAnB,EAAAA,YAAAA,YAAAA,EAAAA,QActBmB,EAAAA,UAAAA,GAAAnB,EAAAA,YAAAA,OAAAA,OAAAA,EAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,iBAAAA,MAAAA,EAAAA,GAAAA,KAAAA,EAAAA,GAAAA,UAAAA,EAAAA,eAAAA,MAAAA,MADAiL,EAAAA,YAAAA,SAAAA,OAAAA,EAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,iBAAAA,MAAAA,EAAAA,GAAAA,KAAAA,EAAAA,GAAAA,OAOA9J,EAAAA,UAAAA,GAAAnB,EAAAA,YAAAA,QAAAA,OAAAA,EAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,iBAAAA,MAAAA,EAAAA,GAAAA,KAAAA,EAAAA,GAAAA,UAAAA,EAAAA,eAAAA,MAAAA,MADAiL,EAAAA,YAAAA,SAAAA,OAAAA,EAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,iBAAAA,MAAAA,EAAAA,GAAAA,KAAAA,EAAAA,GAAAA,OAOA9J,EAAAA,UAAAA,GAAAnB,EAAAA,YAAAA,OAAAA,OAAAA,EAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,iBAAAA,MAAAA,EAAAA,GAAAA,KAAAA,EAAAA,GAAAA,UAAAA,EAAAA,eAAAA,MAAAA,MADAiL,EAAAA,YAAAA,SAAAA,OAAAA,EAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,iBAAAA,MAAAA,EAAAA,GAAAA,KAAAA,EAAAA,GAAAA,OAOA9J,EAAAA,UAAAA,GAAAnB,EAAAA,YAAAA,OAAAA,OAAAA,EAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,iBAAAA,MAAAA,EAAAA,GAAAA,KAAAA,EAAAA,GAAAA,UAAAA,EAAAA,eAAAA,MAAAA,MADAiL,EAAAA,YAAAA,SAAAA,OAAAA,EAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,iBAAAA,MAAAA,EAAAA,GAAAA,KAAAA,EAAAA,GAAAA,OAOA9J,EAAAA,UAAAA,GAAAnB,EAAAA,YAAAA,QAAAA,OAAAA,EAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,iBAAAA,MAAAA,EAAAA,GAAAA,KAAAA,EAAAA,GAAAA,UAAAA,EAAAA,eAAAA,MAAAA,MADAiL,EAAAA,YAAAA,SAAAA,OAAAA,EAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,iBAAAA,MAAAA,EAAAA,GAAAA,KAAAA,EAAAA,GAAAA,OAOA9J,EAAAA,UAAAA,GAAAnB,EAAAA,YAAAA,QAAAA,OAAAA,EAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,iBAAAA,MAAAA,EAAAA,GAAAA,KAAAA,EAAAA,GAAAA,UAAAA,EAAAA,eAAAA,MAAAA,MADAiL,EAAAA,YAAAA,SAAAA,OAAAA,EAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,iBAAAA,MAAAA,EAAAA,GAAAA,KAAAA,EAAAA,GAAAA,OAQH9J,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,OAAAA,EAAAA,cASyBI,EAAAA,UAAAA,GAAAJ,EAAAA,WAAAA,UAAAA,EAAAA,YAAAA,GAAAA,GAAAA,EAAAA,MAAAA,SAAAA,CAA0B,eAAAY,EAAAkT,spDElC1D,IAAMiB,GAAiBC,EAGjBC,GAA0B7mB,OAAOgE,KAAK2iB,IAAgBlhB,KAAI,SAAC9E,GAAQ,OAAAgmB,GAAehmB,MAElFmmB,GAAe,CACnBC,EAAAA,aACAC,EAAAA,aAAaC,QAAQJ,IACrBK,EAAAA,eACAC,EAAAA,oBACAC,EAAAA,aACAC,EAAAA,aACAC,EAAAA,iBACAC,EAAAA,cACAC,EAAAA,gBACAC,EAAAA,aACAC,EAAAA,cACAC,EAAAA,YACAC,EAAAA,gBACAC,EAAAA,iBACAC,EAAAA,eACAC,EAAAA,gBAGIC,GAAc,CAACC,EAAAA,mBA4BnB,SAAoBC,GAAA/kB,KAAA+kB,SAAAA,EAClB/kB,KAAK+kB,SAAS5Y,IAAI6Y,EAAAA,eAAeC,kBAAkB,CAAEC,UAAW,0FAFvDC,mEAAAA,IAAsBtX,EAAAC,SAAAD,EAAAuX,YAAAC,QAAA,CAAAjmB,EAAA,CAJvBkmB,EAAAA,aAAcC,EAAAA,wBAAyBC,EAAAA,iBAAkBC,EAAAA,YAAaC,EAAAA,qBAAwB/B,GAAiBkB,wEAI9GM,GAAsB,CAAAQ,aAAA,CAtBjCnE,GACArW,GACAG,GACAiL,GACAxF,EACAH,EACAtB,EACA0O,GACAqC,GACAtS,EACAgU,GACAzG,GACA/P,GAGkBmV,GAAqBW,GAAmBvO,GAAoB6N,GAAmBY,GAlB1E1F,GAAsBe,IAAmByI,QAAA,CAqBtDC,EAAAA,aAAcC,EAAAA,wBAAyBC,EAAAA,iBAAkBC,EAAAA,YAAaC,EAAAA,oBAzChF9B,EAAAA,aAAYgC,EAAA/B,aAEZE,EAAAA,eACAC,EAAAA,oBACAC,EAAAA,aACAC,EAAAA,aACAC,EAAAA,iBACAC,EAAAA,cACAC,EAAAA,gBACAC,EAAAA,aACAC,EAAAA,cACAC,EAAAA,YACAC,EAAAA,gBACAC,EAAAA,iBACAC,EAAAA,eACAC,EAAAA,eAGmBE,EAAAA,gBAAce,QAAA,CAKjCrE,GACArW,GACAG,GACAiL,GACAxF,EACAH,EACAtB,EACA0O,GACAqC,GACAtS,EACAgU,GACAzG,GACA/P,GAGkBmV,GAAqBW,GAAmBvO,GAAoB6N,GAAmBY,4BARjGvD,GAAqB,CAAA8H,EAAAC,KACrB1F,GAO0DvN,IAAkB,CAAAgT,EAAAE","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable, TemplateRef } from '@angular/core';\nimport * as _ from 'lodash';\nimport { INode } from '../store';\n\nexport type IPosition = [number, number];\nexport interface IAbsolutePosition {\n  tl: IPosition;\n  tr: IPosition;\n  bl: IPosition;\n  br: IPosition;\n}\n\nexport interface IVerticalAndHorizontalPosition {\n  t: IPosition;\n  r: IPosition;\n  b: IPosition;\n  l: IPosition;\n}\n\nexport interface IDOMRect {\n  width: number;\n  height: number;\n  left: number;\n  top: number;\n  cx?: number;\n  cy?: number;\n  bottom?: number;\n  right?: number;\n}\n\nexport type IRectDirection = 'tl' | 't' | 'tr' | 'r' | 'br' | 'b' | 'bl' | 'l';\n\ntype TreeNode = INode & { children: TreeNode[] };\n\nconst SPECIAL_ROTATE = new Set([0, 90, 180, 270, 360]);\n\nexport function genNodeId(): string {\n  return `${Date.now()}${Math.round(Math.random() * 1000000000000)}`;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CeUtilsService {\n  public static shared: CeUtilsService;\n\n  constructor() {\n    CeUtilsService.shared = this;\n  }\n\n  public isTemplateType(content: any) {\n    return content instanceof TemplateRef;\n  }\n\n  public isDeepEqual(v1: any, v2: any) {\n    if (typeof v1 !== typeof v2) {\n      return false;\n    } else {\n      switch (typeof v1) {\n        case 'number':\n        case 'string':\n        case 'bigint':\n        case 'boolean':\n        case 'symbol':\n        case 'undefined':\n        case 'function':\n          return v1 === v2;\n        case 'object':\n          if (v1 === null || v2 === null) {\n            return v1 === v2;\n          } else if (Array.isArray(v1)) {\n            if (v1.length !== v2.length) {\n              return false;\n            }\n            let flag = true;\n            v1.forEach((v, i) => {\n              if (flag) {\n                flag = this.isDeepEqual(v, v2[i]);\n              }\n            });\n            return flag;\n          } else if (v1 instanceof Set && v2 instanceof Set) {\n            return this.isDeepEqual([...v1], [...v2]);\n          } else {\n            let flag = true;\n            Object.keys(v1).forEach((v1k) => {\n              if (flag) {\n                if (v2.hasOwnProperty(v1k)) {\n                  flag = this.isDeepEqual(v1[v1k], v2[v1k]);\n                } else {\n                  flag = false;\n                }\n              }\n            });\n            return flag;\n          }\n      }\n    }\n  }\n\n  /**\n   * 将平铺的节点列表转为树\n   * @param nodes 节点列表\n   */\n  public transferNodesListToNodesTree(nodes: INode[]): TreeNode[] {\n    const tree: TreeNode[] = [];\n    const childrenOf = {};\n    for (const node of nodes) {\n      const id = node.id;\n      const pid = node.parentId;\n      childrenOf[id] = childrenOf[id] || [];\n      node.children = childrenOf[id];\n      if (pid !== undefined && pid !== '') {\n        childrenOf[pid] = childrenOf[pid] || [];\n        childrenOf[pid].push(node);\n      } else {\n        tree.push(node as TreeNode);\n      }\n    }\n    return tree;\n  }\n\n  public getNodeChildren(id: string, nodes: INode[]) {\n    return nodes.filter((node) => node.parentId === id);\n  }\n\n  /**\n   * 通过节点ID在树中查找节点\n   * @param id 节点ID\n   * @param nodes 节点树\n   */\n  public getNodeById<T = any>(id: string, nodes: INode<T>[]): INode<T> {\n    return nodes.find((node) => node.id === id);\n  }\n\n  /**\n   * 通过节点ID查找节点及节点所有父级\n   * @param id 节点ID\n   * @param nodes 节点树\n   */\n  public getNodeAndParentListById<T = any>(id: string | undefined, nodes: INode<T>[]): INode[] {\n    if (!id) {\n      return [];\n    }\n    const arr: INode<T>[] = [nodes.find((n) => n.id === id)];\n\n    let parentId = arr[1]?.parentId;\n    while (parentId) {\n      arr.push(nodes.find((n) => n.id === parentId));\n      parentId = arr[arr.length - 1]?.parentId;\n    }\n    return arr;\n  }\n\n  /**\n   * 通过子节点id集合和节点树，获取子节点的父节点，若子节点不在同一级则返回undefined\n   * @param childrenIds 子节点ID列表\n   * @param nodes 节点集合\n   */\n  public getSameLayerParentByChildren(childrenIds: string[], nodes: INode[]): INode | false {\n    const parentIds = childrenIds.map((id) => nodes.find((node) => node.id === id)?.parentId ?? '');\n    if (new Set(parentIds).size === 1) {\n      return nodes.find((node) => node.id === parentIds[0]);\n    }\n    return false;\n  }\n\n  /**\n   * 通过直线的两点方程获取直线上人一点点的坐标\n   * y = (x-x1)*(y2-y1)/(x2-x1)+y1\n   * x = (y-y1)*(x2-x1)/(y2-y1)+x1\n   * @param direction 要获取点的坐标轴\n   * @param n 要获取点的已知轴的坐标\n   * @param line 确定一条直线的两点的坐标\n   */\n  public getPointInLine(direction: 'x' | 'y', n: number, line: [[number, number], [number, number]]): number {\n    const [[x1, y1], [x2, y2]] = line;\n    switch (direction) {\n      case 'x':\n        return ((n - y1) * (x2 - x1)) / (y2 - y1) + x1;\n      case 'y':\n        return ((n - x1) * (y2 - y1)) / (x2 - x1) + y1;\n    }\n  }\n\n  /**\n   * 通过元素在所在坐标系的中心点、宽、高以及旋转角度获取元素在所在坐标系的四个顶点的坐标\n   * @param cx 中心点x轴坐标\n   * @param cy 中心点y轴坐标\n   * @param width 宽\n   * @param height 高\n   * @param rotate 旋转角度\n   */\n  public getAbsolutePosition(cx: number, cy: number, width: number, height: number, rotate = 0): IAbsolutePosition {\n    if (SPECIAL_ROTATE.has(rotate)) {\n      return this.getAbsolutePositionSpecial(cx, cy, width, height, rotate);\n    } else {\n      const r = Math.sqrt((width / 2) ** 2 + (height / 2) ** 2);\n      const patchRad1 = Math.atan(height / 2 / (width / 2));\n      const patchRad2 = Math.atan(width / 2 / (height / 2));\n      const currentRad = (rotate * Math.PI) / 180;\n\n      return {\n        tl: [cx - Math.cos(currentRad + patchRad1) * r, cy - Math.sin(currentRad + patchRad1) * r],\n        tr: [cx - Math.cos(currentRad + patchRad1 + patchRad2 * 2) * r, cy - Math.sin(currentRad + patchRad1 + patchRad2 * 2) * r],\n        bl: [cx - Math.cos(currentRad - patchRad1) * r, cy - Math.sin(currentRad - patchRad1) * r],\n        br: [cx - Math.cos(currentRad - patchRad1 - patchRad2 * 2) * r, cy - Math.sin(currentRad - patchRad1 - patchRad2 * 2) * r],\n      };\n    }\n  }\n\n  /**\n   * 获取特殊旋转角度下元素的四个顶点在所在坐标系的坐标\n   * @param cx 元素的中心点x轴坐标\n   * @param cy 元素的中心点y轴坐标\n   * @param width 宽\n   * @param height 高\n   * @param rotate 旋转角度\n   */\n  public getAbsolutePositionSpecial(cx: number, cy: number, width: number, height: number, rotate: number): IAbsolutePosition | undefined {\n    if (SPECIAL_ROTATE.has(rotate)) {\n      switch (rotate) {\n        case 0:\n        case 360:\n          return {\n            tl: [cx - width / 2, cy - height / 2],\n            tr: [cx + width / 2, cy - height / 2],\n            bl: [cx - width / 2, cy + height / 2],\n            br: [cx + width / 2, cy + height / 2],\n          };\n        case 90:\n          return {\n            tl: [cx + height / 2, cy - width / 2],\n            tr: [cx + height / 2, cy + width / 2],\n            bl: [cx - height / 2, cy - width / 2],\n            br: [cx - height / 2, cy + width / 2],\n          };\n        case 180:\n          return {\n            tl: [cx + width / 2, cy + height / 2],\n            tr: [cx - width / 2, cy + height / 2],\n            bl: [cx + width / 2, cy - height / 2],\n            br: [cx - width / 2, cy - height / 2],\n          };\n        case 270:\n          return {\n            tl: [cx - height / 2, cy + width / 2],\n            tr: [cx - height / 2, cy - width / 2],\n            bl: [cx + height / 2, cy + width / 2],\n            br: [cx + height / 2, cy - width / 2],\n          };\n      }\n    }\n  }\n\n  /**\n   * 通过元素顶点坐标获取上、右、下和左方向的坐标\n   * @param position\n   */\n  public getVerticalAndHorizontalPointByAbsolutePosition(position: IAbsolutePosition): IVerticalAndHorizontalPosition {\n    const { tl, bl, br, tr } = position;\n    return {\n      t: [(Math.max(tl[0], tr[0]) - Math.min(tl[0], tr[0])) / 2, (Math.max(tl[1], tr[1]) - Math.min(tl[1], tr[1])) / 2],\n      r: [(Math.max(br[0], tr[0]) - Math.min(br[0], tr[0])) / 2, (Math.max(br[1], tr[1]) - Math.min(br[1], tr[1])) / 2],\n      b: [(Math.max(bl[0], br[0]) - Math.min(bl[0], br[0])) / 2, (Math.max(bl[1], br[1]) - Math.min(bl[1], br[1])) / 2],\n      l: [(Math.max(tl[0], bl[0]) - Math.min(tl[0], bl[0])) / 2, (Math.max(tl[1], bl[1]) - Math.min(tl[1], bl[1])) / 2],\n    };\n  }\n\n  /**\n   * 通过HTML元素的宽、高、旋转角度以及所在坐标系的x、y点获取元素在所在坐标系的包围盒\n   * @param width 宽\n   * @param height 高\n   * @param left 在所在坐标系中x轴的坐标\n   * @param top 在所在坐标系中y轴的坐标\n   * @param rotate 旋转角度\n   */\n  public getBoundingBox(width: number, height: number, left: number, top: number, rotate = 0): IDOMRect {\n    const position = this.getAbsolutePosition(left + width / 2, top + height / 2, width, height, rotate);\n    const l = Math.min(...this.getAxisListByPosition('x', [position]));\n    const r = Math.max(...this.getAxisListByPosition('x', [position]));\n    const t = Math.min(...this.getAxisListByPosition('y', [position]));\n    const b = Math.max(...this.getAxisListByPosition('y', [position]));\n    return { left: l, top: t, width: r - l, height: b - t, bottom: b, right: r, cx: l + (r - l) / 2, cy: t + (b - t) / 2 };\n  }\n\n  /**\n   * 通过盒子的绝对坐标列表获取对应坐标的值的集合\n   * @param axis 要获取的坐标轴\n   * @param positions 绝对坐标列表\n   */\n  public getAxisListByPosition(axis: 'x' | 'y', positions: IAbsolutePosition[]): number[] {\n    switch (axis) {\n      case 'x':\n        return positions.reduce((arr, position) => [...arr, position.bl[0], position.br[0], position.tl[0], position.tr[0]], []);\n      case 'y':\n        return positions.reduce((arr, position) => [...arr, position.bl[1], position.br[1], position.tl[1], position.tr[1]], []);\n    }\n  }\n\n  /**\n   * 获取多个盒子的最小外包围盒的尺寸\n   * @param positions 盒子绝对坐标列表\n   */\n  public getOuterBoundingBox(positions: IAbsolutePosition[]): IDOMRect {\n    const l = Math.min(...this.getAxisListByPosition('x', positions));\n    const r = Math.max(...this.getAxisListByPosition('x', positions));\n    const t = Math.min(...this.getAxisListByPosition('y', positions));\n    const b = Math.max(...this.getAxisListByPosition('y', positions));\n    return { left: l, top: t, width: r - l, height: b - t, bottom: b, right: r, cx: l + (r - l) / 2, cy: t + (b - t) / 2 };\n  }\n\n  /**\n   * 依据zIndex对节点递归排序\n   * @param list 节点列表\n   */\n  public sortNodeListByIndex(list?: TreeNode[]): TreeNode[] {\n    return (\n      list &&\n      _.chain(list)\n        .sortBy((item) => item.zIndex)\n        .map((item) => ({ ...item, children: this.sortNodeListByIndex(item.children) }))\n        .value()\n    );\n  }\n\n  /**\n   * 通过直线的斜率方程和直线上两点A，B以及直线外一点D，求出D点上直线AB的垂线DC和直线AB的交点C的坐标\n   * @param PA 点A\n   * @param PB 点B\n   * @param PD 点D\n   */\n  public getVerticalLineCrossPoint(PA: [number, number], PB: [number, number], PD: [number, number]): [number, number] {\n    const [PAx, PAy] = PA;\n    const [PBx, PBy] = PB;\n    const [PDx, PDy] = PD;\n    if (PAx === PBx) {\n      return [PAx, PDy];\n    } else if (PAy === PBy) {\n      return [PDx, PAy];\n    } else {\n      const L1k = (PAy - PBy) / (PAx - PBx);\n      const L2k = -1 / L1k;\n      const a = PAy - L1k * PAx;\n      const b = PDy - L2k * PDx;\n      const x = (b - a) / (L1k - L2k);\n      const y = L1k * x + a;\n      return [x, y];\n    }\n  }\n\n  /**\n   * 通过元素在所在坐标系内四个顶点的坐标，使用直线的两点方程求出两两对点所在直线的交点（矩形的中心点），\n   * 使用勾股定理求出元素宽高，转换后得到元素在所在坐标系的宽、高、x轴坐标和y轴坐标\n   * width = sqrt((trx - tlx)^2 + (try - tly)^2)\n   * height = sqrt((blx - tlx)^2 + (bly - tly)^2)\n   * a1*x + b1*y + c1 = 0\n   * a2*x + b2*y + c2 = 0\n   * a1*x + b1*y + c1 = a2*x + b2*y + c2\n   * 由直线的两点式方程可得a=y0-y1, b=x1-x0, c=x0*y1 - x1*y0\n   * 解方程组可得两条直线的交点x,y\n   * @param position 元素在所在坐标系内四个顶点的坐标\n   */\n  public getRelativePosition(position: IAbsolutePosition): IDOMRect {\n    const { tl, bl, br, tr } = position;\n    const width: number = Math.sqrt((tr[0] - tl[0]) ** 2 + (tr[1] - tl[1]) ** 2);\n\n    const height: number = Math.sqrt((bl[0] - tl[0]) ** 2 + (bl[1] - tl[1]) ** 2);\n\n    const a1 = br[1] - tl[1];\n    const b1 = tl[0] - br[0];\n    const c1 = br[0] * tl[1] - tl[0] * br[1];\n    const a2 = bl[1] - tr[1];\n    const b2 = tr[0] - bl[0];\n    const c2 = bl[0] * tr[1] - tr[0] * bl[1];\n    const cx = (b1 * c2 - b2 * c1) / (a1 * b2 - a2 * b1);\n    const cy = (a2 * c1 - a1 * c2) / (a1 * b2 - a2 * b1);\n\n    return {\n      cx,\n      cy,\n      width,\n      height,\n      left: cx - width / 2,\n      top: cy - height / 2,\n      bottom: cx + width / 2,\n      right: cy + height / 2,\n    };\n  }\n\n  /**\n   * 获取元素的四个顶点在外包围盒的矩形内的坐标的百分比\n   * @param group 元素外包围盒\n   * @param item 元素的四个顶点坐标\n   */\n  public getItemPercentPositionInGroup(group: IDOMRect, item: IAbsolutePosition): IAbsolutePosition {\n    return {\n      tl: [(item.tl[0] - group.left) / group.width, (item.tl[1] - group.top) / group.height],\n      tr: [(item.tr[0] - group.left) / group.width, (item.tr[1] - group.top) / group.height],\n      bl: [(item.bl[0] - group.left) / group.width, (item.bl[1] - group.top) / group.height],\n      br: [(item.br[0] - group.left) / group.width, (item.br[1] - group.top) / group.height],\n    };\n  }\n\n  /**\n   * 通过矩形中心点坐标C(cx,cy)中心点和Y轴平行线在中心点上方的一点S(sx,sy),旋转落点E(ex,ey),利用三角形余弦定理，\n   * 求出∠SCE的角度，再通过ex和sx的大小判断旋转的角度为内角还是外角\n   * @param cx 中心点x坐标\n   * @param cy 中心点y坐标\n   * @param sx 与中心点相同的x坐标\n   * @param sy 与中心点同x坐标的上方一点的y坐标\n   * @param ex 旋转终点x坐标\n   * @param ey x旋转终点y坐标\n   */\n  public getRotate(cx: number, cy: number, sx: number, sy: number, ex: number, ey: number): number {\n    const rotate =\n      (Math.acos(\n        ((cy - sy) ** 2 + (cx - sx) ** 2 + (cx - ex) ** 2 + (cy - ey) ** 2 - ((ex - sx) ** 2 + (ey - sy) ** 2)) /\n          (2 * Math.sqrt((cy - sy) ** 2 + (cx - sx) ** 2) * Math.sqrt((cx - ex) ** 2 + (cy - ey) ** 2))\n      ) *\n        180) /\n      Math.PI;\n    if (ex === sx) {\n      return 180;\n    }\n    if (ex > sx) {\n      return rotate;\n    }\n    if (ex < sx) {\n      return 360 - rotate;\n    }\n  }\n\n  /**\n   * 通过向量四边形法则求出向量ab、向量ac的对角线ad的d点坐标, ab + ac = ad\n   * @param ab 向量ab\n   * @param ac 向量ac\n   * @param a a点坐标\n   */\n  public getPointByVectorSum(ab: [number, number], ac: [number, number], a: [number, number]): [number, number] {\n    return [ab[0] + ac[0] + a[0], ab[1] + ac[1] + a[1]];\n  }\n\n  /**\n   * 获取两点之间的线段长度\n   * @param point1 点1\n   * @param point2 点2\n   */\n  public getDistanceBeforeToPoint(point1: [number, number], point2: [number, number]): number {\n    return Math.sqrt((point1[0] - point2[0]) ** 2 + (point1[1] - point2[1]) ** 2);\n  }\n\n  /**\n   * 通过获取父节点中心点坐标和原始子节点中心点坐标，将向量（父节点中心点-子节点原始中心点）\n   * 旋转父节点旋转的角度(rotate)后得到向量（父节点中心点-子节点中心点）然后利用向量旋转的\n   * 公式直接求出子节点中心点坐标\n   * x1 = x0*cos(rotate) - y0*sin(rotate)\n   * y1 = x0*sin(rotate) - y0*cos(rotate)\n   * @param parentRect 父元素尺寸\n   * @param parentRotate 父元素旋转角度\n   * @param childRect 子元素尺寸\n   */\n  public getChildPositionBaseOnParentCoordinateSystem(parentRect: IDOMRect, parentRotate: number, childRect: IDOMRect): IDOMRect {\n    const parentCenter = [parentRect.left + parentRect.width / 2, parentRect.top + parentRect.height / 2];\n    const originalCenter = [childRect.left + childRect.width / 2 + parentRect.left, childRect.top + childRect.height / 2 + parentRect.top];\n    const [newCenterX, newCenterY] = [\n      (originalCenter[0] - parentCenter[0]) * Math.cos((parentRotate * Math.PI) / 180) -\n        (originalCenter[1] - parentCenter[1]) * Math.sin((parentRotate * Math.PI) / 180) +\n        parentCenter[0],\n      (originalCenter[1] - parentCenter[1]) * Math.cos((parentRotate * Math.PI) / 180) +\n        (originalCenter[0] - parentCenter[0]) * Math.sin((parentRotate * Math.PI) / 180) +\n        parentCenter[1],\n    ];\n    return {\n      left: newCenterX - childRect.width / 2,\n      top: newCenterY - childRect.height / 2,\n      bottom: newCenterX + childRect.width / 2,\n      right: newCenterY + childRect.height / 2,\n      width: childRect.width,\n      height: childRect.height,\n      cx: newCenterX,\n      cy: newCenterY,\n    };\n  }\n\n  /**\n   * 获取单个子节点相对于多层父节点的坐标\n   * @param child 子节点size\n   * @param parents 父节点集合（排序为从左往右依次外扩）\n   */\n  public getChildPositionBaseOnMultipleParentCoordinataSystem(child: IDOMRect, parents: INode[]): IDOMRect {\n    let rect: IDOMRect = { ...child };\n    while (parents.length) {\n      const parent = parents.shift();\n      rect = this.getChildPositionBaseOnParentCoordinateSystem(parent, parent.rotate, child);\n    }\n    return rect;\n  }\n\n  /**\n   * 获取多个子节点相对与多层父节点的坐标\n   * @param children 子节点列表\n   * @param parents 父节点列表\n   */\n  public getChildrenBoundingBoxBaseOnParentCoordinateSystem(children: INode[], parents: INode[]): IDOMRect {\n    const outerBox = this.getOuterBoundingBox(\n      children.map((child) =>\n        this.getAbsolutePosition(child.left + child.width / 2, child.top + child.height / 2, child.width, child.height, child.rotate)\n      )\n    );\n    let domRect = { ...outerBox };\n    while (parents.length) {\n      const parent = parents.shift();\n      domRect = this.getChildPositionBaseOnParentCoordinateSystem(parent, parent.rotate, domRect);\n    }\n    return domRect;\n  }\n\n  /**\n   * 获取已选中节点的缩放框的尺寸\n   * @param selected 已选中节点\n   * @param nodes 节点树\n   */\n  public getResizeBoundingBox(selected: string[], nodes: INode[]): IDOMRect & { rotate: number } {\n    let rect: IDOMRect;\n    let rotate: number;\n    if (selected.length === 1) {\n      const [node, ...parents] = this.getNodeAndParentListById(selected[0], nodes);\n      rect = { ...this.getChildPositionBaseOnMultipleParentCoordinataSystem(node, [...parents]) };\n      rotate = parents.reduce((sum, p) => sum + (p.rotate ?? 0), node.rotate ?? 0);\n    } else {\n      const parent = this.getSameLayerParentByChildren(selected, nodes);\n      if (parent !== false) {\n        const parents = this.getNodeAndParentListById(parent?.id, nodes);\n        rect = this.getChildrenBoundingBoxBaseOnParentCoordinateSystem(\n          selected.map((id) => this.getNodeById(id, nodes)),\n          [...parents]\n        );\n        rotate = parents.reduce((sum, p) => sum + (p.rotate ?? 0), 0);\n      }\n    }\n    return { ...rect, rotate };\n  }\n}\n","import { TemplateRef, Type } from '@angular/core';\n\nexport interface INode<T = any> {\n  id: string;\n  name: string;\n  locked?: boolean;\n  width: number;\n  height: number;\n  left: number;\n  top: number;\n  rotate: number;\n  zIndex: number;\n  borderStyle?: string;\n  borderWidth?: number;\n  borderColor?: string;\n  borderRadius?: number;\n  backgroundColor?: string;\n  backgroundImage?: string;\n  backgroundRepeat?: string;\n  backgroundPosition?: string;\n  backgroundSize?: string;\n  parentId?: string;\n  data?: T;\n  [key: string]: any;\n}\n\nexport interface ICanvasBackground {\n  backgroundColor?: string;\n  backgroundImage?: string;\n}\n\nexport interface ICanvasSize {\n  width: number;\n  height: number;\n}\nexport interface ICanvasPosition {\n  scale: number;\n  left: number;\n  top: number;\n}\n\nexport type IRefLineDirection = 'tx' | 'bx' | 'ly' | 'ry' | 'cx' | 'cy';\nexport interface IRefLineState {\n  state: boolean;\n  position?: number;\n}\n\nexport interface IStore<T = any> {\n  nodes: INode<T>[];\n  selected: Set<string>;\n  bordered: Set<string>;\n  canvasBackground: ICanvasBackground;\n  canvasSize: ICanvasSize;\n  canvasPosition: ICanvasPosition;\n  refLineState: {\n    [P in IRefLineDirection]: IRefLineState;\n  };\n}\n\nexport type IActionType<T = any> = (state: IStore<T>) => IStore<T>;\n\nexport const DEFAULT_STORE: IStore<any> = {\n  nodes: new Array(500).fill(1).map<INode<any>>((_v, i) => ({\n    id: `${Math.round(Math.random() * Math.pow(10, 8))}`,\n    height: 100,\n    width: 200,\n    left: Math.round(Math.random() * 900),\n    top: Math.round(Math.random() * 500),\n    name: 'test',\n    rotate: 0,\n    locked: false,\n    zIndex: i + 1,\n    borderWidth: 1,\n    borderColor: '#333',\n    borderStyle: 'dashed',\n  })),\n  selected: new Set(),\n  bordered: new Set(),\n  canvasBackground: { backgroundColor: '#ffffff' },\n  canvasPosition: {\n    left: 100,\n    top: 100,\n    scale: 1,\n  },\n  canvasSize: {\n    width: 1366,\n    height: 768,\n  },\n  refLineState: {\n    tx: { state: false },\n    bx: { state: false },\n    ly: { state: false },\n    ry: { state: false },\n    cx: { state: false },\n    cy: { state: false },\n  },\n};\n\nexport interface IWidget<T = any> {\n  type: string;\n  name: string;\n  thumbnail: string;\n  propsComponent: T;\n}\n\nexport interface ITabConfig<T = any> {\n  key: string;\n  title: string;\n  icon: string;\n  content: T;\n}\n\nexport interface IPanel<T = any> {\n  title: string;\n  key: string;\n  content: Type<T> | TemplateRef<T>;\n  show: boolean;\n  x: number;\n  y: number;\n  collapsed?: boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { ComponentStore } from '@ngrx/component-store';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, map, pairwise, startWith } from 'rxjs/operators';\nimport { LayerTreeComponent, PropertyFormComponent, WidgetListComponent } from '../components';\nimport { DEFAULT_STORE, IPanel, IStore } from '../store';\nimport { CeUtilsService } from './utils.service';\n\n@Injectable()\nexport class EditorStore<T = any> extends ComponentStore<IStore<T>> {\n  private _defaultPanels: IPanel<any>[] = [\n    { key: 'LAYERS', title: '图层', content: LayerTreeComponent, show: true, x: 10, y: 60 },\n    { key: 'WIDGET_LIST', title: '组件', content: WidgetListComponent, show: false, x: 50, y: 60 },\n    { key: 'PROPERTIES', title: '属性', content: PropertyFormComponent, show: true, x: window.innerWidth - 350, y: 60 },\n  ];\n  private panels: IPanel[] = [];\n  panels$ = new BehaviorSubject<IPanel[]>([...this._defaultPanels, ...this.panels]);\n\n  constructor(private utils: CeUtilsService) {\n    super(DEFAULT_STORE);\n  }\n\n  initialize(state: IStore<T>) {\n    this.setState(state);\n  }\n\n  _get() {\n    return this.get();\n  }\n\n  dispatch(action: (state: IStore<T>) => IStore<T>) {\n    this.setState(action);\n  }\n\n  selectDifferent<R>(cb: (state: IStore<T>) => R) {\n    return this.select(cb).pipe(\n      startWith(null, cb(this.get())),\n      pairwise<R>(),\n      filter(([prev, present]) => !this.utils.isDeepEqual(prev, present)),\n      map(([, present]) => present)\n    );\n  }\n\n  toJSON() {\n    const state = this.get();\n    return JSON.stringify({\n      canvasPosition: state.canvasPosition,\n      canvasSize: state.canvasSize,\n      canvasBackground: state.canvasBackground,\n      nodes: state.nodes,\n      selected: state.selected,\n      bordered: state.bordered,\n    });\n  }\n\n  addPanels(panels: IPanel[]) {\n    this.panels = [...this.panels, ...panels];\n    this.panels$.next([...this._defaultPanels, ...this.panels]);\n  }\n\n  getPanel(key: string) {\n    return [...this._defaultPanels, ...this.panels].find((panel) => panel.key === key);\n  }\n\n  updatePanelPosition(key: string, [x, y]: [number, number]) {\n    [...this._defaultPanels, ...this.panels].forEach((panel) => {\n      if (panel.key === key) {\n        panel.x = x;\n        panel.y = y;\n      }\n    });\n    this.panels$.next([...this._defaultPanels, ...this.panels]);\n  }\n\n  togglePanelVisible(key: string) {\n    [...this._defaultPanels, ...this.panels].forEach((panel) => {\n      if (panel.key === key) {\n        panel.show = !panel.show;\n      }\n    });\n    this.panels$.next([...this._defaultPanels, ...this.panels]);\n  }\n\n  togglePanelCollapsed(key: string) {\n    [...this._defaultPanels, ...this.panels].forEach((panel) => {\n      if (panel.key === key) {\n        panel.collapsed = !panel.collapsed;\n      }\n    });\n    this.panels$.next([...this._defaultPanels, ...this.panels]);\n  }\n}\n","<div\n  class=\"box-border\"\n  *ngFor=\"let node of borderedNodeList$ | async; trackBy: trackByFn\"\n  [style.left.%]=\"node.left\"\n  [style.top.%]=\"node.top\"\n  [style.width.%]=\"node.width\"\n  [style.height.%]=\"node.height\"\n  [style.transform]=\"getRotate(node.rotate)\"\n></div>\n","import { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EditorStore } from '../../services';\nimport { CeUtilsService } from '../../services/utils.service';\nimport { ICanvasSize, INode } from '../../store';\n\n@Component({\n  selector: 'ce-bordered-area,[ceBorderedArea]',\n  templateUrl: './bordered-area.component.html',\n  styleUrls: ['./bordered-area.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BorderedAreaComponent implements OnInit {\n  public borderedNodeMap = new Map<string, Partial<DOMRect & { rotate: number }>>();\n  public borderedNodeList$: Observable<({ id: string } & Partial<DOMRect & { rotate: number }>)[]>;\n\n  constructor(private store: EditorStore, private utils: CeUtilsService) {}\n\n  ngOnInit(): void {\n    this.borderedNodeList$ = this.store\n      .selectDifferent((state) => ({ bordered: state.bordered, nodes: state.nodes, canvasSize: state.canvasSize }))\n      .pipe(\n        map(({ bordered, nodes, canvasSize }) => {\n          if (!bordered.size) {\n            return [];\n          } else {\n            return this.refreshBorderedList(nodes, bordered, canvasSize);\n          }\n        })\n      );\n  }\n\n  getRotate(rotate: number): string {\n    return `rotate(${rotate}deg)`;\n  }\n\n  trackByFn(...args: [number, { id: string } & Partial<DOMRect & { rotate: number }>]): string {\n    return `${args[1].id}-${args[1].width}-${args[1].height}-${args[1].left}-${args[1].top}-${args[1].rotate}`;\n  }\n\n  refreshBorderedList(nodes: INode[], bordered: Set<string>, canvasSize: ICanvasSize) {\n    return [...bordered]\n      .map((id) => this.utils.getNodeById(id, nodes))\n      .filter((node) => !!node)\n      .map((node) => {\n        {\n          const [, ...parents] = this.utils.getNodeAndParentListById(node.id, nodes);\n          let child = { ...node };\n          while (parents.length) {\n            const parent = parents.shift();\n            child = {\n              ...child,\n              ...this.utils.getChildPositionBaseOnParentCoordinateSystem(parent, parent.rotate ?? 0, child),\n              rotate: child.rotate + parent.rotate,\n            };\n          }\n          return {\n            id: node.id,\n            width: (child.width / canvasSize.width) * 100,\n            height: (child.height / canvasSize.height) * 100,\n            left: (child.left / canvasSize.width) * 100,\n            top: (child.top / canvasSize.height) * 100,\n            rotate: child.rotate,\n          };\n        }\n      });\n  }\n}\n","<ng-container *ngIf=\"node?.children && node?.children.length\">\n  <ce-box-item *ngFor=\"let item of node.children\" [node]=\"item\"></ce-box-item>\n</ng-container>\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { INode } from '../../store';\n\n@Component({\n  selector: 'ce-box-item',\n  templateUrl: 'box-item.component.html',\n  styleUrls: ['box-item.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BoxItemComponent<T = any> implements AfterViewInit {\n  private _node: INode<T>;\n  @Input()\n  get node(): INode<T> {\n    return this._node;\n  }\n  set node(val: INode<T>) {\n    this._node = val;\n    this.generatorStyles();\n  }\n\n  constructor(private renderer: Renderer2, private eleRef: ElementRef<HTMLElement>) {}\n\n  ngAfterViewInit() {\n    this.generatorStyles();\n  }\n\n  private generatorStyles() {\n    if (this.eleRef.nativeElement) {\n      this.renderer.setAttribute(this.eleRef.nativeElement, 'id', `box-item-${this.node.id}`);\n      this.renderer.setStyle(this.eleRef.nativeElement, 'width', `${this.node.width}px`);\n      this.renderer.setStyle(this.eleRef.nativeElement, 'height', `${this.node.height}px`);\n      this.renderer.setStyle(this.eleRef.nativeElement, 'left', `${this.node.left}px`);\n      this.renderer.setStyle(this.eleRef.nativeElement, 'top', `${this.node.top}px`);\n      this.renderer.setStyle(this.eleRef.nativeElement, 'transform', `translate3d(0,0,0) rotate(${this.node.rotate ?? 0}deg)`);\n      this.renderer.setStyle(this.eleRef.nativeElement, 'border-style', this.node.borderStyle);\n      this.renderer.setStyle(this.eleRef.nativeElement, 'border-color', this.node.borderColor);\n      this.renderer.setStyle(this.eleRef.nativeElement, 'border-width', `${this.node.borderWidth}px`);\n      this.renderer.setStyle(this.eleRef.nativeElement, 'z-index', this.node.zIndex);\n      this.renderer.setStyle(this.eleRef.nativeElement, 'background-image', this.node.backgroundImage);\n      this.renderer.setStyle(this.eleRef.nativeElement, 'background-position', this.node.backgroundPosition);\n      this.renderer.setStyle(this.eleRef.nativeElement, 'background-repeat', this.node.backgroundRepeat);\n      this.renderer.setStyle(this.eleRef.nativeElement, 'background-size', this.node.backgroundSize);\n      this.renderer.setStyle(this.eleRef.nativeElement, 'background-color', this.node.backgroundColor);\n    }\n  }\n}\n","<div [style.background-color]=\"backgroundColor$ | async\">\n  <ng-template [ngIf]=\"backgroundImage$ | async\">\n    <img [src]=\"backgroundImage$ | async | nzSanitizer: 'url'\" alt=\"\" />\n  </ng-template>\n</div>\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { EditorStore } from '../../services';\nimport { IStore } from '../../store';\n\n@Component({\n  selector: 'ce-canvas-background,[ceCanvasBackground]',\n  templateUrl: 'canvas-background.component.html',\n  styleUrls: ['canvas-background.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CanvasBackgroundComponent {\n  public backgroundColor$: Observable<string>;\n  public backgroundImage$: Observable<string>;\n  constructor(private store: EditorStore<IStore>) {\n    this.backgroundColor$ = this.store.selectDifferent((state) => state.canvasBackground.backgroundColor);\n    this.backgroundImage$ = this.store.selectDifferent((state) => state.canvasBackground.backgroundImage);\n  }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EditorStore } from '../../services';\nimport { IStore } from '../../store';\n\n@Component({\n  selector: 'ce-canvas-grid',\n  templateUrl: 'canvas-grid.component.html',\n  styleUrls: ['canvas-grid.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CanvasGridComponent {\n  public childDPath$: Observable<string>;\n  public parentDPath$: Observable<string>;\n  public childWidth$: Observable<number>;\n  public parentWidth$: Observable<number>;\n  constructor(private store: EditorStore<IStore>) {\n    const scale$ = this.store.selectDifferent((state) => state.canvasPosition.scale);\n    this.childDPath$ = scale$.pipe(map((scale) => this.getPath(10, scale)));\n    this.parentDPath$ = scale$.pipe(map((scale) => this.getPath(50, scale)));\n    this.childWidth$ = scale$.pipe(map((scale) => 10 * scale));\n    this.parentWidth$ = scale$.pipe(map((scale) => 50 * scale));\n  }\n  getPath(size: number, scale: number): string {\n    return `M ${size * scale || 0} 0 L 0 0 0 ${size * scale || 0}`;\n  }\n}\n","import { IActionType } from '../store';\n\nexport function clearSelected<T = any>(): IActionType<T> {\n  return (state) => ({ ...state, selected: new Set([]) });\n}\n\nexport function addSelectedNodes<T = any>(ids: string[]): IActionType<T> {\n  return (state) => ({ ...state, selected: new Set([...state.selected, ...ids]) });\n}\n\nexport function removeSelectedNodes<T = any>(ids: string[]): IActionType<T> {\n  return (state) => ({ ...state, selected: new Set([...state.selected].filter((id) => !ids.includes(id))) });\n}\n\nexport function setSelectedNodes<T = any>(ids: string[]): IActionType<T> {\n  return (state) => ({ ...state, selected: new Set([...ids]) });\n}\n\nexport function clearBordered<T = any>(): IActionType<T> {\n  return (state) => ({ ...state, bordered: new Set([]) });\n}\n\nexport function addBorderedNodes<T = any>(ids: string[]): IActionType<T> {\n  return (state) => ({ ...state, bordered: new Set([...state.bordered, ...ids]) });\n}\n\nexport function removeBorderedNodes<T = any>(ids: string[]): IActionType<T> {\n  return (state) => ({ ...state, bordered: new Set([...state.bordered].filter((id) => !ids.includes(id))) });\n}\n\nexport function setBorderedNodes<T = any>(ids: string[]): IActionType<T> {\n  return (state) => ({ ...state, bordered: new Set([...ids]) });\n}\n","import { IActionType, ICanvasBackground, ICanvasPosition, ICanvasSize } from '../store';\n\nexport function updateCanvasSize<T = any>(canvasSize: Partial<ICanvasSize>): IActionType<T> {\n  return (state) => ({ ...state, canvasSize: { ...state.canvasSize, ...canvasSize } });\n}\n\nexport function updateCanvasPosition<T = any>(canvasPosition: Partial<ICanvasPosition>): IActionType<T> {\n  return (state) => ({ ...state, canvasPosition: { ...state.canvasPosition, ...canvasPosition } });\n}\n\nexport function updateCanvasBackground<T = any>(canvasBackground: Partial<ICanvasBackground>): IActionType<T> {\n  return (state) => ({ ...state, canvasBackground: { ...state.canvasBackground, ...canvasBackground } });\n}\n","import * as _ from 'lodash';\nimport { CeUtilsService, genNodeId, IDOMRect } from '../services';\nimport { IActionType, INode } from '../store';\n\nexport function lockNodes<T = any>(ids: string[]): IActionType<T> {\n  return (state) => ({ ...state, nodes: state.nodes.map((node) => (ids.includes(node.id) ? { ...node, locked: true } : node)) });\n}\n\nexport function unlockNodes<T = any>(ids: string[]): IActionType<T> {\n  return (state) => ({ ...state, nodes: state.nodes.map((node) => (ids.includes(node.id) ? { ...node, locked: false } : node)) });\n}\n\nexport function addNodes<T = any>(nodes: INode<T>[]): IActionType<T> {\n  return (state) => ({ ...state, nodes: [...state.nodes, ...nodes] });\n}\n\nexport function removeNodes<T = any>(ids: string[]): IActionType<T> {\n  return (state) => {\n    let parent = CeUtilsService.shared.getSameLayerParentByChildren(ids, state.nodes);\n    if (parent === false) {\n      return { ...state };\n    } else if (parent === undefined) {\n      return { ...state, nodes: state.nodes.filter((node) => !ids.includes(node.id)) };\n    } else {\n      let originalParentId = parent.id;\n      let newNodes = state.nodes.filter((node) => !ids.includes(node.id));\n      let prevParent: INode;\n      let prevParentId: string;\n      const parents = CeUtilsService.shared.getNodeAndParentListById(parent.id, _.cloneDeep(state.nodes));\n      while (parents.length) {\n        let parent: INode = parents.shift();\n        let children: INode<T>[];\n        const parentChildren = CeUtilsService.shared.getNodeChildren(parent.id, state.nodes);\n        if (parent.id === originalParentId) {\n          children = parentChildren.filter((child: INode<T>) => !ids.includes(child.id));\n        } else {\n          children = parentChildren\n            .filter((child: INode<T>) => (child.id === prevParentId ? prevParent : child))\n            .filter((child: INode<T>) => !!child);\n        }\n        prevParentId = parent.id;\n        if (children.length > 1) {\n          const rect = CeUtilsService.shared.getOuterBoundingBox(\n            children\n              .map((child) => ({\n                rotate: child.rotate,\n                ...CeUtilsService.shared.getChildPositionBaseOnParentCoordinateSystem(parent as INode, (parent as INode).rotate, child),\n              }))\n              .map((item) => CeUtilsService.shared.getAbsolutePosition(item.cx, item.cy, item.width, item.height, item.rotate))\n          );\n          parent.width = rect.width;\n          parent.height = rect.height;\n          parent.left = rect.left;\n          parent.top = rect.top;\n        } else if (children.length === 1) {\n          const rect = CeUtilsService.shared.getChildPositionBaseOnParentCoordinateSystem(parent, parent.rotate, children[0]);\n          parent = { ...children[0], ...rect, parentId: parent.parentId };\n          newNodes = newNodes.map((node) => (node.id === parent.id ? { ...parent } : node));\n        } else if (children.length === 0) {\n          newNodes = newNodes.filter((node) => node.id !== parent.id);\n          parent = null;\n        }\n        prevParent = parent as INode;\n      }\n      return { ...state, nodes: newNodes };\n    }\n  };\n}\n\nexport function updateNodes<T = any>(nodes: INode<T>[]): IActionType<T> {\n  return (state) => ({ ...state, nodes: state.nodes.map((item) => ({ ...item, ...nodes.find((i) => i.id === item.id) })) });\n}\n\nexport function updateNodesSize<T = any>(nodesSizeMap: Map<string, IDOMRect>): IActionType<T> {\n  return (state) => state;\n}\n\nexport function groupNodes<T = any>(ids: string[]): IActionType<T> {\n  return (state) => {\n    const parent = CeUtilsService.shared.getSameLayerParentByChildren(ids, state.nodes);\n    if (parent === false) {\n      return state;\n    }\n    const nodeMap = new Map<string, INode>();\n    ids.forEach((id) => {\n      const node = state.nodes.find((i) => i.id === id);\n      if (node) {\n        nodeMap.set(id, node);\n      }\n    });\n    const groupRect = CeUtilsService.shared.getOuterBoundingBox(\n      ids\n        .filter((id) => nodeMap.has(id))\n        .map((id) => {\n          const node = nodeMap.get(id);\n          return CeUtilsService.shared.getAbsolutePosition(\n            node.left + node.width / 2,\n            node.top + node.height / 2,\n            node.width,\n            node.height,\n            node.rotate\n          );\n        })\n    );\n    const groupNode: INode = {\n      id: genNodeId(),\n      name: 'Group',\n      ...groupRect,\n      rotate: 0,\n      zIndex: Math.max(...state.nodes.filter((node) => !nodeMap.has(node.id)).map((node) => node.zIndex)) + 1,\n      children: ids\n        .filter((id) => nodeMap.has(id))\n        .map((id) => {\n          const node = nodeMap.get(id);\n          const { bl, br, tl, tr } = CeUtilsService.shared.getAbsolutePosition(\n            node.left + node.width / 2,\n            node.top + node.height / 2,\n            node.width,\n            node.height,\n            node.rotate\n          );\n          return {\n            ...node,\n            ...CeUtilsService.shared.getRelativePosition({\n              bl: [bl[0] - groupRect.left, bl[1] - groupRect.top],\n              br: [br[0] - groupRect.left, br[1] - groupRect.top],\n              tl: [tl[0] - groupRect.left, tl[1] - groupRect.top],\n              tr: [tr[0] - groupRect.left, tr[1] - groupRect.top],\n            }),\n          };\n        }),\n    };\n    return { ...state, nodes: [...state.nodes.filter((node) => !nodeMap.has(node.id)), groupNode] };\n  };\n}\n\nexport function breakNode<T = any>(id: string): IActionType<T> {\n  return (state) => {\n    const [node, ...parents] = CeUtilsService.shared.getNodeAndParentListById(id, _.cloneDeep(state.nodes));\n    const newNodes = node.children.map((child: INode<T>) => {\n      return {\n        ...child,\n        ...CeUtilsService.shared.getChildPositionBaseOnParentCoordinateSystem(node, node.rotate, child),\n        rotate: (child.rotate ?? 0) + (node.rotate ?? 0),\n      };\n    });\n    if (!parents.length) {\n      return { ...state, nodes: [...state.nodes.filter((i) => i.id !== node.id), ...newNodes] };\n    } else {\n      let parent = parents.shift();\n      parent.children = [...parent.children.filter((child: INode<T>) => child.id !== node.id), ...newNodes];\n      while (parents.length) {\n        const nextParent = parents.shift();\n        nextParent.children = nextParent.children.map((child: INode<T>) => (child.id === parent.id ? parent : child));\n        parent = nextParent;\n      }\n      return { ...state, nodes: [...state.nodes.filter((i) => i.id !== parent.id), parent] };\n    }\n  };\n}\n","import { DEFAULT_STORE, IActionType, IRefLineDirection, IRefLineState } from '../store';\n\nexport function updateRefLineState<T = any>(direction: IRefLineDirection, state: IRefLineState): IActionType<T> {\n  return (state) => ({ ...state, refLineState: { ...state.refLineState, [direction]: state } });\n}\n\nexport function resetRefLineState<T = any>(): IActionType<T> {\n  return (state) => ({ ...state, refLineState: DEFAULT_STORE.refLineState });\n}\n\nexport function updateRefLinesState<T = any>(refLineState: { [K in IRefLineDirection]: IRefLineState }): IActionType<T> {\n  return (state) => ({ ...state, refLineState: { ...state.refLineState, ...refLineState } });\n}\n","<svg data-html2canvas-ignore class=\"grid\" width=\"100%\" height=\"100%\">\n  <defs>\n    <pattern id=\"smallGrid\" [attr.width]=\"childWidth$ | async\" [attr.height]=\"childWidth$ | async\" patternUnits=\"userSpaceOnUse\">\n      <path [attr.d]=\"childDPath$ | async\" fill=\"none\" stroke=\"rgba(207, 207, 207, 0.8)\" stroke-width=\"1\"></path>\n    </pattern>\n    <pattern id=\"grid\" [attr.width]=\"parentWidth$ | async\" [attr.height]=\"parentWidth$ | async\" patternUnits=\"userSpaceOnUse\">\n      <rect [attr.width]=\"parentWidth$ | async\" [attr.height]=\"parentWidth$ | async\" fill=\"url(#smallGrid)\"></rect>\n      <path [attr.d]=\"parentDPath$ | async\" fill=\"none\" stroke=\"rgba(186, 186, 186, 1)\" stroke-width=\"1\"></path>\n    </pattern>\n  </defs>\n  <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\"></rect>\n</svg>\n","import { ChangeDetectorRef, Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { fromEvent, Observable, Subscription } from 'rxjs';\nimport { filter, finalize, map, switchMap, takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[ceDraggable]',\n  exportAs: 'ceDraggable',\n})\nexport class DraggableDirective implements OnInit, OnDestroy {\n  @Input()\n  @InputBoolean()\n  public ceDragDisabled = false;\n  @Input()\n  @InputBoolean()\n  public ceUseSpace = false;\n  @Output()\n  public ceOnStart = new EventEmitter<PointerEvent>();\n  @Output()\n  public ceOnMove = new EventEmitter<MouseEvent>();\n  @Output()\n  public ceOnStop = new EventEmitter<PointerEvent>();\n  @Output()\n  public ceOnSpaceKeyDown = new EventEmitter<void>();\n  public spaceKeyDown = false;\n  private subscription = new Subscription();\n  private mouseMove$ = fromEvent<PointerEvent>(window, 'pointermove');\n  private mouseUp$ = fromEvent<PointerEvent>(window, 'pointerup');\n  private mouseDown$: Observable<PointerEvent>;\n  private mouseEnter$: Observable<PointerEvent>;\n  private mouseLeave$: Observable<PointerEvent>;\n  private keyDown$ = fromEvent<KeyboardEvent>(document, 'keydown');\n  private keyUp$ = fromEvent<KeyboardEvent>(document, 'keyup');\n  constructor(private eleRef: ElementRef<HTMLElement>, private cdr: ChangeDetectorRef) {\n    this.mouseDown$ = fromEvent<PointerEvent>(this.eleRef.nativeElement, 'pointerdown').pipe(filter((e) => e.button === 0));\n    this.mouseEnter$ = fromEvent<PointerEvent>(this.eleRef.nativeElement, 'pointerenter');\n    this.mouseLeave$ = fromEvent<PointerEvent>(this.eleRef.nativeElement, 'pointerleave');\n  }\n\n  ngOnInit(): void {\n    this.listenSpaceKeyEvent();\n    this.mouseDown$\n      .pipe(\n        filter(() => !this.ceDragDisabled),\n        filter(() => (this.ceUseSpace ? this.spaceKeyDown : true)),\n        switchMap((startEv) => {\n          this.ceOnStart.emit(startEv);\n          return this.mouseMove$.pipe(takeUntil(this.mouseUp$.pipe(map((stopEv) => this.ceOnStop.emit(stopEv)))));\n        })\n      )\n      .subscribe((moveEv) => this.ceOnMove.emit(moveEv));\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  listenSpaceKeyEvent(): void {\n    this.subscription.add(\n      this.mouseEnter$\n        .pipe(\n          filter(() => !this.ceDragDisabled),\n          filter(() => this.ceUseSpace),\n          switchMap(() =>\n            this.keyDown$.pipe(\n              switchMap((e) => {\n                this.spaceKeyDown = e.key === ' ';\n                this.cdr.detectChanges();\n                if (this.spaceKeyDown) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                }\n                return this.keyUp$;\n              }),\n              map(() => {\n                this.spaceKeyDown = false;\n                this.ceOnStop.emit();\n              }),\n              takeUntil(this.mouseLeave$),\n              finalize(() => {\n                this.spaceKeyDown = false;\n                this.ceOnStop.emit();\n              })\n            )\n          )\n        )\n        .subscribe()\n    );\n  }\n}\n","<ce-box-item\n  *ngFor=\"let node of nodes$ | async; trackBy: nodeListTrackByFn\"\n  ceDraggable\n  [ceDragDisabled]=\"node?.locked\"\n  (ceOnStart)=\"moveStart($event, node)\"\n  (ceOnMove)=\"moving($event)\"\n  (ceOnStop)=\"moveEnd()\"\n  [node]=\"node\"\n  (pointerenter)=\"showBorder(node.id)\"\n  (pointerleave)=\"removeBorder(node.id)\"\n></ce-box-item>\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  addBorderedNodes,\n  addSelectedNodes,\n  clearBordered,\n  clearSelected,\n  removeBorderedNodes,\n  resetRefLineState,\n  updateNodes,\n  updateRefLinesState,\n} from '../../actions';\nimport { EditorStore } from '../../services';\nimport { CeUtilsService, IDOMRect } from '../../services/utils.service';\nimport { ICanvasPosition, INode, IRefLineDirection, IRefLineState, IStore } from '../../store';\n\nconst REF_LINE_DIRECTION_COMPARE_MAP: {\n  [P in IRefLineDirection]: {\n    baseKey: keyof IDOMRect;\n    referKey: keyof IDOMRect;\n    baseValue: (baseRect: IDOMRect, referRect: IDOMRect) => { key: keyof IDOMRect; value: number };\n  }[];\n} = {\n  tx: [\n    {\n      baseKey: 'top',\n      referKey: 'top',\n      baseValue: (baseRect, referRect) => ({ key: 'top', value: referRect.top }),\n    },\n    {\n      baseKey: 'top',\n      referKey: 'cy',\n      baseValue: (baseRect, referRect) => ({ key: 'top', value: referRect.cy }),\n    },\n    {\n      baseKey: 'top',\n      referKey: 'bottom',\n      baseValue: (baseRect, referRect) => ({ key: 'top', value: referRect.bottom }),\n    },\n  ],\n  bx: [\n    {\n      baseKey: 'bottom',\n      referKey: 'top',\n      baseValue: (baseRect, referRect) => ({ key: 'top', value: referRect.top - baseRect.height }),\n    },\n    {\n      baseKey: 'bottom',\n      referKey: 'cy',\n      baseValue: (baseRect, referRect) => ({ key: 'top', value: referRect.cy - baseRect.height }),\n    },\n    {\n      baseKey: 'bottom',\n      referKey: 'bottom',\n      baseValue: (baseRect, referRect) => ({ key: 'top', value: referRect.bottom - baseRect.height }),\n    },\n  ],\n  ly: [\n    {\n      baseKey: 'left',\n      referKey: 'left',\n      baseValue: (baseRect, referRect) => ({ key: 'left', value: referRect.left }),\n    },\n    {\n      baseKey: 'left',\n      referKey: 'cx',\n      baseValue: (baseRect, referRect) => ({ key: 'left', value: referRect.cx }),\n    },\n    {\n      baseKey: 'left',\n      referKey: 'right',\n      baseValue: (baseRect, referRect) => ({ key: 'left', value: referRect.right }),\n    },\n  ],\n  ry: [\n    {\n      baseKey: 'right',\n      referKey: 'left',\n      baseValue: (baseRect, referRect) => ({ key: 'left', value: referRect.left - baseRect.width }),\n    },\n    {\n      baseKey: 'right',\n      referKey: 'cx',\n      baseValue: (baseRect, referRect) => ({ key: 'left', value: referRect.cx - baseRect.width }),\n    },\n    {\n      baseKey: 'right',\n      referKey: 'right',\n      baseValue: (baseRect, referRect) => ({ key: 'left', value: referRect.right - baseRect.width }),\n    },\n  ],\n  cx: [\n    {\n      baseKey: 'cy',\n      referKey: 'top',\n      baseValue: (baseRect, referRect) => ({ key: 'top', value: referRect.top - baseRect.height / 2 }),\n    },\n    {\n      baseKey: 'cy',\n      referKey: 'cy',\n      baseValue: (baseRect, referRect) => ({ key: 'top', value: referRect.cy - baseRect.height / 2 }),\n    },\n    {\n      baseKey: 'cy',\n      referKey: 'bottom',\n      baseValue: (baseRect, referRect) => ({ key: 'top', value: referRect.bottom - baseRect.height / 2 }),\n    },\n  ],\n  cy: [\n    {\n      baseKey: 'cx',\n      referKey: 'left',\n      baseValue: (baseRect, referRect) => ({ key: 'left', value: referRect.left - baseRect.width / 2 }),\n    },\n    {\n      baseKey: 'cx',\n      referKey: 'cx',\n      baseValue: (baseRect, referRect) => ({ key: 'left', value: referRect.cx - baseRect.width / 2 }),\n    },\n    {\n      baseKey: 'cx',\n      referKey: 'right',\n      baseValue: (baseRect, referRect) => ({ key: 'left', value: referRect.right - baseRect.width / 2 }),\n    },\n  ],\n};\n@Component({\n  selector: 'ce-canvas',\n  templateUrl: 'canvas.component.html',\n  styleUrls: ['canvas.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CanvasComponent {\n  public nodes$: Observable<INode[]>;\n  public nodes: INode[];\n  private selected: Set<string>;\n  private canvasPosition: ICanvasPosition;\n  private pointerSnapshot: [number, number] = null;\n  private nodesSnapshot: Map<string, INode> = new Map();\n  private outerBoxSnapshot: IDOMRect;\n  private unselectedNodes: INode[];\n  private gap = 5;\n\n  constructor(private store: EditorStore<IStore>, private utils: CeUtilsService) {\n    this.nodes$ = this.store.selectDifferent((state) => state.nodes);\n    this.store.select((state) => state.nodes).subscribe((nodes) => (this.nodes = nodes));\n    this.store.select((state) => state.selected).subscribe((state) => (this.selected = state));\n    this.store.select((state) => state.canvasPosition).subscribe((state) => (this.canvasPosition = state));\n  }\n\n  nodeListTrackByFn(i: number, node: INode): string {\n    return node.id;\n  }\n\n  moveStart(ev: PointerEvent, node: INode): void {\n    ev.preventDefault();\n    ev.stopPropagation();\n    this.nodesSnapshot.clear();\n    this.pointerSnapshot = [ev.clientX, ev.clientY];\n    let selected: string[] = [...this.selected];\n    if (!this.selected.has(node.id)) {\n      this.store.dispatch(clearBordered());\n      this.store.dispatch(clearSelected());\n      this.store.dispatch(addSelectedNodes([node.id]));\n      selected = [node.id];\n    }\n\n    this.outerBoxSnapshot = this.utils.getOuterBoundingBox(\n      selected\n        .map((id) => this.utils.getNodeById(id, this.nodes))\n        .map((item) => this.utils.getAbsolutePosition(item.left + item.width / 2, item.top + item.height / 2, item.width, item.height, item.rotate))\n    );\n    this.unselectedNodes = this.nodes.filter((item) => !selected.includes(item.id));\n\n    selected.forEach((id) => {\n      const item = this.nodes.find((n) => n.id === id);\n      this.nodesSnapshot.set(item.id, {\n        ...item,\n        cxPercent: (item.left + item.width / 2 - this.outerBoxSnapshot.left) / this.outerBoxSnapshot.width,\n        cyPercent: (item.top + item.height / 2 - this.outerBoxSnapshot.top) / this.outerBoxSnapshot.height,\n      });\n    });\n  }\n\n  moving(ev: PointerEvent): void {\n    if (this.pointerSnapshot) {\n      this.store.dispatch(resetRefLineState());\n      const { scale } = this.canvasPosition;\n      const [x, y] = this.pointerSnapshot;\n      const [mx, my] = [(ev.clientX - x) / scale, (ev.clientY - y) / scale];\n      const baseRect: IDOMRect = {\n        ...this.outerBoxSnapshot,\n        left: this.outerBoxSnapshot.left + mx,\n        top: this.outerBoxSnapshot.top + my,\n        right: this.outerBoxSnapshot.right + mx,\n        bottom: this.outerBoxSnapshot.bottom + my,\n        cx: this.outerBoxSnapshot.cx + mx,\n        cy: this.outerBoxSnapshot.cy + my,\n      };\n      const refLinesState: { [P in IRefLineDirection]: IRefLineState } = {\n        bx: null,\n        tx: null,\n        ly: null,\n        ry: null,\n        cx: null,\n        cy: null,\n      };\n      this.unselectedNodes.forEach((node) => {\n        const nodeRect = this.utils.getBoundingBox(node.width, node.height, node.left, node.top, node.rotate);\n        ['tx', 'bx', 'ly', 'ry', 'cx', 'cy'].forEach((direction: IRefLineDirection) => {\n          const result = getRefLineStateByDirection(direction, baseRect, nodeRect, this.gap / scale);\n          if (result) {\n            const { state, position, base } = result;\n            if (state) {\n              refLinesState[direction] = { state, position };\n              baseRect[base.key] = base.value;\n            }\n          }\n        });\n      });\n      const newNodes: INode[] = [];\n      this.nodesSnapshot.forEach((node) => {\n        const { cxPercent, cyPercent, width, height, nodeRect, ...properties } = node;\n        newNodes.push({\n          ...properties,\n          width,\n          height,\n          left: cxPercent * baseRect.width + baseRect.left - width / 2,\n          top: cyPercent * baseRect.height + baseRect.top - height / 2,\n        });\n      });\n\n      this.store.dispatch(updateRefLinesState(refLinesState));\n      this.store.dispatch(updateNodes(newNodes));\n    }\n  }\n\n  moveEnd(): void {\n    this.pointerSnapshot = null;\n    this.store.dispatch(resetRefLineState());\n    this.nodesSnapshot.clear();\n  }\n\n  showBorder(id: string): void {\n    this.store.dispatch(addBorderedNodes([id]));\n  }\n\n  removeBorder(id: string): void {\n    if (!this.selected.has(id)) {\n      this.store.dispatch(removeBorderedNodes([id]));\n    }\n  }\n}\n\nfunction getRefLineStateByDirection(\n  direction: IRefLineDirection,\n  baseRect: IDOMRect,\n  referRect: IDOMRect,\n  gap: number\n): IRefLineState & { base: { key: keyof IDOMRect; value: number } } {\n  return REF_LINE_DIRECTION_COMPARE_MAP[direction]\n    .map(({ baseKey, referKey, baseValue }) => ({\n      state: Math.abs(baseRect[baseKey] - referRect[referKey]) < gap,\n      position: referRect[referKey],\n      base: baseValue(baseRect, referRect),\n    }))\n    .find((item) => item.state);\n}\n","<nz-tree\n  #layerTree\n  nzBlockNode\n  nzMultiple\n  [nzData]=\"treeNodes$ | async\"\n  [nzSelectedKeys]=\"selectedKeys$ | async\"\n  [nzTreeTemplate]=\"nzTreeTemplate\"\n  [nzExpandedIcon]=\"multiExpandedIconTpl\"\n  (nzClick)=\"clickNode($event)\"\n>\n  <ng-template #multiExpandedIconTpl let-node let-origin=\"origin\">\n    <i *ngIf=\"!node.isLeaf\" nz-icon [nzType]=\"node.isExpanded ? 'folder-open' : 'folder'\" class=\"ant-tree-switcher-line-icon\"></i>\n  </ng-template>\n  <ng-template #nzTreeTemplate let-node=\"origin\">\n    <div\n      class=\"layer\"\n      [class.locked]=\"node.locked\"\n      (contextmenu)=\"contextMenu($event, menu, node)\"\n      (pointerenter)=\"showBordered(node.id)\"\n      (pointerleave)=\"clearBordered(node.id)\"\n    >\n      <span>{{ node.title }}</span>\n    </div>\n    <nz-dropdown-menu #menu=\"nzDropdownMenu\">\n      <ul nz-menu>\n        <li *ngIf=\"!node.locked\" nz-menu-item class=\"action-item\" (click)=\"toggleNodesLockState(layerTree.nzSelectedKeys, true)\">\n          <i nz-icon nzType=\"lock\"></i>\n          <span>锁定</span>\n        </li>\n        <li *ngIf=\"node.locked\" nz-menu-item class=\"action-item\" (click)=\"toggleNodesLockState(layerTree.nzSelectedKeys, false)\">\n          <i nz-icon nzType=\"unlock\"></i>\n          <span>解锁</span>\n        </li>\n        <li nz-menu-item class=\"action-item\" (click)=\"deleteNodes(layerTree.nzSelectedKeys)\">\n          <i nz-icon nzType=\"delete\"></i>\n          <span>删除</span>\n        </li>\n        <li *ngIf=\"groupStatus$ | async\" nz-menu-item class=\"action-item\" (click)=\"group(layerTree.nzSelectedKeys)\">\n          <i nz-icon nzIconfont=\"icon-group\"></i>\n          <span>组合</span>\n          <span class=\"shortcuts\"> ctrl+shift+G </span>\n        </li>\n        <li *ngIf=\"selected.size === 1 && node.children && node.children.length\" nz-menu-item (click)=\"breakNode(node.id)\" class=\"action-item\">\n          <i nz-icon nzIconfont=\"icon-break\"></i>\n          <span>打散</span>\n          <span class=\"shortcuts\"> ctrl+shift+B </span>\n        </li>\n      </ul>\n    </nz-dropdown-menu>\n  </ng-template>\n</nz-tree>\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NzContextMenuService, NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown';\nimport { NzFormatEmitEvent, NzTreeComponent, NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/tree';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport {\n  addBorderedNodes,\n  breakNode,\n  clearBordered,\n  clearSelected,\n  groupNodes,\n  lockNodes,\n  removeBorderedNodes,\n  removeNodes,\n  setBorderedNodes,\n  setSelectedNodes,\n  unlockNodes,\n} from '../../actions';\nimport { EditorStore } from '../../services';\nimport { CeUtilsService } from '../../services/utils.service';\nimport { INode, IStore } from '../../store';\n\n@Component({\n  selector: 'ce-layer-tree',\n  exportAs: 'ceLayerTree',\n  templateUrl: 'layer-tree.component.html',\n  styleUrls: ['layer-tree.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayerTreeComponent {\n  public treeNodes$: Observable<NzTreeNodeOptions[]>;\n  public selected: Set<string>;\n  public selectedKeys$: Observable<string[]>;\n  @ViewChild('layerTree', { read: NzTreeComponent })\n  public layerTree: NzTreeComponent;\n  private parentKey: string;\n  public groupStatus$: Observable<boolean>;\n\n  constructor(\n    public eleRef: ElementRef<HTMLElement>,\n    private store: EditorStore<IStore>,\n    private utils: CeUtilsService,\n    private contextMenuSrv: NzContextMenuService\n  ) {\n    this.treeNodes$ = this.store\n      .selectDifferent((state) => state.nodes)\n      .pipe(map((nodes) => this.transferNodesToNzNodes(this.utils.sortNodeListByIndex(this.utils.transferNodesListToNodesTree(nodes)))));\n    this.selectedKeys$ = this.store.selectDifferent((state) => state.selected).pipe(map((selected) => [...selected]));\n    this.groupStatus$ = this.store\n      .selectDifferent((state) => state.selected)\n      .pipe(\n        filter(() => !!this.layerTree),\n        map((selected) =>\n          selected.size > 1\n            ? !![...selected].find((id) => {\n                const node = this.layerTree?.getSelectedNodeList().find((item) => item.key === id);\n                return node && node.parentNode;\n              })\n            : false\n        )\n      );\n    this.store\n      .selectDifferent((state) => state.selected)\n      .subscribe((selected) => {\n        this.selected = selected;\n      });\n  }\n\n  clearBordered(id: string): void {\n    if (!this.selected.has(id)) {\n      this.store.dispatch(removeBorderedNodes([id]));\n    }\n  }\n\n  showBordered(id: string): void {\n    this.store.dispatch(addBorderedNodes([id]));\n  }\n\n  layerTrackByFn(index: number, node: INode): string {\n    return `box-item-${node.id}-${node.zIndex}`;\n  }\n\n  transferNodesToNzNodes(nodes: INode[]): NzTreeNodeOptions[] {\n    return nodes.map((node) => {\n      return {\n        ...node,\n        children: node.children && this.transferNodesToNzNodes(node.children),\n        title: node.name,\n        key: node.id,\n        isLeaf: !node.children?.length,\n      };\n    });\n  }\n\n  contextMenu(event: MouseEvent, menu: NzDropdownMenuComponent, node: NzTreeNode): void {\n    if (!this.selected.has(node.key)) {\n      this.store.dispatch(setSelectedNodes([node.key]));\n    }\n    this.contextMenuSrv.create(event, menu);\n  }\n\n  getParentKey(parentNode?: NzTreeNode): string {\n    return parentNode?.key ?? 'root';\n  }\n\n  multipleSelected(event: NzFormatEmitEvent): void {\n    if (!this.parentKey) {\n      this.parentKey = this.getParentKey(event.node.parentNode);\n    }\n    const ids = event.selectedKeys.filter((node) => this.getParentKey(node.parentNode) === this.parentKey).map((node) => node.key);\n    this.store.dispatch(setSelectedNodes(ids));\n    this.store.dispatch(setBorderedNodes(ids));\n  }\n\n  clickNode(event: NzFormatEmitEvent): void {\n    if (event.node) {\n      if (/Win|Linux/.test(navigator.platform)) {\n        if (event.event.ctrlKey) {\n          this.multipleSelected(event);\n        } else {\n          this.parentKey = this.getParentKey(event.node.parentNode);\n          this.store.dispatch(setSelectedNodes([event.node.key]));\n          this.store.dispatch(setBorderedNodes([event.node.key]));\n        }\n      }\n      if (/Mac/.test(navigator.platform)) {\n        if (event.event.metaKey) {\n          this.multipleSelected(event);\n        } else {\n          this.parentKey = this.getParentKey(event.node.parentNode);\n          this.store.dispatch(setSelectedNodes([event.node.key]));\n          this.store.dispatch(setBorderedNodes([event.node.key]));\n        }\n      }\n    }\n  }\n\n  group(ids: string[]): void {\n    this.store.dispatch(groupNodes(ids));\n  }\n\n  breakNode(id: string): void {\n    this.store.dispatch(clearSelected());\n    this.store.dispatch(clearBordered());\n    this.store.dispatch(breakNode(id));\n  }\n\n  deleteNodes(ids: string[]): void {\n    this.store.dispatch(clearSelected());\n    this.store.dispatch(clearBordered());\n    this.store.dispatch(removeNodes(ids));\n  }\n\n  toggleNodesLockState(ids: string[], state: boolean) {\n    if (state) {\n      this.store.dispatch(lockNodes(ids));\n    } else {\n      this.store.dispatch(unlockNodes(ids));\n    }\n  }\n}\n","<nz-card\n  nzSize=\"small\"\n  [nzTitle]=\"cardTitle\"\n  [nzExtra]=\"cardExtra\"\n  cdkDrag\n  [cdkDragFreeDragPosition]=\"panel\"\n  (cdkDragEnded)=\"updatePosition($event)\"\n  [class.collapsed]=\"panel?.collapsed\"\n>\n  <ng-template #cardTitle>\n    <div cdkDragHandle class=\"d-flex align-items-center\">{{ panel?.title }}</div>\n  </ng-template>\n  <ng-container *ngIf=\"utils.isTemplateType(panel.content)\">\n    <ng-container *ngTemplateOutlet=\"panel.content\"></ng-container>\n  </ng-container>\n  <ng-container *ngIf=\"!utils.isTemplateType(panel.content)\">\n    <ng-container *ngComponentOutlet=\"panel.content\"></ng-container>\n  </ng-container>\n</nz-card>\n\n<ng-template #cardExtra>\n  <button nz-button nzSize=\"small\" nzType=\"link\" (click)=\"toggleCollapsed()\" class=\"collapse-icon\">\n    <i nz-icon nzType=\"caret-down\"></i>\n  </button>\n  <button nz-button nzSize=\"small\" nzType=\"link\" (click)=\"close()\">\n    <i nz-icon nzType=\"close\"></i>\n  </button>\n</ng-template>\n","import { CdkDragEnd } from '@angular/cdk/drag-drop';\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { CeUtilsService, EditorStore } from '../../services';\nimport { IPanel } from '../../store';\n\n@Component({\n  selector: 'ce-panel,[cePanel]',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PanelComponent<T> {\n  private _panel: IPanel<T>;\n\n  @Input()\n  set panel(val: IPanel<T>) {\n    this._panel = val;\n  }\n  get panel(): IPanel<T> {\n    return this._panel;\n  }\n  constructor(public utils: CeUtilsService, public store: EditorStore) {}\n\n  updatePosition(event: CdkDragEnd) {\n    this.store.updatePanelPosition(this.panel.key, [this.panel.x + event.distance.x, this.panel.y + event.distance.y]);\n  }\n\n  toggleCollapsed() {\n    this.store.togglePanelCollapsed(this.panel.key);\n  }\n\n  close() {\n    this.store.togglePanelVisible(this.panel.key);\n  }\n}\n","<div>\n  <h4>画布尺寸</h4>\n  <form nz-form nzLayout=\"inline\" [formGroup]=\"canvasSizeFormGroup\">\n    <nz-row nzGutter=\"8\">\n      <nz-col nzSpan=\"12\">\n        <nz-form-item>\n          <nz-form-label>\n            <i nz-icon nzIconfont=\"icon-kuandu\"></i>\n          </nz-form-label>\n          <nz-form-control>\n            <nz-input-number nzSize=\"small\" formControlName=\"width\"></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n      </nz-col>\n      <nz-col nzSpan=\"12\">\n        <nz-form-item>\n          <nz-form-label>\n            <i nz-icon nzIconfont=\"icon-gaodu\"></i>\n          </nz-form-label>\n          <nz-form-control>\n            <nz-input-number nzSize=\"small\" formControlName=\"height\"></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n      </nz-col>\n    </nz-row>\n  </form>\n</div>\n<div class=\"mt-2\">\n  <h4>画布位置</h4>\n  <form nz-form nzLayout=\"inline\" [formGroup]=\"canvasPositionFormGroup\">\n    <nz-row nzGutter=\"8\">\n      <nz-col nzSpan=\"12\">\n        <nz-form-item>\n          <nz-form-label>\n            <i nz-icon nzIconfont=\"icon-left\"></i>\n          </nz-form-label>\n          <nz-form-control>\n            <nz-input-number nzSize=\"small\" formControlName=\"left\"></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n      </nz-col>\n      <nz-col nzSpan=\"12\">\n        <nz-form-item>\n          <nz-form-label>\n            <i nz-icon nzIconfont=\"icon-top\"></i>\n          </nz-form-label>\n          <nz-form-control>\n            <nz-input-number nzSize=\"small\" formControlName=\"top\"></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n      </nz-col>\n      <nz-col nzSpan=\"12\">\n        <nz-form-item>\n          <nz-form-label>\n            <i nz-icon nzIconfont=\"icon-scale\"></i>\n          </nz-form-label>\n          <nz-form-control>\n            <nz-input-number nzSize=\"small\" formControlName=\"scale\"></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n      </nz-col>\n    </nz-row>\n  </form>\n</div>\n<div class=\"mt-2\">\n  <h4>画布背景</h4>\n  <form nz-form nzLayout=\"inline\" [formGroup]=\"canvasBackgroundFormGroup\">\n    <nz-row nzGutter=\"8\">\n      <nz-col nzSpan=\"12\">\n        <nz-form-item>\n          <nz-form-label>\n            <i nz-icon nzIconfont=\"icon-color\"></i>\n          </nz-form-label>\n          <nz-form-control>\n            <input type=\"color\" nz-input nzSize=\"small\" formControlName=\"backgroundColor\" />\n          </nz-form-control>\n        </nz-form-item>\n      </nz-col>\n      <nz-col nzSpan=\"12\">\n        <nz-form-item>\n          <nz-form-label>\n            <i nz-icon nzIconfont=\"icon-image\"></i>\n          </nz-form-label>\n          <nz-form-control>\n            <input type=\"text\" nz-input nzSize=\"small\" formControlName=\"backgroundImage\" />\n          </nz-form-control>\n        </nz-form-item>\n      </nz-col>\n    </nz-row>\n  </form>\n</div>\n<h5 class=\"mt-1\">背景预览</h5>\n<div>\n  <img\n    [style.max-width.%]=\"100\"\n    *ngIf=\"canvasBackgroundFormGroup.controls['backgroundImage'].value\"\n    [src]=\"canvasBackgroundFormGroup.controls['backgroundImage'].value | nzSanitizer: 'url'\"\n  />\n</div>\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { updateCanvasBackground, updateCanvasPosition, updateCanvasSize } from '../../../../actions';\nimport { EditorStore } from '../../../../services/store.service';\n\n@Component({\n  selector: 'ce-canvas-forms,[ceCanvasForms]',\n  templateUrl: './canvas-forms.component.html',\n  styleUrls: ['./canvas-forms.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CanvasFormsComponent implements OnInit, OnDestroy {\n  public canvasSizeFormGroup: FormGroup;\n  public canvasPositionFormGroup: FormGroup;\n  public canvasBackgroundFormGroup: FormGroup;\n  private subscription = new Subscription();\n  constructor(public fb: FormBuilder, public store: EditorStore) {\n    this.canvasSizeFormGroup = this.fb.group({\n      width: [0, [Validators.required, Validators.min(0)]],\n      height: [0, [Validators.required, Validators.min(0)]],\n    });\n    this.canvasPositionFormGroup = this.fb.group({\n      left: [0, [Validators.required]],\n      top: [0, [Validators.required]],\n      scale: [1, [Validators.min(0.01), Validators.required]],\n    });\n    this.canvasBackgroundFormGroup = this.fb.group({\n      backgroundColor: ['#ffffff'],\n      backgroundImage: [null],\n    });\n    this.subscription.add(\n      this.store\n        .selectDifferent((state) => state.canvasSize)\n        .subscribe((state) => {\n          this.canvasSizeFormGroup.patchValue(state, { emitEvent: false });\n        })\n    );\n    this.subscription.add(\n      this.store\n        .selectDifferent((state) => state.canvasPosition)\n        .subscribe((state) => {\n          this.canvasPositionFormGroup.patchValue(\n            { left: Math.round(state.left), top: Math.round(state.top), scale: state.scale?.toFixed(2) },\n            { emitEvent: false }\n          );\n        })\n    );\n    this.subscription.add(\n      this.store\n        .selectDifferent((state) => state.canvasBackground)\n        .subscribe((state) => {\n          this.canvasBackgroundFormGroup.patchValue(state, { emitEvent: false });\n        })\n    );\n  }\n\n  ngOnInit(): void {\n    this.canvasSizeFormGroup.valueChanges.subscribe((value) => {\n      this.store.dispatch(updateCanvasSize(value));\n    });\n    this.canvasPositionFormGroup.valueChanges.subscribe((value) => {\n      this.store.dispatch(updateCanvasPosition(value));\n    });\n    this.canvasBackgroundFormGroup.valueChanges.subscribe((value) => {\n      console.log(value);\n      this.store.dispatch(updateCanvasBackground(value));\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<nz-collapse [nzBordered]=\"false\" nzGhost nzAccordion nzSize=\"small\">\n  <nz-collapse-panel nzHeader=\"外包围盒属性\" nzActive>\n    <div>\n      <h5>尺寸</h5>\n      <form nz-form nzLayout=\"inline\" [formGroup]=\"boundingFormGroup\">\n        <nz-row nzGutter=\"8\">\n          <nz-col nzSpan=\"12\">\n            <nz-form-item>\n              <nz-form-label>\n                <i nz-icon nzIconfont=\"icon-kuandu\"></i>\n              </nz-form-label>\n              <nz-form-control>\n                <nz-input-number nzSize=\"small\" formControlName=\"width\"></nz-input-number>\n              </nz-form-control>\n            </nz-form-item>\n          </nz-col>\n          <nz-col nzSpan=\"12\">\n            <nz-form-item>\n              <nz-form-label>\n                <i nz-icon nzIconfont=\"icon-gaodu\"></i>\n              </nz-form-label>\n              <nz-form-control>\n                <nz-input-number nzSize=\"small\" formControlName=\"height\"></nz-input-number>\n              </nz-form-control>\n            </nz-form-item>\n          </nz-col>\n        </nz-row>\n      </form>\n      <h5>位置</h5>\n      <form nz-form nzLayout=\"inline\" [formGroup]=\"boundingFormGroup\">\n        <nz-row nzGutter=\"8\">\n          <nz-col nzSpan=\"12\">\n            <nz-form-item>\n              <nz-form-label>\n                <i nz-icon nzIconfont=\"icon-left\"></i>\n              </nz-form-label>\n              <nz-form-control>\n                <nz-input-number nzSize=\"small\" formControlName=\"left\"></nz-input-number>\n              </nz-form-control>\n            </nz-form-item>\n          </nz-col>\n          <nz-col nzSpan=\"12\">\n            <nz-form-item>\n              <nz-form-label>\n                <i nz-icon nzIconfont=\"icon-top\"></i>\n              </nz-form-label>\n              <nz-form-control>\n                <nz-input-number nzSize=\"small\" formControlName=\"top\"></nz-input-number>\n              </nz-form-control>\n            </nz-form-item>\n          </nz-col>\n          <nz-col nzSpan=\"12\">\n            <nz-form-item>\n              <nz-form-label>\n                <i nz-icon nzType=\"rotate-right\"> </i>\n              </nz-form-label>\n              <nz-form-control>\n                <nz-input-number nzSize=\"small\" formControlName=\"rotate\"></nz-input-number>\n              </nz-form-control>\n            </nz-form-item>\n          </nz-col>\n          <nz-col nzSpan=\"12\">\n            <nz-form-item>\n              <nz-form-label>\n                <i nz-icon nzType=\"lock\"> </i>\n              </nz-form-label>\n              <nz-form-control>\n                <nz-switch formControlName=\"locked\"></nz-switch>\n              </nz-form-control>\n            </nz-form-item>\n          </nz-col>\n        </nz-row>\n      </form>\n      <h5>边框</h5>\n      <form nz-form nzLayout=\"inline\" [formGroup]=\"boundingFormGroup\">\n        <nz-row nzGutter=\"8\">\n          <nz-col nzSpan=\"24\">\n            <nz-form-item>\n              <nz-form-label>\n                <i nz-icon nzType=\"border-outer\"></i>\n              </nz-form-label>\n              <nz-form-control>\n                <ng-template #borderStyleTpl let-selected>\n                  <div class=\"d-flex align-items-center h-100\" [style.width.px]=\"40\">\n                    <ng-container [ngSwitch]=\"selected.nzValue\">\n                      <ng-container *ngSwitchCase=\"'none'\">\n                        <span>none</span>\n                      </ng-container>\n                      <ng-container *ngSwitchCase=\"'dashed'\">\n                        <svg class=\"svg-icon\" viewBox=\"0 0 40 1\">\n                          <path\n                            d=\"M0 1h5V0H0v1zm9 0h5V0H9v1zm10 0h5V0h-5v1zm9 0h5V0h-5v1zm10 0h5V0h-5v1zm9 0h5V0h-5v1zm9 0h5V0h-5v1zm10 0h5V0h-5v1zm9 0h5V0h-5v1z\"\n                          ></path>\n                        </svg>\n                      </ng-container>\n                      <ng-container *ngSwitchCase=\"'solid'\">\n                        <svg class=\"svg-icon\" viewBox=\"0 0 40 1\">\n                          <path d=\"M0 0h80v1H0z\"></path>\n                        </svg>\n                      </ng-container>\n                      <ng-container *ngSwitchCase=\"'dotted'\">\n                        <svg class=\"svg-icon\" viewBox=\"0 0 40 1\">\n                          <path\n                            d=\"M0 1h1V0H0v1zm4 0h1V0H4v1zm4 0h1V0H8v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1zm4 0h1V0h-1v1z\"\n                          ></path>\n                        </svg>\n                      </ng-container>\n                    </ng-container>\n                  </div>\n                </ng-template>\n                <nz-select nzSize=\"small\" formControlName=\"borderStyle\" [nzCustomTemplate]=\"borderStyleTpl\">\n                  <nz-option nzValue=\"none\" nzLabel=\"none\">\n                    <ng-container *ngTemplateOutlet=\"borderStyleTpl; context: { $implicit: { nzValue: 'none' } }\"></ng-container>\n                  </nz-option>\n                  <nz-option nzValue=\"dashed\" nzLabel=\"dashed\" nzCustomContent>\n                    <ng-container *ngTemplateOutlet=\"borderStyleTpl; context: { $implicit: { nzValue: 'dashed' } }\"></ng-container>\n                  </nz-option>\n                  <nz-option nzValue=\"solid\" nzLabel=\"solid\" nzCustomContent>\n                    <ng-container *ngTemplateOutlet=\"borderStyleTpl; context: { $implicit: { nzValue: 'solid' } }\"></ng-container>\n                  </nz-option>\n                  <nz-option nzValue=\"dotted\" nzLabel=\"dotted\" nzCustomContent>\n                    <ng-container *ngTemplateOutlet=\"borderStyleTpl; context: { $implicit: { nzValue: 'dotted' } }\"></ng-container>\n                  </nz-option>\n                </nz-select>\n              </nz-form-control>\n            </nz-form-item>\n          </nz-col>\n        </nz-row>\n      </form>\n    </div>\n  </nz-collapse-panel>\n  <nz-collapse-panel nzHeader=\"组件属性\">\n    <ng-template #container></ng-template>\n  </nz-collapse-panel>\n</nz-collapse>\n","import { Component, ComponentFactoryResolver, OnInit, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { updateNodes } from '../../../../actions/nodes.actions';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { EditorStore } from '../../../../services/store.service';\n\n@Component({\n  selector: 'ce-widget-form,[ceWidgetForm]',\n  templateUrl: './widget-form.component.html',\n  styleUrls: ['./widget-form.component.less'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class WidgetFormComponent implements OnInit {\n  @ViewChild('container')\n  propsFormContainer: TemplateRef<any>;\n  boundingFormGroup: FormGroup;\n  constructor(private fb: FormBuilder, private cfr: ComponentFactoryResolver, private store: EditorStore) {\n    this.boundingFormGroup = this.fb.group({\n      id: [, [Validators.required]],\n      name: [],\n      width: [, [Validators.required]],\n      height: [, [Validators.required]],\n      left: [, [Validators.required]],\n      top: [, [Validators.required]],\n      locked: [],\n      rotate: [, [Validators.required]],\n      zIndex: [, [Validators.required]],\n      borderStyle: [],\n      borderWidth: [],\n      borderColor: [],\n      borderRadius: [],\n      backgroundColor: [],\n      backgroundImage: [],\n      backgroundRepeat: [],\n      backgroundPosition: [],\n      backgroundSize: [],\n    });\n  }\n\n  ngOnInit(): void {\n    this.store\n      .select((state) => state.selected)\n      .pipe(\n        filter((selected) => selected.size === 1),\n        map((selected) => [...selected][0]),\n        switchMap((id) => this.store.select((state) => state.nodes.find((item) => item.id === id))),\n        filter((node) => !!node)\n      )\n      .subscribe((node) => {\n        this.boundingFormGroup.patchValue(\n          {\n            ...node,\n            width: Math.round(node.width),\n            height: Math.round(node.height),\n            left: Math.round(node.left),\n            top: Math.round(node.top),\n          },\n          { emitEvent: false }\n        );\n      });\n    this.boundingFormGroup.valueChanges.subscribe((values) => {\n      this.store.dispatch(updateNodes([values]));\n    });\n  }\n}\n","<ng-container *ngComponentOutlet=\"formComponent$ | async\"></ng-container>\n","import { ChangeDetectionStrategy, Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EditorStore } from '../../services';\nimport { CanvasFormsComponent } from './forms/canvas-forms/canvas-forms.component';\nimport { WidgetFormComponent } from './forms/widget-form/widget-form.component';\n\n@Component({\n  selector: 'ce-property-form,[cePropertyForm]',\n  templateUrl: './property-form.component.html',\n  styleUrls: ['./property-form.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PropertyFormComponent implements OnInit {\n  formComponent$: Observable<any>;\n  @ViewChild('instance')\n  instance: any;\n  constructor(public store: EditorStore) {}\n\n  ngOnInit(): void {\n    this.formComponent$ = this.store\n      .select((state) => state.selected.size)\n      .pipe(map((size) => (size === 1 ? WidgetFormComponent : CanvasFormsComponent)));\n  }\n}\n","<ce-rotate-handle *ngIf=\"hasSelected$ | async\"></ce-rotate-handle>\n<div\n  *ngIf=\"hasSelected$ | async\"\n  class=\"resizable-handle t\"\n  ceDraggable\n  (ceOnStart)=\"resizeStart($event)\"\n  (ceOnMove)=\"resizing($event, 't')\"\n  (ceOnStop)=\"resizeEnd()\"\n></div>\n<div\n  *ngIf=\"hasSelected$ | async\"\n  class=\"resizable-handle r\"\n  ceDraggable\n  (ceOnStart)=\"resizeStart($event)\"\n  (ceOnMove)=\"resizing($event, 'r')\"\n  (ceOnStop)=\"resizeEnd()\"\n></div>\n<div\n  *ngIf=\"hasSelected$ | async\"\n  class=\"resizable-handle b\"\n  ceDraggable\n  (ceOnStart)=\"resizeStart($event)\"\n  (ceOnMove)=\"resizing($event, 'b')\"\n  (ceOnStop)=\"resizeEnd()\"\n></div>\n<div\n  *ngIf=\"hasSelected$ | async\"\n  class=\"resizable-handle l\"\n  ceDraggable\n  (ceOnStart)=\"resizeStart($event)\"\n  (ceOnMove)=\"resizing($event, 'l')\"\n  (ceOnStop)=\"resizeEnd()\"\n></div>\n<div class=\"resizable-handle tr\" ceDraggable (ceOnStart)=\"resizeStart($event)\" (ceOnMove)=\"resizing($event, 'tr')\" (ceOnStop)=\"resizeEnd()\"></div>\n<div class=\"resizable-handle br\" ceDraggable (ceOnStart)=\"resizeStart($event)\" (ceOnMove)=\"resizing($event, 'br')\" (ceOnStop)=\"resizeEnd()\"></div>\n<div class=\"resizable-handle tl\" ceDraggable (ceOnStart)=\"resizeStart($event)\" (ceOnMove)=\"resizing($event, 'tl')\" (ceOnStop)=\"resizeEnd()\"></div>\n<div class=\"resizable-handle bl\" ceDraggable (ceOnStart)=\"resizeStart($event)\" (ceOnMove)=\"resizing($event, 'bl')\" (ceOnStop)=\"resizeEnd()\"></div>\n<div *ngIf=\"hasSelected$ | async\" class=\"t circle\"></div>\n<div *ngIf=\"hasSelected$ | async\" class=\"r circle\"></div>\n<div *ngIf=\"hasSelected$ | async\" class=\"b circle\"></div>\n<div *ngIf=\"hasSelected$ | async\" class=\"l circle\"></div>\n<div class=\"tr circle\"></div>\n<div class=\"br circle\"></div>\n<div class=\"tl circle\"></div>\n<div class=\"bl circle\"></div>\n","import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { updateNodesSize } from '../../actions';\nimport { EditorStore } from '../../services';\nimport { CeUtilsService, IAbsolutePosition, IDOMRect, IRectDirection } from '../../services/utils.service';\nimport { ICanvasPosition, INode, IStore } from '../../store';\n\n@Component({\n  selector: 'ce-resize-handle,[ceResizeHandle]',\n  templateUrl: 'resize-handle.component.html',\n  styleUrls: ['resize-handle.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ResizeHandleComponent {\n  @HostBinding('style.display')\n  public display = 'none';\n  @HostBinding('style.width.px')\n  public width: number;\n  @HostBinding('style.height.px')\n  public height: number;\n  @HostBinding('style.left.px')\n  public left: number;\n  @HostBinding('style.top.px')\n  public top: number;\n  @HostBinding('style.transform')\n  public get transform(): string {\n    return `rotate(${this.rotate ?? 0}deg)`;\n  }\n  public selected: Set<string>;\n  public hasSelected$: Observable<boolean>;\n  private canvasPosition: ICanvasPosition;\n  private rotate: number;\n  private nodes: INode[];\n  private resizeMode: 'GROUP' | 'SINGLE';\n  private groupRectSnapshot: IDOMRect;\n  private groupAbsolutePositionSnapshot: IAbsolutePosition;\n  private resizePointSnapshot: { absolute: [number, number]; relative: [number, number] };\n  private nodePositionSnapshotList = new Map<string, IAbsolutePosition>();\n\n  constructor(private store: EditorStore<IStore>, private utils: CeUtilsService, public eleRef: ElementRef<HTMLElement>) {\n    this.hasSelected$ = this.store.selectDifferent((state) => !!state.selected.size);\n    this.store\n      .selectDifferent((state) => ({ selected: state.selected, canvasPosition: state.canvasPosition, nodes: state.nodes }))\n      .subscribe(({ selected, canvasPosition, nodes }) => {\n        this.display = selected.size ? 'block' : 'none';\n        this.selected = selected;\n        this.canvasPosition = canvasPosition;\n        this.nodes = nodes;\n        if (this.selected.size) {\n          this.refreshResizeHandle();\n        }\n      });\n  }\n\n  refreshResizeHandle(): any {\n    if (!this.selected || !this.nodes) {\n      return;\n    }\n\n    const { left, top, width, height, rotate } = this.utils.getResizeBoundingBox([...this.selected], this.nodes);\n    this.left = left * this.canvasPosition.scale;\n    this.top = top * this.canvasPosition.scale;\n    this.width = width * this.canvasPosition.scale;\n    this.height = height * this.canvasPosition.scale;\n    this.rotate = rotate;\n  }\n\n  resizeStart(event: PointerEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    const { scale } = this.canvasPosition;\n    const canvasRect = document.querySelector('ce-canvas').getBoundingClientRect();\n    this.groupRectSnapshot = { width: this.width / scale, height: this.height / scale, left: this.left / scale, top: this.top / scale };\n    this.groupAbsolutePositionSnapshot = this.utils.getAbsolutePosition(\n      (this.left + this.width / 2) / scale,\n      (this.top + this.height / 2) / scale,\n      this.width / scale,\n      this.height / scale\n    );\n    this.resizePointSnapshot = {\n      absolute: [event.clientX, event.clientY],\n      relative: [(event.clientX - canvasRect.left) / scale, (event.clientY - canvasRect.top) / scale],\n    };\n    this.selected.forEach((id) => {\n      const node = this.utils.getNodeById(id, this.nodes);\n      const nodeAbsolutePosition = this.utils.getAbsolutePosition(\n        node.left + node.width / 2,\n        node.top + node.height / 2,\n        node.width,\n        node.height,\n        node.rotate\n      );\n      if (this.selected.size > 1) {\n        this.resizeMode = 'GROUP';\n        const percentPosition = this.utils.getItemPercentPositionInGroup({ ...this.groupRectSnapshot }, nodeAbsolutePosition);\n        this.nodePositionSnapshotList.set(id, percentPosition);\n      } else {\n        this.resizeMode = 'SINGLE';\n        this.nodePositionSnapshotList.set(id, nodeAbsolutePosition);\n      }\n    });\n  }\n\n  resizing(event: PointerEvent, direction: IRectDirection): void {\n    if (this.resizePointSnapshot && this.groupRectSnapshot && this.resizeMode) {\n      const [mx, my] = [event.clientX - this.resizePointSnapshot.absolute[0], event.clientY - this.resizePointSnapshot.absolute[1]];\n      switch (this.resizeMode) {\n        case 'GROUP':\n          this.resizingNodeList(direction, mx, my);\n          break;\n        case 'SINGLE':\n          this.resizingNode(direction, mx, my);\n          break;\n      }\n    }\n  }\n\n  resizeEnd(): void {\n    this.groupRectSnapshot = null;\n    this.resizePointSnapshot = null;\n    this.nodePositionSnapshotList.clear();\n  }\n\n  resizingNodeList(direction: IRectDirection, mx: number, my: number): void {\n    const { scale } = this.canvasPosition;\n    const { relative } = this.resizePointSnapshot;\n    const endPointer: [number, number] = [relative[0] + mx / scale, relative[1] + my / scale];\n    const line = getGroupDiagonalByDirection(direction, this.groupAbsolutePositionSnapshot);\n    const newPoint = getPointByEndPointer(direction, endPointer, line);\n    const newGroupRect: IDOMRect = getGroupRectByDirectionPoint(direction, this.groupAbsolutePositionSnapshot, newPoint);\n    const nodesSizeMap = new Map<string, IDOMRect>();\n    this.nodePositionSnapshotList.forEach(({ tl, bl, br, tr }, id) => {\n      nodesSizeMap.set(\n        id,\n        this.utils.getRelativePosition({\n          bl: [bl[0] * newGroupRect.width + newGroupRect.left, bl[1] * newGroupRect.height + newGroupRect.top],\n          br: [br[0] * newGroupRect.width + newGroupRect.left, br[1] * newGroupRect.height + newGroupRect.top],\n          tl: [tl[0] * newGroupRect.width + newGroupRect.left, tl[1] * newGroupRect.height + newGroupRect.top],\n          tr: [tr[0] * newGroupRect.width + newGroupRect.left, tr[1] * newGroupRect.height + newGroupRect.top],\n        })\n      );\n    });\n    this.store.dispatch(updateNodesSize(nodesSizeMap));\n  }\n\n  resizingNode(direction: IRectDirection, mx: number, my: number): void {\n    const { scale } = this.canvasPosition;\n    const { relative } = this.resizePointSnapshot;\n    const endPointer: [number, number] = [relative[0] + mx / scale, relative[1] + my / scale];\n    this.nodePositionSnapshotList.forEach((position, id) => {\n      this.store.dispatch(\n        updateNodesSize(\n          new Map<string, IDOMRect>([[id, getDOMRectByDirectionAndPosition(direction, position, endPointer)]])\n        )\n      );\n    });\n  }\n}\n\nfunction getGroupDiagonalByDirection(direction: IRectDirection, absolutePosition: IAbsolutePosition): [[number, number], [number, number]] {\n  const verticalAndHorizontalPosition = CeUtilsService.shared.getVerticalAndHorizontalPointByAbsolutePosition(absolutePosition);\n  switch (direction) {\n    case 'tl':\n    case 'br':\n      return [absolutePosition.tl, absolutePosition.br];\n    case 'tr':\n    case 'bl':\n      return [absolutePosition.tr, absolutePosition.bl];\n    case 't':\n    case 'b':\n      return [verticalAndHorizontalPosition.t, verticalAndHorizontalPosition.b];\n    case 'l':\n    case 'r':\n      return [verticalAndHorizontalPosition.l, verticalAndHorizontalPosition.r];\n  }\n}\n\nfunction getPointByEndPointer(direction: IRectDirection, endPointer: [number, number], line: [[number, number], [number, number]]): [number, number] {\n  switch (direction) {\n    case 'tl':\n    case 'tr':\n      if (endPointer[1] >= CeUtilsService.shared.getPointInLine('y', endPointer[0], line)) {\n        return [endPointer[0], CeUtilsService.shared.getPointInLine('y', endPointer[0], line)];\n      } else {\n        return [CeUtilsService.shared.getPointInLine('x', endPointer[1], line), endPointer[1]];\n      }\n    case 'bl':\n    case 'br':\n      if (endPointer[1] >= CeUtilsService.shared.getPointInLine('y', endPointer[0], line)) {\n        return [CeUtilsService.shared.getPointInLine('x', endPointer[1], line), endPointer[1]];\n      } else {\n        return [endPointer[0], CeUtilsService.shared.getPointInLine('y', endPointer[0], line)];\n      }\n  }\n}\n\nfunction getGroupRectByDirectionPoint(direction: IRectDirection, absolutePoint: IAbsolutePosition, point: [number, number]): IDOMRect {\n  switch (direction) {\n    case 'tl':\n      return { left: point[0], top: point[1], width: absolutePoint.tr[0] - point[0], height: absolutePoint.bl[1] - point[1] };\n    case 'tr':\n      return { left: absolutePoint.tl[0], top: point[1], width: point[0] - absolutePoint.tl[0], height: absolutePoint.br[1] - point[1] };\n    case 'br':\n      return { left: absolutePoint.tl[0], top: absolutePoint.tl[1], width: point[0] - absolutePoint.bl[0], height: point[1] - absolutePoint.tr[1] };\n    case 'bl':\n      return { left: point[0], top: absolutePoint.tl[1], width: absolutePoint.br[0] - point[0], height: point[1] - absolutePoint.tl[1] };\n  }\n}\n\nfunction getDOMRectByDirectionAndPosition(direction: IRectDirection, position: IAbsolutePosition, endPointer: [number, number]): IDOMRect {\n  const { bl, br, tl, tr } = position;\n  let newTLPoint: [number, number];\n  let newTRPoint: [number, number];\n  let newBLPoint: [number, number];\n  let newBRPoint: [number, number];\n  switch (direction) {\n    case 'tl':\n      newTRPoint = CeUtilsService.shared.getVerticalLineCrossPoint(br, tr, endPointer);\n      newBLPoint = CeUtilsService.shared.getVerticalLineCrossPoint(br, bl, endPointer);\n      return CeUtilsService.shared.getRelativePosition({ tl: endPointer, tr: newTRPoint, bl: newBLPoint, br });\n    case 'tr':\n      newTLPoint = CeUtilsService.shared.getVerticalLineCrossPoint(bl, tl, endPointer);\n      newBRPoint = CeUtilsService.shared.getVerticalLineCrossPoint(bl, br, endPointer);\n      return CeUtilsService.shared.getRelativePosition({ tl: newTLPoint, tr: endPointer, bl, br: newBRPoint });\n    case 'bl':\n      newTLPoint = CeUtilsService.shared.getVerticalLineCrossPoint(tr, tl, endPointer);\n      newBRPoint = CeUtilsService.shared.getVerticalLineCrossPoint(tr, br, endPointer);\n      return CeUtilsService.shared.getRelativePosition({ tl: newTLPoint, tr, bl: endPointer, br: newBRPoint });\n    case 'br':\n      newTRPoint = CeUtilsService.shared.getVerticalLineCrossPoint(tl, tr, endPointer);\n      newBLPoint = CeUtilsService.shared.getVerticalLineCrossPoint(tl, bl, endPointer);\n      return CeUtilsService.shared.getRelativePosition({ tl, tr: newTRPoint, bl: newBLPoint, br: endPointer });\n    case 't':\n      newTLPoint = CeUtilsService.shared.getVerticalLineCrossPoint(bl, tl, endPointer);\n      newTRPoint = CeUtilsService.shared.getVerticalLineCrossPoint(br, tr, endPointer);\n      return CeUtilsService.shared.getRelativePosition({ tl: newTLPoint, tr: newTRPoint, bl, br });\n    case 'r':\n      newTRPoint = CeUtilsService.shared.getVerticalLineCrossPoint(tl, tr, endPointer);\n      newBRPoint = CeUtilsService.shared.getVerticalLineCrossPoint(bl, br, endPointer);\n      return CeUtilsService.shared.getRelativePosition({ tl, tr: newTRPoint, bl, br: newBRPoint });\n    case 'b':\n      newBLPoint = CeUtilsService.shared.getVerticalLineCrossPoint(tl, bl, endPointer);\n      newBRPoint = CeUtilsService.shared.getVerticalLineCrossPoint(tr, br, endPointer);\n      return CeUtilsService.shared.getRelativePosition({ tl, tr, bl: newBLPoint, br: newBRPoint });\n    case 'l':\n      newTLPoint = CeUtilsService.shared.getVerticalLineCrossPoint(tr, tl, endPointer);\n      newBLPoint = CeUtilsService.shared.getVerticalLineCrossPoint(br, bl, endPointer);\n      return CeUtilsService.shared.getRelativePosition({ tl: newTLPoint, tr, bl: newBLPoint, br });\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit, Optional, SkipSelf, ViewEncapsulation } from '@angular/core';\nimport { updateNodes } from '../../actions';\nimport { EditorStore } from '../../services';\nimport { CeUtilsService } from '../../services/utils.service';\nimport { INode, IStore } from '../../store';\nimport { ResizeHandleComponent } from '../resize-handle/resize-handle.component';\n\n@Component({\n  selector: 'ce-rotate-handle',\n  templateUrl: 'rotate-handle.component.html',\n  styleUrls: ['rotate-handle.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RotateHandleComponent implements OnInit {\n  private selected: Set<string>;\n  private nodes: INode[];\n  public rotateSnapshot: [number, number, number, number, INode] = null;\n\n  constructor(@Optional() @SkipSelf() private parent: ResizeHandleComponent, private store: EditorStore<IStore>, private utils: CeUtilsService) {}\n\n  ngOnInit(): void {\n    this.store.select((state) => state.selected).subscribe((selected) => (this.selected = selected));\n    this.store.select((state) => state.nodes).subscribe((nodes) => (this.nodes = nodes));\n  }\n\n  rotateStart(event: PointerEvent): void {\n    event.stopPropagation();\n    event.preventDefault();\n    const rect = this.parent.eleRef.nativeElement.getBoundingClientRect().toJSON();\n    this.rotateSnapshot = [\n      rect.left + rect.width / 2,\n      rect.top + rect.height / 2,\n      rect.left + rect.width / 2,\n      rect.top + rect.height / 2 - 100,\n      this.utils.getNodeById([...this.selected][0], this.nodes),\n    ];\n  }\n\n  rotating(event: PointerEvent): void {\n    if (this.rotateSnapshot) {\n      const [cx, cy, sx, sy, node] = this.rotateSnapshot;\n      const ex = event.clientX;\n      const ey = event.clientY;\n      const rotate = Math.round(this.utils.getRotate(cx, cy, sx, sy, ex, ey));\n      this.store.dispatch(updateNodes([{ ...node, rotate: rotate === 360 ? 0 : rotate }]));\n    }\n  }\n\n  rotateStop(): void {\n    this.rotateSnapshot = null;\n  }\n}\n","<div\n  class=\"rotate\"\n  ceDraggable\n  (ceOnStart)=\"rotateStart($event)\"\n  (ceOnMove)=\"rotating($event)\"\n  (ceOnStop)=\"rotateStop()\"\n  [style.cursor]=\"rotateSnapshot && 'grabbing'\"\n>\n  <svg width=\"14\" height=\"14\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M10.536 3.464A5 5 0 1 0 11 10l1.424 1.425a7 7 0 1 1-.475-9.374L13.659.34A.2.2 0 0 1 14 .483V5.5a.5.5 0 0 1-.5.5H8.483a.2.2 0 0 1-.142-.341l2.195-2.195z\"\n      fill-rule=\"nonzero\"\n    ></path>\n  </svg>\n</div>\n","import { Directive, HostBinding } from '@angular/core';\nimport { EditorStore } from '../services';\nimport { IStore } from '../store';\n\n@Directive({\n  selector: '[ceNoZoomArea]',\n  exportAs: 'ceNoZoomArea',\n})\nexport class NoZoomAreaDirective {\n  @HostBinding('style.width.px')\n  public width: number;\n  @HostBinding('style.height.px')\n  public height: number;\n  constructor(private store: EditorStore<IStore>) {\n    this.store\n      .select((state) => ({ ...state.canvasSize, scale: state.canvasPosition.scale }))\n      .subscribe((state) => {\n        this.width = state.width * state.scale;\n        this.height = state.height * state.scale;\n      });\n  }\n}\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter, finalize, switchMap, takeUntil } from 'rxjs/operators';\n\nexport interface ISelectorRect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\n@Directive({\n  selector: '[ceSelector]',\n  exportAs: 'ceSelector',\n})\nexport class SelectorDirective implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n  private move$ = fromEvent<PointerEvent>(window, 'pointermove');\n  private up$ = fromEvent<PointerEvent>(window, 'pointerup');\n  private startPointSnapshot: number[] = null;\n  private boxRect: DOMRect;\n\n  @Input()\n  @InputBoolean()\n  public ceSelectorDisabled = false;\n  @Output()\n  public ceOnSelectorStart = new EventEmitter();\n  @Output()\n  public ceOnSelectorMoving = new EventEmitter<ISelectorRect>();\n  @Output()\n  public ceOnSelectorStop = new EventEmitter();\n  constructor(private eleRef: ElementRef<HTMLDivElement>) {}\n\n  ngOnInit(): void {\n    this.subscription.add(\n      fromEvent<PointerEvent>(this.eleRef.nativeElement, 'pointerdown')\n        .pipe(\n          filter((e) => e.button === 0),\n          filter(() => !this.ceSelectorDisabled),\n          switchMap((ev) => {\n            this.boxRect = this.eleRef.nativeElement.getBoundingClientRect();\n            this.startPointSnapshot = [ev.clientX, ev.clientY];\n            this.ceOnSelectorStart.emit();\n            return this.move$.pipe(\n              finalize(() => {\n                this.startPointSnapshot = null;\n                this.ceOnSelectorStop.emit();\n              }),\n              takeUntil(this.up$)\n            );\n          })\n        )\n        .subscribe((e) => {\n          if (this.startPointSnapshot) {\n            let x: number;\n            let y: number;\n            const [mx, my] = [e.clientX - this.startPointSnapshot[0], e.clientY - this.startPointSnapshot[1]];\n            if (mx >= 0) {\n              x = this.startPointSnapshot[0] - this.boxRect.left;\n            } else {\n              x = e.clientX - this.boxRect.left;\n            }\n            if (my >= 0) {\n              y = this.startPointSnapshot[1] - this.boxRect.top;\n            } else {\n              y = e.clientY - this.boxRect.top;\n            }\n            this.ceOnSelectorMoving.emit({ x, y, width: Math.abs(mx), height: Math.abs(my) });\n          }\n        })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Directive, HostBinding } from '@angular/core';\nimport { EditorStore } from '../services';\nimport { IStore } from '../store';\n\n@Directive({\n  selector: '[ceZoomArea]',\n  exportAs: 'ceZoomArea',\n})\nexport class ZoomAreaDirective {\n  @HostBinding('style.transform-origin')\n  transformOrigin = '0 0';\n  @HostBinding('style.transform')\n  public scale: string;\n  @HostBinding('style.width.px')\n  width: number;\n  @HostBinding('style.height.px')\n  height: number;\n  constructor(private store: EditorStore<IStore>) {\n    this.store\n      .select((state) => ({ ...state.canvasSize, scale: state.canvasPosition.scale }))\n      .subscribe((state) => {\n        this.scale = `perspective(1px) scale(${state.scale})`;\n        this.width = state.width;\n        this.height = state.height;\n      });\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[ceToolbar]',\n  exportAs: 'ceToolbar',\n})\nexport class CeToolbarDirective {\n  constructor() {}\n}\n","<ng-container *ngIf=\"ceToolbar; else elseBlock\">\n  <ng-content select=\"[ceToolbar]\"></ng-content>\n</ng-container>\n\n<ng-template #elseBlock>\n  <nz-card nzSize=\"small\" class=\"tool-bar\">\n    <div class=\"d-flex align-items-center col p-0\">\n      <span class=\"ml-2\">Canvas Title</span>\n      <div class=\"d-flex ml-auto align-items-center\">\n        <button [disabled]=\"copyStatus$ | async\" nz-button nzType=\"link\"><i nz-icon nzIconfont=\"icon-copy\"></i></button>\n        <button nz-button nzType=\"link\"><i nz-icon nzIconfont=\"icon-paste\"></i></button>\n      </div>\n      <div class=\"d-flex ml-auto align-items-center\">\n        <button [disabled]=\"groupStatus$ | async\" (click)=\"groupNodes()\" nz-button nzType=\"link\"><i nz-icon nzIconfont=\"icon-group\"></i></button>\n        <button [disabled]=\"!(breakStatus$ | async)\" (click)=\"breakNode()\" nz-button nzType=\"link\"><i nz-icon nzIconfont=\"icon-break\"></i></button>\n      </div>\n      <div class=\"d-flex ml-auto align-items-center\">\n        <button [disabled]=\"groupStatus$ | async\" nz-button nzType=\"link\"><i nz-icon nzIconfont=\"icon-horizontal-between\"></i></button>\n        <button [disabled]=\"groupStatus$ | async\" nz-button nzType=\"link\"><i nz-icon nzIconfont=\"icon-horizontal-align\"></i></button>\n        <button [disabled]=\"groupStatus$ | async\" nz-button nzType=\"link\"><i nz-icon nzIconfont=\"icon-vertical-between\"></i></button>\n        <button [disabled]=\"groupStatus$ | async\" nz-button nzType=\"link\"><i nz-icon nzIconfont=\"icon-vertical-align\"></i></button>\n        <button [disabled]=\"groupStatus$ | async\" nz-button nzType=\"link\"><i nz-icon nzIconfont=\"icon-left-align\"></i></button>\n        <button [disabled]=\"groupStatus$ | async\" nz-button nzType=\"link\"><i nz-icon nzIconfont=\"icon-right-align\"></i></button>\n        <button [disabled]=\"groupStatus$ | async\" nz-button nzType=\"link\"><i nz-icon nzIconfont=\"icon-top-align\"></i></button>\n        <button [disabled]=\"groupStatus$ | async\" nz-button nzType=\"link\"><i nz-icon nzIconfont=\"icon-bottom-align\"></i></button>\n      </div>\n      <div class=\"d-flex ml-auto align-items-center\">\n        <nz-tag nzMode=\"checkable\" [nzChecked]=\"store.getPanel('LAYERS')?.show\" (nzCheckedChange)=\"store.togglePanelVisible('LAYERS')\">\n          <i nz-icon nzIconfont=\"icon-tuceng\"></i>\n          <span>图层</span>\n        </nz-tag>\n        <nz-tag nzMode=\"checkable\" [nzChecked]=\"store.getPanel('WIDGET_LIST')?.show\" (nzCheckedChange)=\"store.togglePanelVisible('WIDGET_LIST')\">\n          <i nz-icon nzIconfont=\"icon-widgets\"></i>\n          <span>组件</span>\n        </nz-tag>\n        <nz-tag nzMode=\"checkable\" [nzChecked]=\"store.getPanel('PROPERTIES')?.show\" (nzCheckedChange)=\"store.togglePanelVisible('PROPERTIES')\">\n          <i nz-icon nzIconfont=\"icon-widget\"></i>\n          <span>属性</span>\n        </nz-tag>\n      </div>\n      <div class=\"d-flex ml-auto align-items-center\">\n        <button nz-button nzType=\"link\"><i nz-icon nzIconfont=\"icon-run\"></i></button>\n      </div>\n    </div>\n  </nz-card>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, ContentChild, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { breakNode, clearBordered, clearSelected, groupNodes } from '../../actions';\nimport { CeToolbarDirective } from '../../directives';\nimport { EditorStore } from '../../services';\nimport { CeUtilsService } from '../../services/utils.service';\nimport { INode, IStore } from '../../store';\n\n@Component({\n  selector: 'ce-toolbar',\n  exportAs: 'ceToolbar',\n  templateUrl: 'toolbar.component.html',\n  styleUrls: ['toolbar.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToolbarComponent {\n  @ContentChild(CeToolbarDirective)\n  ceToolbar: CeToolbarDirective;\n  public selected$: Observable<Set<string>>;\n  public scale: number;\n  public get copyStatus$(): Observable<boolean> {\n    return this.selected$.pipe(map((state) => state.size === 0));\n  }\n  public groupStatus$: Observable<boolean>;\n  public breakStatus$: Observable<boolean>;\n  private selected: Set<string>;\n  private nodes: INode[];\n\n  constructor(public store: EditorStore<IStore>, private utils: CeUtilsService) {\n    this.store\n      .selectDifferent((state) => ({ selected: state.selected, nodes: state.nodes }))\n      .subscribe(({ selected, nodes }) => {\n        this.selected = selected;\n        this.nodes = nodes;\n      });\n    this.selected$ = this.store.selectDifferent((state) => state.selected);\n    this.groupStatus$ = this.selected$.pipe(map((state) => state.size <= 1));\n    this.breakStatus$ = this.selected$.pipe(\n      map((state) => (state.size === 1 ? [...state][0] : false)),\n      map((id) => id && !!this.utils.getNodeById(id as string, this.nodes)?.children?.length)\n    );\n  }\n\n  groupNodes(): void {\n    const ids = [...this.selected];\n    this.store.dispatch(clearSelected());\n    this.store.dispatch(clearBordered());\n    this.store.dispatch(groupNodes(ids));\n  }\n\n  breakNode(): void {\n    const node = this.utils.getNodeById([...this.selected][0], this.nodes);\n    this.store.dispatch(clearSelected());\n    this.store.dispatch(clearBordered());\n    this.store.dispatch(breakNode(node.id));\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'ce-widget-list',\n  templateUrl: 'widget-list.component.html',\n  styleUrls: ['widget-list.component.less'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class WidgetListComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p>widget-list works!</p>\n","<ng-content select=\"[toolbar]\"></ng-content>\n<div class=\"col p-0 d-flex\">\n  <div\n    #ceDrag=\"ceDraggable\"\n    #container\n    class=\"canvas-container\"\n    ceDraggable\n    ceUseSpace\n    [class.start-drag]=\"ceDrag.spaceKeyDown\"\n    [class.dragging]=\"startPoints\"\n    (ceOnStart)=\"dragStart($event)\"\n    (ceOnMove)=\"dragging($event)\"\n    (ceOnStop)=\"dragEnd()\"\n    ceSelector\n    [ceSelectorDisabled]=\"ceDrag.spaceKeyDown\"\n    (ceOnSelectorStart)=\"selectorStart()\"\n    (ceOnSelectorMoving)=\"selectorMoving($event)\"\n    (ceOnSelectorStop)=\"selectorEnd()\"\n  >\n    <div class=\"canvas-content\" [style.transform]=\"matrix\">\n      <div ceNoZoomArea>\n        <ce-canvas-background></ce-canvas-background>\n        <ce-canvas-grid></ce-canvas-grid>\n      </div>\n      <div ceZoomArea>\n        <!-- <ce-canvas></ce-canvas> -->\n      </div>\n      <div ceNoZoomArea>\n        <ce-bordered-area></ce-bordered-area>\n        <ce-resize-handle></ce-resize-handle>\n        <div\n          cx\n          [class.active]=\"(refLineState$ | async)?.cx?.state\"\n          [style.top.px]=\"(refLineState$ | async)?.cx?.position * canvasPosition.scale\"\n          class=\"ref-line y\"\n        ></div>\n        <div\n          cy\n          [class.active]=\"(refLineState$ | async)?.cy?.state\"\n          [style.left.px]=\"(refLineState$ | async)?.cy?.position * canvasPosition.scale\"\n          class=\"ref-line x\"\n        ></div>\n        <div\n          tx\n          [class.active]=\"(refLineState$ | async)?.tx?.state\"\n          [style.top.px]=\"(refLineState$ | async)?.tx?.position * canvasPosition.scale\"\n          class=\"ref-line y\"\n        ></div>\n        <div\n          bx\n          [class.active]=\"(refLineState$ | async)?.bx?.state\"\n          [style.top.px]=\"(refLineState$ | async)?.bx?.position * canvasPosition.scale\"\n          class=\"ref-line y\"\n        ></div>\n        <div\n          ly\n          [class.active]=\"(refLineState$ | async)?.ly?.state\"\n          [style.left.px]=\"(refLineState$ | async)?.ly?.position * canvasPosition.scale\"\n          class=\"ref-line x\"\n        ></div>\n        <div\n          ry\n          [class.active]=\"(refLineState$ | async)?.ry?.state\"\n          [style.left.px]=\"(refLineState$ | async)?.ry?.position * canvasPosition.scale\"\n          class=\"ref-line x\"\n        ></div>\n      </div>\n    </div>\n    <div\n      class=\"selector\"\n      *ngIf=\"selectorRect\"\n      [style.left.px]=\"selectorRect.x\"\n      [style.top.px]=\"selectorRect.y\"\n      [style.width.px]=\"selectorRect.width\"\n      [style.height.px]=\"selectorRect.height\"\n    ></div>\n  </div>\n</div>\n\n<ng-container *ngFor=\"let panel of store.panels$ | async; trackBy: panelsTrackByFn\">\n  <ce-panel *ngIf=\"panel.show\" [panel]=\"panel\"></ce-panel>\n</ng-container>\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { fromEvent, Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { clearBordered, clearSelected, setBorderedNodes, setSelectedNodes, updateCanvasPosition } from './actions';\nimport { ISelectorRect } from './directives/selector.directive';\nimport { EditorStore } from './services/store.service';\nimport { ICanvasPosition, INode, IPanel, IRefLineDirection, IRefLineState, IStore } from './store';\n\n@Component({\n  selector: 'ce-editor',\n  templateUrl: 'angular-editor-lib.component.html',\n  styleUrls: ['angular-editor-lib.less'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [EditorStore],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'ceEditor',\n})\nexport class AngularEditorLibComponent<T = any> {\n  @Input()\n  set state(state: Partial<IStore<T>>) {\n    this.store?.setState((oldState) => ({ ...oldState, ...state }));\n  }\n  @ViewChild('container', { read: ElementRef, static: true })\n  private containerEleRef: ElementRef<HTMLDivElement>;\n  private subscription = new Subscription();\n  public canvasPosition: ICanvasPosition;\n  public startPoints: number[] = [];\n  public matrix: string;\n  public selectorRect: ISelectorRect = null;\n  public nodes: INode[];\n  public refLineState$: Observable<{ [P in IRefLineDirection]: IRefLineState }>;\n  private nodesRectSnapshot: Map<string, Partial<DOMRect>> = null;\n  private nodeIdList: string[] = null;\n  constructor(public store: EditorStore) {\n    this.store\n      .select((state) => state.canvasPosition)\n      .subscribe((canvasPosition) => {\n        this.canvasPosition = canvasPosition;\n        this.matrix = `translate3d(${this.canvasPosition.left}px,${this.canvasPosition.top}px,0)`;\n      });\n\n    this.store.select((state) => state.nodes).subscribe((nodes) => (this.nodes = nodes));\n    this.refLineState$ = this.store.selectDifferent((state) => state.refLineState);\n  }\n\n  ngAfterViewInit(): void {\n    this.listenScaleEvent();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  panelsTrackByFn(_i: number, panel: IPanel<any>) {\n    return `${panel.key}_${panel.show.toString()}`;\n  }\n\n  dragStart(ev: PointerEvent): void {\n    this.startPoints = [ev.clientX, ev.clientY, this.canvasPosition.left, this.canvasPosition.top];\n  }\n\n  dragging(ev: PointerEvent): void {\n    if (this.startPoints) {\n      const [sx, sy, left, top] = this.startPoints;\n      const [mx, my] = [ev.clientX - sx, ev.clientY - sy];\n      this.store.dispatch(updateCanvasPosition({ left: left + mx, top: top + my }));\n    }\n  }\n\n  dragEnd(): void {\n    this.startPoints = null;\n  }\n\n  listenScaleEvent(): void {\n    const scaleEle = this.containerEleRef.nativeElement;\n    this.subscription.add(\n      fromEvent<WheelEvent & { wheelDelta: number }>(scaleEle, 'wheel')\n        .pipe(filter((e) => e.ctrlKey))\n        .subscribe((e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          const containerBox = scaleEle.getBoundingClientRect();\n          const wheelDelta = (e.wheelDelta / 120 || -e.deltaY / 3) * 0.05;\n          const [x, y] = [e.clientX - containerBox.left, e.clientY - containerBox.top];\n          if (this.canvasPosition.scale + wheelDelta >= 0.2) {\n            this.store.dispatch(\n              updateCanvasPosition({\n                scale: this.canvasPosition.scale + wheelDelta,\n                left: (this.canvasPosition.left - x) * (wheelDelta / this.canvasPosition.scale) + this.canvasPosition.left,\n                top: (this.canvasPosition.top - y) * (wheelDelta / this.canvasPosition.scale) + this.canvasPosition.top,\n              })\n            );\n          }\n        })\n    );\n  }\n\n  selectorStart(): void {\n    this.clearSelectAndBorder();\n    const boxRect = this.containerEleRef.nativeElement.getBoundingClientRect();\n    this.nodesRectSnapshot = new Map<string, Partial<DOMRect>>();\n    this.nodes\n      .filter((node) => !node.locked)\n      .forEach((node) => {\n        const rect = document.querySelector(`#box-item-${node.id}`)?.getBoundingClientRect();\n        if (rect) {\n          const { width, height, left, top } = rect;\n          this.nodesRectSnapshot.set(node.id, { width, height, left: left - boxRect.left, top: top - boxRect.top });\n        }\n      });\n  }\n\n  selectorMoving(rect: ISelectorRect): void {\n    this.selectorRect = rect;\n    this.nodeIdList = [];\n    this.nodesRectSnapshot.forEach((item, id) => {\n      if (isInBound(item, this.selectorRect)) {\n        this.nodeIdList.push(id);\n      }\n    });\n    this.store.dispatch(setBorderedNodes<T>(this.nodeIdList));\n    this.store.dispatch(setSelectedNodes(this.nodeIdList));\n  }\n\n  selectorEnd(): void {\n    this.nodeIdList = [];\n    this.selectorRect = null;\n    this.nodesRectSnapshot = null;\n  }\n\n  private clearSelectAndBorder(): void {\n    this.store.dispatch(clearBordered<T>());\n    this.store.dispatch(clearSelected<T>());\n  }\n}\n\nfunction isInBound(rect: Partial<DOMRect>, bound: ISelectorRect): boolean {\n  return (\n    rect.left >= bound.x && rect.top >= bound.y && rect.left + rect.width <= bound.x + bound.width && rect.top + rect.height <= bound.y + bound.height\n  );\n}\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Injector, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { IconDefinition } from '@ant-design/icons-angular';\nimport * as AllIcons from '@ant-design/icons-angular/icons';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCollapseModule } from 'ng-zorro-antd/collapse';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzIconModule, NzIconService } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzPipesModule } from 'ng-zorro-antd/pipes';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTabsModule } from 'ng-zorro-antd/tabs';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\nimport { AngularEditorLibComponent } from './angular-editor-lib.component';\nimport { BorderedAreaComponent } from './components/bordered-area/bordered-area.component';\nimport { BoxItemComponent } from './components/box-item/box-item.component';\nimport { CanvasBackgroundComponent } from './components/canvas-background/canvas-background.component';\nimport { CanvasGridComponent } from './components/canvas-grid/canvas-grid.component';\nimport { CanvasComponent } from './components/canvas/canvas.component';\nimport { LayerTreeComponent } from './components/layer-tree/layer-tree.component';\nimport { PanelComponent } from './components/panel/panel.component';\nimport { CanvasFormsComponent } from './components/property-form/forms/canvas-forms/canvas-forms.component';\nimport { WidgetFormComponent } from './components/property-form/forms/widget-form/widget-form.component';\nimport { PropertyFormComponent } from './components/property-form/property-form.component';\nimport { ResizeHandleComponent } from './components/resize-handle/resize-handle.component';\nimport { RotateHandleComponent } from './components/rotate-handle/rotate-handle.component';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { WidgetListComponent } from './components/widget-list/widget-list.component';\nimport { CeToolbarDirective } from './directives';\nimport { DraggableDirective } from './directives/draggable.directive';\nimport { NoZoomAreaDirective } from './directives/no-zoom-area.directive';\nimport { SelectorDirective } from './directives/selector.directive';\nimport { ZoomAreaDirective } from './directives/zoom-area.directive';\n\nconst antDesignIcons = AllIcons as {\n  [key: string]: IconDefinition;\n};\nconst ICONS: IconDefinition[] = Object.keys(antDesignIcons).map((key) => antDesignIcons[key]);\n\nconst ANTD_MODULES = [\n  NzCardModule,\n  NzIconModule.forRoot(ICONS),\n  NzButtonModule,\n  NzInputNumberModule,\n  NzTabsModule,\n  NzTreeModule,\n  NzDropDownModule,\n  NzPipesModule,\n  NzToolTipModule,\n  NzFormModule,\n  NzInputModule,\n  NzTagModule,\n  NzDividerModule,\n  NzCollapseModule,\n  NzSwitchModule,\n  NzSelectModule,\n];\n\nconst CDK_MODULES = [DragDropModule];\n\nconst FORMS_COMPONENT = [CanvasFormsComponent, WidgetFormComponent];\n\nconst COMPONENTS = [\n  ToolbarComponent,\n  LayerTreeComponent,\n  WidgetListComponent,\n  CanvasComponent,\n  CanvasGridComponent,\n  CanvasBackgroundComponent,\n  BoxItemComponent,\n  ResizeHandleComponent,\n  RotateHandleComponent,\n  BorderedAreaComponent,\n  AngularEditorLibComponent,\n  PanelComponent,\n  PropertyFormComponent,\n];\n\nconst DIRECTIVES = [NoZoomAreaDirective, ZoomAreaDirective, DraggableDirective, SelectorDirective, CeToolbarDirective];\n\n@NgModule({\n  imports: [CommonModule, BrowserAnimationsModule, HttpClientModule, FormsModule, ReactiveFormsModule, ...ANTD_MODULES, ...CDK_MODULES],\n  declarations: [...COMPONENTS, ...DIRECTIVES, ...FORMS_COMPONENT],\n  exports: [...COMPONENTS, ...DIRECTIVES],\n})\nexport class AngularEditorLibModule {\n  constructor(private injector: Injector) {\n    this.injector.get(NzIconService).fetchFromIconfont({ scriptUrl: 'https://at.alicdn.com/t/font_1310204_lmnttxhl5lk.js' });\n  }\n}\n"]}